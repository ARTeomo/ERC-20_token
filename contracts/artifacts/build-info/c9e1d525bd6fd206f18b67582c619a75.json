{
	"id": "c9e1d525bd6fd206f18b67582c619a75",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/ICFT.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\n\ncontract IndependentCapitalFundToken is ERC20, Ownable {\n    // Addresses for token distribution\n    address public investors;\n    address public projectTeam;\n    address public reserve;\n    address public marketing;\n    address public communityIncentives;\n\n    // Mapping to track lock-up periods\n    mapping(address => uint256) public lockupExpiry;\n\n    constructor(\n        address initialOwner,\n        address _investors,\n        address _projectTeam,\n        address _reserve,\n        address _marketing,\n        address _communityIncentives,\n        uint256 initialSupply\n    ) ERC20(\"Independent Capital Fund Token\", \"ICFT\") Ownable(initialOwner) {\n        require(initialOwner != address(0), \"Invalid owner address\");\n\n        // Assign addresses for distribution\n        investors = _investors;\n        projectTeam = _projectTeam;\n        reserve = _reserve;\n        marketing = _marketing;\n        communityIncentives = _communityIncentives;\n\n        // Calculate and distribute the initial supply\n        uint256 investorsAmount = (initialSupply * 60) / 100;\n        uint256 projectTeamAmount = (initialSupply * 20) / 100;\n        uint256 reserveAmount = (initialSupply * 10) / 100;\n        uint256 marketingAmount = (initialSupply * 5) / 100;\n        uint256 communityIncentivesAmount = (initialSupply * 5) / 100;\n\n        // Mint tokens to each address\n        _mint(_investors, investorsAmount);\n        _mint(_projectTeam, projectTeamAmount);\n        _mint(_reserve, reserveAmount);\n        _mint(_marketing, marketingAmount);\n        _mint(_communityIncentives, communityIncentivesAmount);\n\n        // Set lock-up period for the project team\n        lockupExpiry[_projectTeam] = block.timestamp + 365 days;\n    }\n\n    // Override the transfer function to enforce lock-up period\n    function transfer(address to, uint256 amount) public override returns (bool) {\n        require(block.timestamp >= lockupExpiry[msg.sender], \"Tokens are locked\");\n        return super.transfer(to, amount);\n    }\n\n    // Override the transferFrom function to enforce lock-up period\n    function transferFrom(address from, address to, uint256 amount) public override returns (bool) {\n        require(block.timestamp >= lockupExpiry[from], \"Tokens are locked\");\n        return super.transferFrom(from, to, amount);\n    }\n\n    // Function to mint new tokens, only accessible by the owner\n    function mint(address to, uint256 amount) public onlyOwner {\n        _mint(to, amount);\n    }\n\n    // Function to burn tokens from the owner's balance, only accessible by the owner\n    function burn(uint256 amount) public onlyOwner {\n        _burn(msg.sender, amount);\n    }\n\n    // Placeholder function for upgrading the contract, only accessible by the owner\n    function upgradeContract() public onlyOwner {\n        // Logic for upgrading the contract goes here\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC-20\n * applications.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     *\n     * ```solidity\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xbf61ab2ae1d575a17ea58fbb99ca232baddcc4e0eeea180e84cbc74b0c348b31\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4e0968705bad99747a8e5288aa008678c2be2f471f919dce3925a3cc4f1dee09\",\"dweb:/ipfs/QmbAFnCQfo4tw6ssfQSjhA5LzwHWNNryXN8bX7ty8jiqqn\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 307,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 313,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 315,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 317,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 319,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC-20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC-20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/ICFT.sol": {
				"IndependentCapitalFundToken": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "initialOwner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_investors",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_projectTeam",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_reserve",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_marketing",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_communityIncentives",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "initialSupply",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "communityIncentives",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "investors",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "lockupExpiry",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "marketing",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "projectTeam",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "reserve",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "upgradeContract",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/ICFT.sol\":167:3025  contract IndependentCapitalFundToken is ERC20, Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/ICFT.sol\":523:1896  constructor(... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/ICFT.sol\":808:820  initialOwner */\n  dup7\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1601:1714  constructor(string memory name_, string memory symbol_) {... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x1e\n  dup2\n  mstore\n  0x20\n  add\n  0x496e646570656e64656e74204361706974616c2046756e6420546f6b656e0000\n  dup2\n  mstore\n  pop\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x04\n  dup2\n  mstore\n  0x20\n  add\n  0x4943465400000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1675:1680  name_ */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1667:1672  _name */\n  0x03\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1667:1680  _name = name_ */\n  swap1\n  dup2\n  tag_8\n  swap2\n  swap1\n  tag_9\n  jump\t// in\ntag_8:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1700:1707  symbol_ */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1690:1697  _symbol */\n  0x04\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1690:1707  _symbol = symbol_ */\n  swap1\n  dup2\n  tag_10\n  swap2\n  swap1\n  tag_9\n  jump\t// in\ntag_10:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1601:1714  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1298  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1285  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_12\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_13\n  swap2\n  swap1\n  tag_14\n  jump\t// in\ntag_13:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_12:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_15\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  shl(0x20, tag_16)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  0x20\n  shr\n  jump\t// in\ntag_15:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1225:1412  constructor(address initialOwner) {... */\n  pop\n    /* \"contracts/ICFT.sol\":864:865  0 */\n  0x00\n    /* \"contracts/ICFT.sol\":840:866  initialOwner != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/ICFT.sol\":840:852  initialOwner */\n  dup8\n    /* \"contracts/ICFT.sol\":840:866  initialOwner != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"contracts/ICFT.sol\":832:892  require(initialOwner != address(0), \"Invalid owner address\") */\n  tag_18\n  jumpi\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_19\n  swap1\n  tag_20\n  jump\t// in\ntag_19:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_18:\n    /* \"contracts/ICFT.sol\":960:970  _investors */\n  dup6\n    /* \"contracts/ICFT.sol\":948:957  investors */\n  0x06\n  0x00\n    /* \"contracts/ICFT.sol\":948:970  investors = _investors */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/ICFT.sol\":994:1006  _projectTeam */\n  dup5\n    /* \"contracts/ICFT.sol\":980:991  projectTeam */\n  0x07\n  0x00\n    /* \"contracts/ICFT.sol\":980:1006  projectTeam = _projectTeam */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/ICFT.sol\":1026:1034  _reserve */\n  dup4\n    /* \"contracts/ICFT.sol\":1016:1023  reserve */\n  0x08\n  0x00\n    /* \"contracts/ICFT.sol\":1016:1034  reserve = _reserve */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/ICFT.sol\":1056:1066  _marketing */\n  dup3\n    /* \"contracts/ICFT.sol\":1044:1053  marketing */\n  0x09\n  0x00\n    /* \"contracts/ICFT.sol\":1044:1066  marketing = _marketing */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/ICFT.sol\":1098:1118  _communityIncentives */\n  dup2\n    /* \"contracts/ICFT.sol\":1076:1095  communityIncentives */\n  0x0a\n  0x00\n    /* \"contracts/ICFT.sol\":1076:1118  communityIncentives = _communityIncentives */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/ICFT.sol\":1184:1207  uint256 investorsAmount */\n  0x00\n    /* \"contracts/ICFT.sol\":1233:1236  100 */\n  0x64\n    /* \"contracts/ICFT.sol\":1227:1229  60 */\n  0x3c\n    /* \"contracts/ICFT.sol\":1211:1224  initialSupply */\n  dup4\n    /* \"contracts/ICFT.sol\":1211:1229  initialSupply * 60 */\n  tag_21\n  swap2\n  swap1\n  tag_22\n  jump\t// in\ntag_21:\n    /* \"contracts/ICFT.sol\":1210:1236  (initialSupply * 60) / 100 */\n  tag_23\n  swap2\n  swap1\n  tag_24\n  jump\t// in\ntag_23:\n    /* \"contracts/ICFT.sol\":1184:1236  uint256 investorsAmount = (initialSupply * 60) / 100 */\n  swap1\n  pop\n    /* \"contracts/ICFT.sol\":1246:1271  uint256 projectTeamAmount */\n  0x00\n    /* \"contracts/ICFT.sol\":1297:1300  100 */\n  0x64\n    /* \"contracts/ICFT.sol\":1291:1293  20 */\n  0x14\n    /* \"contracts/ICFT.sol\":1275:1288  initialSupply */\n  dup5\n    /* \"contracts/ICFT.sol\":1275:1293  initialSupply * 20 */\n  tag_25\n  swap2\n  swap1\n  tag_22\n  jump\t// in\ntag_25:\n    /* \"contracts/ICFT.sol\":1274:1300  (initialSupply * 20) / 100 */\n  tag_26\n  swap2\n  swap1\n  tag_24\n  jump\t// in\ntag_26:\n    /* \"contracts/ICFT.sol\":1246:1300  uint256 projectTeamAmount = (initialSupply * 20) / 100 */\n  swap1\n  pop\n    /* \"contracts/ICFT.sol\":1310:1331  uint256 reserveAmount */\n  0x00\n    /* \"contracts/ICFT.sol\":1357:1360  100 */\n  0x64\n    /* \"contracts/ICFT.sol\":1351:1353  10 */\n  0x0a\n    /* \"contracts/ICFT.sol\":1335:1348  initialSupply */\n  dup6\n    /* \"contracts/ICFT.sol\":1335:1353  initialSupply * 10 */\n  tag_27\n  swap2\n  swap1\n  tag_22\n  jump\t// in\ntag_27:\n    /* \"contracts/ICFT.sol\":1334:1360  (initialSupply * 10) / 100 */\n  tag_28\n  swap2\n  swap1\n  tag_24\n  jump\t// in\ntag_28:\n    /* \"contracts/ICFT.sol\":1310:1360  uint256 reserveAmount = (initialSupply * 10) / 100 */\n  swap1\n  pop\n    /* \"contracts/ICFT.sol\":1370:1393  uint256 marketingAmount */\n  0x00\n    /* \"contracts/ICFT.sol\":1418:1421  100 */\n  0x64\n    /* \"contracts/ICFT.sol\":1413:1414  5 */\n  0x05\n    /* \"contracts/ICFT.sol\":1397:1410  initialSupply */\n  dup7\n    /* \"contracts/ICFT.sol\":1397:1414  initialSupply * 5 */\n  tag_29\n  swap2\n  swap1\n  tag_22\n  jump\t// in\ntag_29:\n    /* \"contracts/ICFT.sol\":1396:1421  (initialSupply * 5) / 100 */\n  tag_30\n  swap2\n  swap1\n  tag_24\n  jump\t// in\ntag_30:\n    /* \"contracts/ICFT.sol\":1370:1421  uint256 marketingAmount = (initialSupply * 5) / 100 */\n  swap1\n  pop\n    /* \"contracts/ICFT.sol\":1431:1464  uint256 communityIncentivesAmount */\n  0x00\n    /* \"contracts/ICFT.sol\":1489:1492  100 */\n  0x64\n    /* \"contracts/ICFT.sol\":1484:1485  5 */\n  0x05\n    /* \"contracts/ICFT.sol\":1468:1481  initialSupply */\n  dup8\n    /* \"contracts/ICFT.sol\":1468:1485  initialSupply * 5 */\n  tag_31\n  swap2\n  swap1\n  tag_22\n  jump\t// in\ntag_31:\n    /* \"contracts/ICFT.sol\":1467:1492  (initialSupply * 5) / 100 */\n  tag_32\n  swap2\n  swap1\n  tag_24\n  jump\t// in\ntag_32:\n    /* \"contracts/ICFT.sol\":1431:1492  uint256 communityIncentivesAmount = (initialSupply * 5) / 100 */\n  swap1\n  pop\n    /* \"contracts/ICFT.sol\":1542:1576  _mint(_investors, investorsAmount) */\n  tag_33\n    /* \"contracts/ICFT.sol\":1548:1558  _investors */\n  dup12\n    /* \"contracts/ICFT.sol\":1560:1575  investorsAmount */\n  dup7\n    /* \"contracts/ICFT.sol\":1542:1547  _mint */\n  shl(0x20, tag_34)\n    /* \"contracts/ICFT.sol\":1542:1576  _mint(_investors, investorsAmount) */\n  0x20\n  shr\n  jump\t// in\ntag_33:\n    /* \"contracts/ICFT.sol\":1586:1624  _mint(_projectTeam, projectTeamAmount) */\n  tag_35\n    /* \"contracts/ICFT.sol\":1592:1604  _projectTeam */\n  dup11\n    /* \"contracts/ICFT.sol\":1606:1623  projectTeamAmount */\n  dup6\n    /* \"contracts/ICFT.sol\":1586:1591  _mint */\n  shl(0x20, tag_34)\n    /* \"contracts/ICFT.sol\":1586:1624  _mint(_projectTeam, projectTeamAmount) */\n  0x20\n  shr\n  jump\t// in\ntag_35:\n    /* \"contracts/ICFT.sol\":1634:1664  _mint(_reserve, reserveAmount) */\n  tag_36\n    /* \"contracts/ICFT.sol\":1640:1648  _reserve */\n  dup10\n    /* \"contracts/ICFT.sol\":1650:1663  reserveAmount */\n  dup5\n    /* \"contracts/ICFT.sol\":1634:1639  _mint */\n  shl(0x20, tag_34)\n    /* \"contracts/ICFT.sol\":1634:1664  _mint(_reserve, reserveAmount) */\n  0x20\n  shr\n  jump\t// in\ntag_36:\n    /* \"contracts/ICFT.sol\":1674:1708  _mint(_marketing, marketingAmount) */\n  tag_37\n    /* \"contracts/ICFT.sol\":1680:1690  _marketing */\n  dup9\n    /* \"contracts/ICFT.sol\":1692:1707  marketingAmount */\n  dup4\n    /* \"contracts/ICFT.sol\":1674:1679  _mint */\n  shl(0x20, tag_34)\n    /* \"contracts/ICFT.sol\":1674:1708  _mint(_marketing, marketingAmount) */\n  0x20\n  shr\n  jump\t// in\ntag_37:\n    /* \"contracts/ICFT.sol\":1718:1772  _mint(_communityIncentives, communityIncentivesAmount) */\n  tag_38\n    /* \"contracts/ICFT.sol\":1724:1744  _communityIncentives */\n  dup8\n    /* \"contracts/ICFT.sol\":1746:1771  communityIncentivesAmount */\n  dup3\n    /* \"contracts/ICFT.sol\":1718:1723  _mint */\n  shl(0x20, tag_34)\n    /* \"contracts/ICFT.sol\":1718:1772  _mint(_communityIncentives, communityIncentivesAmount) */\n  0x20\n  shr\n  jump\t// in\ntag_38:\n    /* \"contracts/ICFT.sol\":1881:1889  365 days */\n  0x01e13380\n    /* \"contracts/ICFT.sol\":1863:1878  block.timestamp */\n  timestamp\n    /* \"contracts/ICFT.sol\":1863:1889  block.timestamp + 365 days */\n  tag_39\n  swap2\n  swap1\n  tag_40\n  jump\t// in\ntag_39:\n    /* \"contracts/ICFT.sol\":1834:1846  lockupExpiry */\n  0x0b\n    /* \"contracts/ICFT.sol\":1834:1860  lockupExpiry[_projectTeam] */\n  0x00\n    /* \"contracts/ICFT.sol\":1847:1859  _projectTeam */\n  dup13\n    /* \"contracts/ICFT.sol\":1834:1860  lockupExpiry[_projectTeam] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"contracts/ICFT.sol\":1834:1889  lockupExpiry[_projectTeam] = block.timestamp + 365 days */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/ICFT.sol\":822:1896  {... */\n  pop\n  pop\n  pop\n  pop\n  pop\n    /* \"contracts/ICFT.sol\":523:1896  constructor(... */\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n    /* \"contracts/ICFT.sol\":167:3025  contract IndependentCapitalFundToken is ERC20, Ownable {... */\n  jump(tag_41)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_16:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  0x05\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n  0x05\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7458:7666  function _mint(address account, uint256 value) internal {... */\ntag_34:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7547:7548  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7549  account == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7535  account */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7549  account == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7524:7615  if (account == address(0)) {... */\n  tag_44\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7601:7602  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7572:7604  ERC20InvalidReceiver(address(0)) */\n  mload(0x40)\n  0xec442f0500000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_45\n  swap2\n  swap1\n  tag_14\n  jump\t// in\ntag_45:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7524:7615  if (account == address(0)) {... */\ntag_44:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7624:7659  _update(address(0), account, value) */\n  tag_46\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7640:7641  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7644:7651  account */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7653:7658  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7624:7631  _update */\n  shl(0x20, tag_47)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7624:7659  _update(address(0), account, value) */\n  0x20\n  shr\n  jump\t// in\ntag_46:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7458:7666  function _mint(address account, uint256 value) internal {... */\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6008:7115  function _update(address from, address to, uint256 value) internal virtual {... */\ntag_47:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6113:6114  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6097:6115  from == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6097:6101  from */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6097:6115  from == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\n  tag_49\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6249:6254  value */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6233:6245  _totalSupply */\n  0x02\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6233:6254  _totalSupply += value */\n  dup3\n  dup3\n  sload\n  tag_50\n  swap2\n  swap1\n  tag_40\n  jump\t// in\ntag_50:\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\n  jump(tag_51)\ntag_49:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6285:6304  uint256 fromBalance */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6307:6316  _balances */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6307:6322  _balances[from] */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6317:6321  from */\n  dup6\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6307:6322  _balances[from] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  sload\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6285:6322  uint256 fromBalance = _balances[from] */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6354:6359  value */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6340:6351  fromBalance */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6340:6359  fromBalance < value */\n  lt\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6336:6451  if (fromBalance < value) {... */\n  iszero\n  tag_52\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6411:6415  from */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6417:6428  fromBalance */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6430:6435  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6386:6436  ERC20InsufficientBalance(from, fromBalance, value) */\n  mload(0x40)\n  0xe450d38c00000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_53\n  swap4\n  swap3\n  swap2\n  swap1\n  tag_54\n  jump\t// in\ntag_53:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6336:6451  if (fromBalance < value) {... */\ntag_52:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6603:6608  value */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6589:6600  fromBalance */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6589:6608  fromBalance - value */\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6580  _balances */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6586  _balances[from] */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6581:6585  from */\n  dup7\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6586  _balances[from] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6608  _balances[from] = fromBalance - value */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:6633  {... */\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\ntag_51:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6661:6662  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6647:6663  to == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6647:6649  to */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6647:6663  to == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\n  tag_55\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6826:6831  value */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6810:6822  _totalSupply */\n  0x02\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6810:6831  _totalSupply -= value */\n  dup3\n  dup3\n  sload\n  sub\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\n  jump(tag_56)\ntag_55:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7038:7043  value */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7030  _balances */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7034  _balances[to] */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7031:7033  to */\n  dup5\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7034  _balances[to] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7043  _balances[to] += value */\n  dup3\n  dup3\n  sload\n  add\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\ntag_56:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7098:7100  to */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7092:7096  from */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7102:7107  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n  mload(0x40)\n  tag_57\n  swap2\n  swap1\n  tag_58\n  jump\t// in\ntag_57:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6008:7115  function _update(address from, address to, uint256 value) internal virtual {... */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_60:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_62:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_63:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_101\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_62\n  jump\t// in\ntag_101:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_64:\n    /* \"#utility.yul\":641:665   */\n  tag_103\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_63\n  jump\t// in\ntag_103:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_104\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  dup1\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_104:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_65:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_106\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_64\n  jump\t// in\ntag_106:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:922   */\ntag_66:\n    /* \"#utility.yul\":882:889   */\n  0x00\n    /* \"#utility.yul\":911:916   */\n  dup2\n    /* \"#utility.yul\":900:916   */\n  swap1\n  pop\n    /* \"#utility.yul\":845:922   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":928:1050   */\ntag_67:\n    /* \"#utility.yul\":1001:1025   */\n  tag_109\n    /* \"#utility.yul\":1019:1024   */\n  dup2\n    /* \"#utility.yul\":1001:1025   */\n  tag_66\n  jump\t// in\ntag_109:\n    /* \"#utility.yul\":994:999   */\n  dup2\n    /* \"#utility.yul\":991:1026   */\n  eq\n    /* \"#utility.yul\":981:1044   */\n  tag_110\n  jumpi\n    /* \"#utility.yul\":1040:1041   */\n  0x00\n    /* \"#utility.yul\":1037:1038   */\n  dup1\n    /* \"#utility.yul\":1030:1042   */\n  revert\n    /* \"#utility.yul\":981:1044   */\ntag_110:\n    /* \"#utility.yul\":928:1050   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1056:1199   */\ntag_68:\n    /* \"#utility.yul\":1113:1118   */\n  0x00\n    /* \"#utility.yul\":1144:1150   */\n  dup2\n    /* \"#utility.yul\":1138:1151   */\n  mload\n    /* \"#utility.yul\":1129:1151   */\n  swap1\n  pop\n    /* \"#utility.yul\":1160:1193   */\n  tag_112\n    /* \"#utility.yul\":1187:1192   */\n  dup2\n    /* \"#utility.yul\":1160:1193   */\n  tag_67\n  jump\t// in\ntag_112:\n    /* \"#utility.yul\":1056:1199   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1205:2496   */\ntag_3:\n    /* \"#utility.yul\":1329:1335   */\n  0x00\n    /* \"#utility.yul\":1337:1343   */\n  dup1\n    /* \"#utility.yul\":1345:1351   */\n  0x00\n    /* \"#utility.yul\":1353:1359   */\n  dup1\n    /* \"#utility.yul\":1361:1367   */\n  0x00\n    /* \"#utility.yul\":1369:1375   */\n  dup1\n    /* \"#utility.yul\":1377:1383   */\n  0x00\n    /* \"#utility.yul\":1426:1429   */\n  0xe0\n    /* \"#utility.yul\":1414:1423   */\n  dup9\n    /* \"#utility.yul\":1405:1412   */\n  dup11\n    /* \"#utility.yul\":1401:1424   */\n  sub\n    /* \"#utility.yul\":1397:1430   */\n  slt\n    /* \"#utility.yul\":1394:1514   */\n  iszero\n  tag_114\n  jumpi\n    /* \"#utility.yul\":1433:1512   */\n  tag_115\n  tag_60\n  jump\t// in\ntag_115:\n    /* \"#utility.yul\":1394:1514   */\ntag_114:\n    /* \"#utility.yul\":1553:1554   */\n  0x00\n    /* \"#utility.yul\":1578:1642   */\n  tag_116\n    /* \"#utility.yul\":1634:1641   */\n  dup11\n    /* \"#utility.yul\":1625:1631   */\n  dup3\n    /* \"#utility.yul\":1614:1623   */\n  dup12\n    /* \"#utility.yul\":1610:1632   */\n  add\n    /* \"#utility.yul\":1578:1642   */\n  tag_65\n  jump\t// in\ntag_116:\n    /* \"#utility.yul\":1568:1642   */\n  swap8\n  pop\n    /* \"#utility.yul\":1524:1652   */\n  pop\n    /* \"#utility.yul\":1691:1693   */\n  0x20\n    /* \"#utility.yul\":1717:1781   */\n  tag_117\n    /* \"#utility.yul\":1773:1780   */\n  dup11\n    /* \"#utility.yul\":1764:1770   */\n  dup3\n    /* \"#utility.yul\":1753:1762   */\n  dup12\n    /* \"#utility.yul\":1749:1771   */\n  add\n    /* \"#utility.yul\":1717:1781   */\n  tag_65\n  jump\t// in\ntag_117:\n    /* \"#utility.yul\":1707:1781   */\n  swap7\n  pop\n    /* \"#utility.yul\":1662:1791   */\n  pop\n    /* \"#utility.yul\":1830:1832   */\n  0x40\n    /* \"#utility.yul\":1856:1920   */\n  tag_118\n    /* \"#utility.yul\":1912:1919   */\n  dup11\n    /* \"#utility.yul\":1903:1909   */\n  dup3\n    /* \"#utility.yul\":1892:1901   */\n  dup12\n    /* \"#utility.yul\":1888:1910   */\n  add\n    /* \"#utility.yul\":1856:1920   */\n  tag_65\n  jump\t// in\ntag_118:\n    /* \"#utility.yul\":1846:1920   */\n  swap6\n  pop\n    /* \"#utility.yul\":1801:1930   */\n  pop\n    /* \"#utility.yul\":1969:1971   */\n  0x60\n    /* \"#utility.yul\":1995:2059   */\n  tag_119\n    /* \"#utility.yul\":2051:2058   */\n  dup11\n    /* \"#utility.yul\":2042:2048   */\n  dup3\n    /* \"#utility.yul\":2031:2040   */\n  dup12\n    /* \"#utility.yul\":2027:2049   */\n  add\n    /* \"#utility.yul\":1995:2059   */\n  tag_65\n  jump\t// in\ntag_119:\n    /* \"#utility.yul\":1985:2059   */\n  swap5\n  pop\n    /* \"#utility.yul\":1940:2069   */\n  pop\n    /* \"#utility.yul\":2108:2111   */\n  0x80\n    /* \"#utility.yul\":2135:2199   */\n  tag_120\n    /* \"#utility.yul\":2191:2198   */\n  dup11\n    /* \"#utility.yul\":2182:2188   */\n  dup3\n    /* \"#utility.yul\":2171:2180   */\n  dup12\n    /* \"#utility.yul\":2167:2189   */\n  add\n    /* \"#utility.yul\":2135:2199   */\n  tag_65\n  jump\t// in\ntag_120:\n    /* \"#utility.yul\":2125:2199   */\n  swap4\n  pop\n    /* \"#utility.yul\":2079:2209   */\n  pop\n    /* \"#utility.yul\":2248:2251   */\n  0xa0\n    /* \"#utility.yul\":2275:2339   */\n  tag_121\n    /* \"#utility.yul\":2331:2338   */\n  dup11\n    /* \"#utility.yul\":2322:2328   */\n  dup3\n    /* \"#utility.yul\":2311:2320   */\n  dup12\n    /* \"#utility.yul\":2307:2329   */\n  add\n    /* \"#utility.yul\":2275:2339   */\n  tag_65\n  jump\t// in\ntag_121:\n    /* \"#utility.yul\":2265:2339   */\n  swap3\n  pop\n    /* \"#utility.yul\":2219:2349   */\n  pop\n    /* \"#utility.yul\":2388:2391   */\n  0xc0\n    /* \"#utility.yul\":2415:2479   */\n  tag_122\n    /* \"#utility.yul\":2471:2478   */\n  dup11\n    /* \"#utility.yul\":2462:2468   */\n  dup3\n    /* \"#utility.yul\":2451:2460   */\n  dup12\n    /* \"#utility.yul\":2447:2469   */\n  add\n    /* \"#utility.yul\":2415:2479   */\n  tag_68\n  jump\t// in\ntag_122:\n    /* \"#utility.yul\":2405:2479   */\n  swap2\n  pop\n    /* \"#utility.yul\":2359:2489   */\n  pop\n    /* \"#utility.yul\":1205:2496   */\n  swap3\n  swap6\n  swap9\n  swap2\n  swap5\n  swap8\n  pop\n  swap3\n  swap6\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2502:2601   */\ntag_69:\n    /* \"#utility.yul\":2554:2560   */\n  0x00\n    /* \"#utility.yul\":2588:2593   */\n  dup2\n    /* \"#utility.yul\":2582:2594   */\n  mload\n    /* \"#utility.yul\":2572:2594   */\n  swap1\n  pop\n    /* \"#utility.yul\":2502:2601   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2607:2787   */\ntag_70:\n    /* \"#utility.yul\":2655:2732   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":2652:2653   */\n  0x00\n    /* \"#utility.yul\":2645:2733   */\n  mstore\n    /* \"#utility.yul\":2752:2756   */\n  0x41\n    /* \"#utility.yul\":2749:2750   */\n  0x04\n    /* \"#utility.yul\":2742:2757   */\n  mstore\n    /* \"#utility.yul\":2776:2780   */\n  0x24\n    /* \"#utility.yul\":2773:2774   */\n  0x00\n    /* \"#utility.yul\":2766:2781   */\n  revert\n    /* \"#utility.yul\":2793:2973   */\ntag_71:\n    /* \"#utility.yul\":2841:2918   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":2838:2839   */\n  0x00\n    /* \"#utility.yul\":2831:2919   */\n  mstore\n    /* \"#utility.yul\":2938:2942   */\n  0x22\n    /* \"#utility.yul\":2935:2936   */\n  0x04\n    /* \"#utility.yul\":2928:2943   */\n  mstore\n    /* \"#utility.yul\":2962:2966   */\n  0x24\n    /* \"#utility.yul\":2959:2960   */\n  0x00\n    /* \"#utility.yul\":2952:2967   */\n  revert\n    /* \"#utility.yul\":2979:3299   */\ntag_72:\n    /* \"#utility.yul\":3023:3029   */\n  0x00\n    /* \"#utility.yul\":3060:3061   */\n  0x02\n    /* \"#utility.yul\":3054:3058   */\n  dup3\n    /* \"#utility.yul\":3050:3062   */\n  div\n    /* \"#utility.yul\":3040:3062   */\n  swap1\n  pop\n    /* \"#utility.yul\":3107:3108   */\n  0x01\n    /* \"#utility.yul\":3101:3105   */\n  dup3\n    /* \"#utility.yul\":3097:3109   */\n  and\n    /* \"#utility.yul\":3128:3146   */\n  dup1\n    /* \"#utility.yul\":3118:3199   */\n  tag_127\n  jumpi\n    /* \"#utility.yul\":3184:3188   */\n  0x7f\n    /* \"#utility.yul\":3176:3182   */\n  dup3\n    /* \"#utility.yul\":3172:3189   */\n  and\n    /* \"#utility.yul\":3162:3189   */\n  swap2\n  pop\n    /* \"#utility.yul\":3118:3199   */\ntag_127:\n    /* \"#utility.yul\":3246:3248   */\n  0x20\n    /* \"#utility.yul\":3238:3244   */\n  dup3\n    /* \"#utility.yul\":3235:3249   */\n  lt\n    /* \"#utility.yul\":3215:3233   */\n  dup2\n    /* \"#utility.yul\":3212:3250   */\n  sub\n    /* \"#utility.yul\":3209:3293   */\n  tag_128\n  jumpi\n    /* \"#utility.yul\":3265:3283   */\n  tag_129\n  tag_71\n  jump\t// in\ntag_129:\n    /* \"#utility.yul\":3209:3293   */\ntag_128:\n    /* \"#utility.yul\":3030:3299   */\n  pop\n    /* \"#utility.yul\":2979:3299   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3305:3446   */\ntag_73:\n    /* \"#utility.yul\":3354:3358   */\n  0x00\n    /* \"#utility.yul\":3377:3380   */\n  dup2\n    /* \"#utility.yul\":3369:3380   */\n  swap1\n  pop\n    /* \"#utility.yul\":3400:3403   */\n  dup2\n    /* \"#utility.yul\":3397:3398   */\n  0x00\n    /* \"#utility.yul\":3390:3404   */\n  mstore\n    /* \"#utility.yul\":3434:3438   */\n  0x20\n    /* \"#utility.yul\":3431:3432   */\n  0x00\n    /* \"#utility.yul\":3421:3439   */\n  keccak256\n    /* \"#utility.yul\":3413:3439   */\n  swap1\n  pop\n    /* \"#utility.yul\":3305:3446   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3452:3545   */\ntag_74:\n    /* \"#utility.yul\":3489:3495   */\n  0x00\n    /* \"#utility.yul\":3536:3538   */\n  0x20\n    /* \"#utility.yul\":3531:3533   */\n  0x1f\n    /* \"#utility.yul\":3524:3529   */\n  dup4\n    /* \"#utility.yul\":3520:3534   */\n  add\n    /* \"#utility.yul\":3516:3539   */\n  div\n    /* \"#utility.yul\":3506:3539   */\n  swap1\n  pop\n    /* \"#utility.yul\":3452:3545   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3551:3658   */\ntag_75:\n    /* \"#utility.yul\":3595:3603   */\n  0x00\n    /* \"#utility.yul\":3645:3650   */\n  dup3\n    /* \"#utility.yul\":3639:3643   */\n  dup3\n    /* \"#utility.yul\":3635:3651   */\n  shl\n    /* \"#utility.yul\":3614:3651   */\n  swap1\n  pop\n    /* \"#utility.yul\":3551:3658   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3664:4057   */\ntag_76:\n    /* \"#utility.yul\":3733:3739   */\n  0x00\n    /* \"#utility.yul\":3783:3784   */\n  0x08\n    /* \"#utility.yul\":3771:3781   */\n  dup4\n    /* \"#utility.yul\":3767:3785   */\n  mul\n    /* \"#utility.yul\":3806:3903   */\n  tag_134\n    /* \"#utility.yul\":3836:3902   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":3825:3834   */\n  dup3\n    /* \"#utility.yul\":3806:3903   */\n  tag_75\n  jump\t// in\ntag_134:\n    /* \"#utility.yul\":3924:3963   */\n  tag_135\n    /* \"#utility.yul\":3954:3962   */\n  dup7\n    /* \"#utility.yul\":3943:3952   */\n  dup4\n    /* \"#utility.yul\":3924:3963   */\n  tag_75\n  jump\t// in\ntag_135:\n    /* \"#utility.yul\":3912:3963   */\n  swap6\n  pop\n    /* \"#utility.yul\":3996:4000   */\n  dup1\n    /* \"#utility.yul\":3992:4001   */\n  not\n    /* \"#utility.yul\":3985:3990   */\n  dup5\n    /* \"#utility.yul\":3981:4002   */\n  and\n    /* \"#utility.yul\":3972:4002   */\n  swap4\n  pop\n    /* \"#utility.yul\":4045:4049   */\n  dup1\n    /* \"#utility.yul\":4035:4043   */\n  dup7\n    /* \"#utility.yul\":4031:4050   */\n  and\n    /* \"#utility.yul\":4024:4029   */\n  dup5\n    /* \"#utility.yul\":4021:4051   */\n  or\n    /* \"#utility.yul\":4011:4051   */\n  swap3\n  pop\n    /* \"#utility.yul\":3740:4057   */\n  pop\n  pop\n    /* \"#utility.yul\":3664:4057   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4063:4123   */\ntag_77:\n    /* \"#utility.yul\":4091:4094   */\n  0x00\n    /* \"#utility.yul\":4112:4117   */\n  dup2\n    /* \"#utility.yul\":4105:4117   */\n  swap1\n  pop\n    /* \"#utility.yul\":4063:4123   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4129:4271   */\ntag_78:\n    /* \"#utility.yul\":4179:4188   */\n  0x00\n    /* \"#utility.yul\":4212:4265   */\n  tag_138\n    /* \"#utility.yul\":4230:4264   */\n  tag_139\n    /* \"#utility.yul\":4239:4263   */\n  tag_140\n    /* \"#utility.yul\":4257:4262   */\n  dup5\n    /* \"#utility.yul\":4239:4263   */\n  tag_66\n  jump\t// in\ntag_140:\n    /* \"#utility.yul\":4230:4264   */\n  tag_77\n  jump\t// in\ntag_139:\n    /* \"#utility.yul\":4212:4265   */\n  tag_66\n  jump\t// in\ntag_138:\n    /* \"#utility.yul\":4199:4265   */\n  swap1\n  pop\n    /* \"#utility.yul\":4129:4271   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4277:4352   */\ntag_79:\n    /* \"#utility.yul\":4320:4323   */\n  0x00\n    /* \"#utility.yul\":4341:4346   */\n  dup2\n    /* \"#utility.yul\":4334:4346   */\n  swap1\n  pop\n    /* \"#utility.yul\":4277:4352   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4358:4627   */\ntag_80:\n    /* \"#utility.yul\":4468:4507   */\n  tag_143\n    /* \"#utility.yul\":4499:4506   */\n  dup4\n    /* \"#utility.yul\":4468:4507   */\n  tag_78\n  jump\t// in\ntag_143:\n    /* \"#utility.yul\":4529:4620   */\n  tag_144\n    /* \"#utility.yul\":4578:4619   */\n  tag_145\n    /* \"#utility.yul\":4602:4618   */\n  dup3\n    /* \"#utility.yul\":4578:4619   */\n  tag_79\n  jump\t// in\ntag_145:\n    /* \"#utility.yul\":4570:4576   */\n  dup5\n    /* \"#utility.yul\":4563:4567   */\n  dup5\n    /* \"#utility.yul\":4557:4568   */\n  sload\n    /* \"#utility.yul\":4529:4620   */\n  tag_76\n  jump\t// in\ntag_144:\n    /* \"#utility.yul\":4523:4527   */\n  dup3\n    /* \"#utility.yul\":4516:4621   */\n  sstore\n    /* \"#utility.yul\":4434:4627   */\n  pop\n    /* \"#utility.yul\":4358:4627   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4633:4706   */\ntag_81:\n    /* \"#utility.yul\":4678:4681   */\n  0x00\n    /* \"#utility.yul\":4633:4706   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":4712:4901   */\ntag_82:\n    /* \"#utility.yul\":4789:4821   */\n  tag_148\n  tag_81\n  jump\t// in\ntag_148:\n    /* \"#utility.yul\":4830:4895   */\n  tag_149\n    /* \"#utility.yul\":4888:4894   */\n  dup2\n    /* \"#utility.yul\":4880:4886   */\n  dup5\n    /* \"#utility.yul\":4874:4878   */\n  dup5\n    /* \"#utility.yul\":4830:4895   */\n  tag_80\n  jump\t// in\ntag_149:\n    /* \"#utility.yul\":4765:4901   */\n  pop\n    /* \"#utility.yul\":4712:4901   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4907:5093   */\ntag_83:\n    /* \"#utility.yul\":4967:5087   */\ntag_151:\n    /* \"#utility.yul\":4984:4987   */\n  dup2\n    /* \"#utility.yul\":4977:4982   */\n  dup2\n    /* \"#utility.yul\":4974:4988   */\n  lt\n    /* \"#utility.yul\":4967:5087   */\n  iszero\n  tag_153\n  jumpi\n    /* \"#utility.yul\":5038:5077   */\n  tag_154\n    /* \"#utility.yul\":5075:5076   */\n  0x00\n    /* \"#utility.yul\":5068:5073   */\n  dup3\n    /* \"#utility.yul\":5038:5077   */\n  tag_82\n  jump\t// in\ntag_154:\n    /* \"#utility.yul\":5011:5012   */\n  0x01\n    /* \"#utility.yul\":5004:5009   */\n  dup2\n    /* \"#utility.yul\":5000:5013   */\n  add\n    /* \"#utility.yul\":4991:5013   */\n  swap1\n  pop\n    /* \"#utility.yul\":4967:5087   */\n  jump(tag_151)\ntag_153:\n    /* \"#utility.yul\":4907:5093   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5099:5642   */\ntag_84:\n    /* \"#utility.yul\":5200:5202   */\n  0x1f\n    /* \"#utility.yul\":5195:5198   */\n  dup3\n    /* \"#utility.yul\":5192:5203   */\n  gt\n    /* \"#utility.yul\":5189:5635   */\n  iszero\n  tag_156\n  jumpi\n    /* \"#utility.yul\":5234:5272   */\n  tag_157\n    /* \"#utility.yul\":5266:5271   */\n  dup2\n    /* \"#utility.yul\":5234:5272   */\n  tag_73\n  jump\t// in\ntag_157:\n    /* \"#utility.yul\":5318:5347   */\n  tag_158\n    /* \"#utility.yul\":5336:5346   */\n  dup5\n    /* \"#utility.yul\":5318:5347   */\n  tag_74\n  jump\t// in\ntag_158:\n    /* \"#utility.yul\":5308:5316   */\n  dup2\n    /* \"#utility.yul\":5304:5348   */\n  add\n    /* \"#utility.yul\":5501:5503   */\n  0x20\n    /* \"#utility.yul\":5489:5499   */\n  dup6\n    /* \"#utility.yul\":5486:5504   */\n  lt\n    /* \"#utility.yul\":5483:5532   */\n  iszero\n  tag_159\n  jumpi\n    /* \"#utility.yul\":5522:5530   */\n  dup2\n    /* \"#utility.yul\":5507:5530   */\n  swap1\n  pop\n    /* \"#utility.yul\":5483:5532   */\ntag_159:\n    /* \"#utility.yul\":5545:5625   */\n  tag_160\n    /* \"#utility.yul\":5601:5623   */\n  tag_161\n    /* \"#utility.yul\":5619:5622   */\n  dup6\n    /* \"#utility.yul\":5601:5623   */\n  tag_74\n  jump\t// in\ntag_161:\n    /* \"#utility.yul\":5591:5599   */\n  dup4\n    /* \"#utility.yul\":5587:5624   */\n  add\n    /* \"#utility.yul\":5574:5585   */\n  dup3\n    /* \"#utility.yul\":5545:5625   */\n  tag_83\n  jump\t// in\ntag_160:\n    /* \"#utility.yul\":5204:5635   */\n  pop\n  pop\n    /* \"#utility.yul\":5189:5635   */\ntag_156:\n    /* \"#utility.yul\":5099:5642   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5648:5765   */\ntag_85:\n    /* \"#utility.yul\":5702:5710   */\n  0x00\n    /* \"#utility.yul\":5752:5757   */\n  dup3\n    /* \"#utility.yul\":5746:5750   */\n  dup3\n    /* \"#utility.yul\":5742:5758   */\n  shr\n    /* \"#utility.yul\":5721:5758   */\n  swap1\n  pop\n    /* \"#utility.yul\":5648:5765   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5771:5940   */\ntag_86:\n    /* \"#utility.yul\":5815:5821   */\n  0x00\n    /* \"#utility.yul\":5848:5899   */\n  tag_164\n    /* \"#utility.yul\":5896:5897   */\n  0x00\n    /* \"#utility.yul\":5892:5898   */\n  not\n    /* \"#utility.yul\":5884:5889   */\n  dup5\n    /* \"#utility.yul\":5881:5882   */\n  0x08\n    /* \"#utility.yul\":5877:5890   */\n  mul\n    /* \"#utility.yul\":5848:5899   */\n  tag_85\n  jump\t// in\ntag_164:\n    /* \"#utility.yul\":5844:5900   */\n  not\n    /* \"#utility.yul\":5929:5933   */\n  dup1\n    /* \"#utility.yul\":5923:5927   */\n  dup4\n    /* \"#utility.yul\":5919:5934   */\n  and\n    /* \"#utility.yul\":5909:5934   */\n  swap2\n  pop\n    /* \"#utility.yul\":5822:5940   */\n  pop\n    /* \"#utility.yul\":5771:5940   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5945:6240   */\ntag_87:\n    /* \"#utility.yul\":6021:6025   */\n  0x00\n    /* \"#utility.yul\":6167:6196   */\n  tag_166\n    /* \"#utility.yul\":6192:6195   */\n  dup4\n    /* \"#utility.yul\":6186:6190   */\n  dup4\n    /* \"#utility.yul\":6167:6196   */\n  tag_86\n  jump\t// in\ntag_166:\n    /* \"#utility.yul\":6159:6196   */\n  swap2\n  pop\n    /* \"#utility.yul\":6229:6232   */\n  dup3\n    /* \"#utility.yul\":6226:6227   */\n  0x02\n    /* \"#utility.yul\":6222:6233   */\n  mul\n    /* \"#utility.yul\":6216:6220   */\n  dup3\n    /* \"#utility.yul\":6213:6234   */\n  or\n    /* \"#utility.yul\":6205:6234   */\n  swap1\n  pop\n    /* \"#utility.yul\":5945:6240   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6245:7640   */\ntag_9:\n    /* \"#utility.yul\":6362:6399   */\n  tag_168\n    /* \"#utility.yul\":6395:6398   */\n  dup3\n    /* \"#utility.yul\":6362:6399   */\n  tag_69\n  jump\t// in\ntag_168:\n    /* \"#utility.yul\":6464:6482   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":6456:6462   */\n  dup2\n    /* \"#utility.yul\":6453:6483   */\n  gt\n    /* \"#utility.yul\":6450:6506   */\n  iszero\n  tag_169\n  jumpi\n    /* \"#utility.yul\":6486:6504   */\n  tag_170\n  tag_70\n  jump\t// in\ntag_170:\n    /* \"#utility.yul\":6450:6506   */\ntag_169:\n    /* \"#utility.yul\":6530:6568   */\n  tag_171\n    /* \"#utility.yul\":6562:6566   */\n  dup3\n    /* \"#utility.yul\":6556:6567   */\n  sload\n    /* \"#utility.yul\":6530:6568   */\n  tag_72\n  jump\t// in\ntag_171:\n    /* \"#utility.yul\":6615:6682   */\n  tag_172\n    /* \"#utility.yul\":6675:6681   */\n  dup3\n    /* \"#utility.yul\":6667:6673   */\n  dup3\n    /* \"#utility.yul\":6661:6665   */\n  dup6\n    /* \"#utility.yul\":6615:6682   */\n  tag_84\n  jump\t// in\ntag_172:\n    /* \"#utility.yul\":6709:6710   */\n  0x00\n    /* \"#utility.yul\":6733:6737   */\n  0x20\n    /* \"#utility.yul\":6720:6737   */\n  swap1\n  pop\n    /* \"#utility.yul\":6765:6767   */\n  0x1f\n    /* \"#utility.yul\":6757:6763   */\n  dup4\n    /* \"#utility.yul\":6754:6768   */\n  gt\n    /* \"#utility.yul\":6782:6783   */\n  0x01\n    /* \"#utility.yul\":6777:7395   */\n  dup2\n  eq\n  tag_174\n  jumpi\n    /* \"#utility.yul\":7439:7440   */\n  0x00\n    /* \"#utility.yul\":7456:7462   */\n  dup5\n    /* \"#utility.yul\":7453:7530   */\n  iszero\n  tag_175\n  jumpi\n    /* \"#utility.yul\":7505:7514   */\n  dup3\n    /* \"#utility.yul\":7500:7503   */\n  dup8\n    /* \"#utility.yul\":7496:7515   */\n  add\n    /* \"#utility.yul\":7490:7516   */\n  mload\n    /* \"#utility.yul\":7481:7516   */\n  swap1\n  pop\n    /* \"#utility.yul\":7453:7530   */\ntag_175:\n    /* \"#utility.yul\":7556:7623   */\n  tag_176\n    /* \"#utility.yul\":7616:7622   */\n  dup6\n    /* \"#utility.yul\":7609:7614   */\n  dup3\n    /* \"#utility.yul\":7556:7623   */\n  tag_87\n  jump\t// in\ntag_176:\n    /* \"#utility.yul\":7550:7554   */\n  dup7\n    /* \"#utility.yul\":7543:7624   */\n  sstore\n    /* \"#utility.yul\":7412:7634   */\n  pop\n    /* \"#utility.yul\":6747:7634   */\n  jump(tag_173)\n    /* \"#utility.yul\":6777:7395   */\ntag_174:\n    /* \"#utility.yul\":6829:6833   */\n  0x1f\n    /* \"#utility.yul\":6825:6834   */\n  not\n    /* \"#utility.yul\":6817:6823   */\n  dup5\n    /* \"#utility.yul\":6813:6835   */\n  and\n    /* \"#utility.yul\":6863:6900   */\n  tag_177\n    /* \"#utility.yul\":6895:6899   */\n  dup7\n    /* \"#utility.yul\":6863:6900   */\n  tag_73\n  jump\t// in\ntag_177:\n    /* \"#utility.yul\":6922:6923   */\n  0x00\n    /* \"#utility.yul\":6936:7144   */\ntag_178:\n    /* \"#utility.yul\":6950:6957   */\n  dup3\n    /* \"#utility.yul\":6947:6948   */\n  dup2\n    /* \"#utility.yul\":6944:6958   */\n  lt\n    /* \"#utility.yul\":6936:7144   */\n  iszero\n  tag_180\n  jumpi\n    /* \"#utility.yul\":7029:7038   */\n  dup5\n    /* \"#utility.yul\":7024:7027   */\n  dup10\n    /* \"#utility.yul\":7020:7039   */\n  add\n    /* \"#utility.yul\":7014:7040   */\n  mload\n    /* \"#utility.yul\":7006:7012   */\n  dup3\n    /* \"#utility.yul\":6999:7041   */\n  sstore\n    /* \"#utility.yul\":7080:7081   */\n  0x01\n    /* \"#utility.yul\":7072:7078   */\n  dup3\n    /* \"#utility.yul\":7068:7082   */\n  add\n    /* \"#utility.yul\":7058:7082   */\n  swap2\n  pop\n    /* \"#utility.yul\":7127:7129   */\n  0x20\n    /* \"#utility.yul\":7116:7125   */\n  dup6\n    /* \"#utility.yul\":7112:7130   */\n  add\n    /* \"#utility.yul\":7099:7130   */\n  swap5\n  pop\n    /* \"#utility.yul\":6973:6977   */\n  0x20\n    /* \"#utility.yul\":6970:6971   */\n  dup2\n    /* \"#utility.yul\":6966:6978   */\n  add\n    /* \"#utility.yul\":6961:6978   */\n  swap1\n  pop\n    /* \"#utility.yul\":6936:7144   */\n  jump(tag_178)\ntag_180:\n    /* \"#utility.yul\":7172:7178   */\n  dup7\n    /* \"#utility.yul\":7163:7170   */\n  dup4\n    /* \"#utility.yul\":7160:7179   */\n  lt\n    /* \"#utility.yul\":7157:7336   */\n  iszero\n  tag_181\n  jumpi\n    /* \"#utility.yul\":7230:7239   */\n  dup5\n    /* \"#utility.yul\":7225:7228   */\n  dup10\n    /* \"#utility.yul\":7221:7240   */\n  add\n    /* \"#utility.yul\":7215:7241   */\n  mload\n    /* \"#utility.yul\":7273:7321   */\n  tag_182\n    /* \"#utility.yul\":7315:7319   */\n  0x1f\n    /* \"#utility.yul\":7307:7313   */\n  dup10\n    /* \"#utility.yul\":7303:7320   */\n  and\n    /* \"#utility.yul\":7292:7301   */\n  dup3\n    /* \"#utility.yul\":7273:7321   */\n  tag_86\n  jump\t// in\ntag_182:\n    /* \"#utility.yul\":7265:7271   */\n  dup4\n    /* \"#utility.yul\":7258:7322   */\n  sstore\n    /* \"#utility.yul\":7180:7336   */\n  pop\n    /* \"#utility.yul\":7157:7336   */\ntag_181:\n    /* \"#utility.yul\":7382:7383   */\n  0x01\n    /* \"#utility.yul\":7378:7379   */\n  0x02\n    /* \"#utility.yul\":7370:7376   */\n  dup9\n    /* \"#utility.yul\":7366:7380   */\n  mul\n    /* \"#utility.yul\":7362:7384   */\n  add\n    /* \"#utility.yul\":7356:7360   */\n  dup9\n    /* \"#utility.yul\":7349:7385   */\n  sstore\n    /* \"#utility.yul\":6784:7395   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":6747:7634   */\ntag_173:\n  pop\n    /* \"#utility.yul\":6337:7640   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":6245:7640   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7646:7764   */\ntag_88:\n    /* \"#utility.yul\":7733:7757   */\n  tag_184\n    /* \"#utility.yul\":7751:7756   */\n  dup2\n    /* \"#utility.yul\":7733:7757   */\n  tag_63\n  jump\t// in\ntag_184:\n    /* \"#utility.yul\":7728:7731   */\n  dup3\n    /* \"#utility.yul\":7721:7758   */\n  mstore\n    /* \"#utility.yul\":7646:7764   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7770:7992   */\ntag_14:\n    /* \"#utility.yul\":7863:7867   */\n  0x00\n    /* \"#utility.yul\":7901:7903   */\n  0x20\n    /* \"#utility.yul\":7890:7899   */\n  dup3\n    /* \"#utility.yul\":7886:7904   */\n  add\n    /* \"#utility.yul\":7878:7904   */\n  swap1\n  pop\n    /* \"#utility.yul\":7914:7985   */\n  tag_186\n    /* \"#utility.yul\":7982:7983   */\n  0x00\n    /* \"#utility.yul\":7971:7980   */\n  dup4\n    /* \"#utility.yul\":7967:7984   */\n  add\n    /* \"#utility.yul\":7958:7964   */\n  dup5\n    /* \"#utility.yul\":7914:7985   */\n  tag_88\n  jump\t// in\ntag_186:\n    /* \"#utility.yul\":7770:7992   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7998:8167   */\ntag_89:\n    /* \"#utility.yul\":8082:8093   */\n  0x00\n    /* \"#utility.yul\":8116:8122   */\n  dup3\n    /* \"#utility.yul\":8111:8114   */\n  dup3\n    /* \"#utility.yul\":8104:8123   */\n  mstore\n    /* \"#utility.yul\":8156:8160   */\n  0x20\n    /* \"#utility.yul\":8151:8154   */\n  dup3\n    /* \"#utility.yul\":8147:8161   */\n  add\n    /* \"#utility.yul\":8132:8161   */\n  swap1\n  pop\n    /* \"#utility.yul\":7998:8167   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":8173:8344   */\ntag_90:\n    /* \"#utility.yul\":8313:8336   */\n  0x496e76616c6964206f776e657220616464726573730000000000000000000000\n    /* \"#utility.yul\":8309:8310   */\n  0x00\n    /* \"#utility.yul\":8301:8307   */\n  dup3\n    /* \"#utility.yul\":8297:8311   */\n  add\n    /* \"#utility.yul\":8290:8337   */\n  mstore\n    /* \"#utility.yul\":8173:8344   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":8350:8716   */\ntag_91:\n    /* \"#utility.yul\":8492:8495   */\n  0x00\n    /* \"#utility.yul\":8513:8580   */\n  tag_190\n    /* \"#utility.yul\":8577:8579   */\n  0x15\n    /* \"#utility.yul\":8572:8575   */\n  dup4\n    /* \"#utility.yul\":8513:8580   */\n  tag_89\n  jump\t// in\ntag_190:\n    /* \"#utility.yul\":8506:8580   */\n  swap2\n  pop\n    /* \"#utility.yul\":8589:8682   */\n  tag_191\n    /* \"#utility.yul\":8678:8681   */\n  dup3\n    /* \"#utility.yul\":8589:8682   */\n  tag_90\n  jump\t// in\ntag_191:\n    /* \"#utility.yul\":8707:8709   */\n  0x20\n    /* \"#utility.yul\":8702:8705   */\n  dup3\n    /* \"#utility.yul\":8698:8710   */\n  add\n    /* \"#utility.yul\":8691:8710   */\n  swap1\n  pop\n    /* \"#utility.yul\":8350:8716   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":8722:9141   */\ntag_20:\n    /* \"#utility.yul\":8888:8892   */\n  0x00\n    /* \"#utility.yul\":8926:8928   */\n  0x20\n    /* \"#utility.yul\":8915:8924   */\n  dup3\n    /* \"#utility.yul\":8911:8929   */\n  add\n    /* \"#utility.yul\":8903:8929   */\n  swap1\n  pop\n    /* \"#utility.yul\":8975:8984   */\n  dup2\n    /* \"#utility.yul\":8969:8973   */\n  dup2\n    /* \"#utility.yul\":8965:8985   */\n  sub\n    /* \"#utility.yul\":8961:8962   */\n  0x00\n    /* \"#utility.yul\":8950:8959   */\n  dup4\n    /* \"#utility.yul\":8946:8963   */\n  add\n    /* \"#utility.yul\":8939:8986   */\n  mstore\n    /* \"#utility.yul\":9003:9134   */\n  tag_193\n    /* \"#utility.yul\":9129:9133   */\n  dup2\n    /* \"#utility.yul\":9003:9134   */\n  tag_91\n  jump\t// in\ntag_193:\n    /* \"#utility.yul\":8995:9134   */\n  swap1\n  pop\n    /* \"#utility.yul\":8722:9141   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9147:9327   */\ntag_92:\n    /* \"#utility.yul\":9195:9272   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":9192:9193   */\n  0x00\n    /* \"#utility.yul\":9185:9273   */\n  mstore\n    /* \"#utility.yul\":9292:9296   */\n  0x11\n    /* \"#utility.yul\":9289:9290   */\n  0x04\n    /* \"#utility.yul\":9282:9297   */\n  mstore\n    /* \"#utility.yul\":9316:9320   */\n  0x24\n    /* \"#utility.yul\":9313:9314   */\n  0x00\n    /* \"#utility.yul\":9306:9321   */\n  revert\n    /* \"#utility.yul\":9333:9743   */\ntag_22:\n    /* \"#utility.yul\":9373:9380   */\n  0x00\n    /* \"#utility.yul\":9396:9416   */\n  tag_196\n    /* \"#utility.yul\":9414:9415   */\n  dup3\n    /* \"#utility.yul\":9396:9416   */\n  tag_66\n  jump\t// in\ntag_196:\n    /* \"#utility.yul\":9391:9416   */\n  swap2\n  pop\n    /* \"#utility.yul\":9430:9450   */\n  tag_197\n    /* \"#utility.yul\":9448:9449   */\n  dup4\n    /* \"#utility.yul\":9430:9450   */\n  tag_66\n  jump\t// in\ntag_197:\n    /* \"#utility.yul\":9425:9450   */\n  swap3\n  pop\n    /* \"#utility.yul\":9485:9486   */\n  dup3\n    /* \"#utility.yul\":9482:9483   */\n  dup3\n    /* \"#utility.yul\":9478:9487   */\n  mul\n    /* \"#utility.yul\":9507:9537   */\n  tag_198\n    /* \"#utility.yul\":9525:9536   */\n  dup2\n    /* \"#utility.yul\":9507:9537   */\n  tag_66\n  jump\t// in\ntag_198:\n    /* \"#utility.yul\":9496:9537   */\n  swap2\n  pop\n    /* \"#utility.yul\":9686:9687   */\n  dup3\n    /* \"#utility.yul\":9677:9684   */\n  dup3\n    /* \"#utility.yul\":9673:9688   */\n  div\n    /* \"#utility.yul\":9670:9671   */\n  dup5\n    /* \"#utility.yul\":9667:9689   */\n  eq\n    /* \"#utility.yul\":9647:9648   */\n  dup4\n    /* \"#utility.yul\":9640:9649   */\n  iszero\n    /* \"#utility.yul\":9620:9703   */\n  or\n    /* \"#utility.yul\":9597:9736   */\n  tag_199\n  jumpi\n    /* \"#utility.yul\":9716:9734   */\n  tag_200\n  tag_92\n  jump\t// in\ntag_200:\n    /* \"#utility.yul\":9597:9736   */\ntag_199:\n    /* \"#utility.yul\":9381:9743   */\n  pop\n    /* \"#utility.yul\":9333:9743   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9749:9929   */\ntag_93:\n    /* \"#utility.yul\":9797:9874   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":9794:9795   */\n  0x00\n    /* \"#utility.yul\":9787:9875   */\n  mstore\n    /* \"#utility.yul\":9894:9898   */\n  0x12\n    /* \"#utility.yul\":9891:9892   */\n  0x04\n    /* \"#utility.yul\":9884:9899   */\n  mstore\n    /* \"#utility.yul\":9918:9922   */\n  0x24\n    /* \"#utility.yul\":9915:9916   */\n  0x00\n    /* \"#utility.yul\":9908:9923   */\n  revert\n    /* \"#utility.yul\":9935:10120   */\ntag_24:\n    /* \"#utility.yul\":9975:9976   */\n  0x00\n    /* \"#utility.yul\":9992:10012   */\n  tag_203\n    /* \"#utility.yul\":10010:10011   */\n  dup3\n    /* \"#utility.yul\":9992:10012   */\n  tag_66\n  jump\t// in\ntag_203:\n    /* \"#utility.yul\":9987:10012   */\n  swap2\n  pop\n    /* \"#utility.yul\":10026:10046   */\n  tag_204\n    /* \"#utility.yul\":10044:10045   */\n  dup4\n    /* \"#utility.yul\":10026:10046   */\n  tag_66\n  jump\t// in\ntag_204:\n    /* \"#utility.yul\":10021:10046   */\n  swap3\n  pop\n    /* \"#utility.yul\":10065:10066   */\n  dup3\n    /* \"#utility.yul\":10055:10090   */\n  tag_205\n  jumpi\n    /* \"#utility.yul\":10070:10088   */\n  tag_206\n  tag_93\n  jump\t// in\ntag_206:\n    /* \"#utility.yul\":10055:10090   */\ntag_205:\n    /* \"#utility.yul\":10112:10113   */\n  dup3\n    /* \"#utility.yul\":10109:10110   */\n  dup3\n    /* \"#utility.yul\":10105:10114   */\n  div\n    /* \"#utility.yul\":10100:10114   */\n  swap1\n  pop\n    /* \"#utility.yul\":9935:10120   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":10126:10317   */\ntag_40:\n    /* \"#utility.yul\":10166:10169   */\n  0x00\n    /* \"#utility.yul\":10185:10205   */\n  tag_208\n    /* \"#utility.yul\":10203:10204   */\n  dup3\n    /* \"#utility.yul\":10185:10205   */\n  tag_66\n  jump\t// in\ntag_208:\n    /* \"#utility.yul\":10180:10205   */\n  swap2\n  pop\n    /* \"#utility.yul\":10219:10239   */\n  tag_209\n    /* \"#utility.yul\":10237:10238   */\n  dup4\n    /* \"#utility.yul\":10219:10239   */\n  tag_66\n  jump\t// in\ntag_209:\n    /* \"#utility.yul\":10214:10239   */\n  swap3\n  pop\n    /* \"#utility.yul\":10262:10263   */\n  dup3\n    /* \"#utility.yul\":10259:10260   */\n  dup3\n    /* \"#utility.yul\":10255:10264   */\n  add\n    /* \"#utility.yul\":10248:10264   */\n  swap1\n  pop\n    /* \"#utility.yul\":10283:10286   */\n  dup1\n    /* \"#utility.yul\":10280:10281   */\n  dup3\n    /* \"#utility.yul\":10277:10287   */\n  gt\n    /* \"#utility.yul\":10274:10310   */\n  iszero\n  tag_210\n  jumpi\n    /* \"#utility.yul\":10290:10308   */\n  tag_211\n  tag_92\n  jump\t// in\ntag_211:\n    /* \"#utility.yul\":10274:10310   */\ntag_210:\n    /* \"#utility.yul\":10126:10317   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":10323:10441   */\ntag_94:\n    /* \"#utility.yul\":10410:10434   */\n  tag_213\n    /* \"#utility.yul\":10428:10433   */\n  dup2\n    /* \"#utility.yul\":10410:10434   */\n  tag_66\n  jump\t// in\ntag_213:\n    /* \"#utility.yul\":10405:10408   */\n  dup3\n    /* \"#utility.yul\":10398:10435   */\n  mstore\n    /* \"#utility.yul\":10323:10441   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":10447:10889   */\ntag_54:\n    /* \"#utility.yul\":10596:10600   */\n  0x00\n    /* \"#utility.yul\":10634:10636   */\n  0x60\n    /* \"#utility.yul\":10623:10632   */\n  dup3\n    /* \"#utility.yul\":10619:10637   */\n  add\n    /* \"#utility.yul\":10611:10637   */\n  swap1\n  pop\n    /* \"#utility.yul\":10647:10718   */\n  tag_215\n    /* \"#utility.yul\":10715:10716   */\n  0x00\n    /* \"#utility.yul\":10704:10713   */\n  dup4\n    /* \"#utility.yul\":10700:10717   */\n  add\n    /* \"#utility.yul\":10691:10697   */\n  dup7\n    /* \"#utility.yul\":10647:10718   */\n  tag_88\n  jump\t// in\ntag_215:\n    /* \"#utility.yul\":10728:10800   */\n  tag_216\n    /* \"#utility.yul\":10796:10798   */\n  0x20\n    /* \"#utility.yul\":10785:10794   */\n  dup4\n    /* \"#utility.yul\":10781:10799   */\n  add\n    /* \"#utility.yul\":10772:10778   */\n  dup6\n    /* \"#utility.yul\":10728:10800   */\n  tag_94\n  jump\t// in\ntag_216:\n    /* \"#utility.yul\":10810:10882   */\n  tag_217\n    /* \"#utility.yul\":10878:10880   */\n  0x40\n    /* \"#utility.yul\":10867:10876   */\n  dup4\n    /* \"#utility.yul\":10863:10881   */\n  add\n    /* \"#utility.yul\":10854:10860   */\n  dup5\n    /* \"#utility.yul\":10810:10882   */\n  tag_94\n  jump\t// in\ntag_217:\n    /* \"#utility.yul\":10447:10889   */\n  swap5\n  swap4\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":10895:11117   */\ntag_58:\n    /* \"#utility.yul\":10988:10992   */\n  0x00\n    /* \"#utility.yul\":11026:11028   */\n  0x20\n    /* \"#utility.yul\":11015:11024   */\n  dup3\n    /* \"#utility.yul\":11011:11029   */\n  add\n    /* \"#utility.yul\":11003:11029   */\n  swap1\n  pop\n    /* \"#utility.yul\":11039:11110   */\n  tag_219\n    /* \"#utility.yul\":11107:11108   */\n  0x00\n    /* \"#utility.yul\":11096:11105   */\n  dup4\n    /* \"#utility.yul\":11092:11109   */\n  add\n    /* \"#utility.yul\":11083:11089   */\n  dup5\n    /* \"#utility.yul\":11039:11110   */\n  tag_94\n  jump\t// in\ntag_219:\n    /* \"#utility.yul\":10895:11117   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/ICFT.sol\":167:3025  contract IndependentCapitalFundToken is ERC20, Ownable {... */\ntag_41:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/ICFT.sol\":167:3025  contract IndependentCapitalFundToken is ERC20, Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x42966c68\n      gt\n      tag_24\n      jumpi\n      dup1\n      0x8da5cb5b\n      gt\n      tag_25\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_18\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xcd3293de\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_22\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_23\n      jumpi\n      jump(tag_2)\n    tag_25:\n      dup1\n      0x42966c68\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x59d7bd71\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x8ac27f5f\n      eq\n      tag_17\n      jumpi\n      jump(tag_2)\n    tag_24:\n      dup1\n      0x23b872dd\n      gt\n      tag_26\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x2d3e474a\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x3829b0dc\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x40c10f19\n      eq\n      tag_12\n      jumpi\n      jump(tag_2)\n    tag_26:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x1f4e1504\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x221322d5\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1779:1868  function name() public view virtual returns (string memory) {... */\n    tag_3:\n      tag_27\n      tag_28\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      tag_29\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3998:4184  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_4:\n      tag_31\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_32\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_32:\n      tag_34\n      jump\t// in\n    tag_31:\n      mload(0x40)\n      tag_35\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_35:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2849:2946  function totalSupply() public view virtual returns (uint256) {... */\n    tag_5:\n      tag_37\n      tag_38\n      jump\t// in\n    tag_37:\n      mload(0x40)\n      tag_39\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_39:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ICFT.sol\":2918:3023  function upgradeContract() public onlyOwner {... */\n    tag_6:\n      tag_41\n      tag_42\n      jump\t// in\n    tag_41:\n      stop\n        /* \"contracts/ICFT.sol\":469:516  mapping(address => uint256) public lockupExpiry */\n    tag_7:\n      tag_43\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_44\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_44:\n      tag_46\n      jump\t// in\n    tag_43:\n      mload(0x40)\n      tag_47\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_47:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ICFT.sol\":2250:2482  function transferFrom(address from, address to, uint256 amount) public override returns (bool) {... */\n    tag_8:\n      tag_48\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_49\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_49:\n      tag_51\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      tag_52\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_52:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ICFT.sol\":358:382  address public marketing */\n    tag_9:\n      tag_53\n      tag_54\n      jump\t// in\n    tag_53:\n      mload(0x40)\n      tag_55\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_55:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2707:2789  function decimals() public view virtual returns (uint8) {... */\n    tag_10:\n      tag_57\n      tag_58\n      jump\t// in\n    tag_57:\n      mload(0x40)\n      tag_59\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_59:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ICFT.sol\":298:324  address public projectTeam */\n    tag_11:\n      tag_61\n      tag_62\n      jump\t// in\n    tag_61:\n      mload(0x40)\n      tag_63\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_63:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ICFT.sol\":2553:2646  function mint(address to, uint256 amount) public onlyOwner {... */\n    tag_12:\n      tag_64\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_65\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_65:\n      tag_66\n      jump\t// in\n    tag_64:\n      stop\n        /* \"contracts/ICFT.sol\":2738:2827  function burn(uint256 amount) public onlyOwner {... */\n    tag_13:\n      tag_67\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_68\n      swap2\n      swap1\n      tag_69\n      jump\t// in\n    tag_68:\n      tag_70\n      jump\t// in\n    tag_67:\n      stop\n        /* \"contracts/ICFT.sol\":388:422  address public communityIncentives */\n    tag_14:\n      tag_71\n      tag_72\n      jump\t// in\n    tag_71:\n      mload(0x40)\n      tag_73\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_73:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3004:3120  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_15:\n      tag_74\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_75\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_75:\n      tag_76\n      jump\t// in\n    tag_74:\n      mload(0x40)\n      tag_77\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_77:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_16:\n      tag_78\n      tag_79\n      jump\t// in\n    tag_78:\n      stop\n        /* \"contracts/ICFT.sol\":268:292  address public investors */\n    tag_17:\n      tag_80\n      tag_81\n      jump\t// in\n    tag_80:\n      mload(0x40)\n      tag_82\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_82:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_18:\n      tag_83\n      tag_84\n      jump\t// in\n    tag_83:\n      mload(0x40)\n      tag_85\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_85:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1981:2074  function symbol() public view virtual returns (string memory) {... */\n    tag_19:\n      tag_86\n      tag_87\n      jump\t// in\n    tag_86:\n      mload(0x40)\n      tag_88\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_88:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ICFT.sol\":1966:2176  function transfer(address to, uint256 amount) public override returns (bool) {... */\n    tag_20:\n      tag_89\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_90\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_90:\n      tag_91\n      jump\t// in\n    tag_89:\n      mload(0x40)\n      tag_92\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_92:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ICFT.sol\":330:352  address public reserve */\n    tag_21:\n      tag_93\n      tag_94\n      jump\t// in\n    tag_93:\n      mload(0x40)\n      tag_95\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_95:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3551:3691  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_22:\n      tag_96\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_97\n      swap2\n      swap1\n      tag_98\n      jump\t// in\n    tag_97:\n      tag_99\n      jump\t// in\n    tag_96:\n      mload(0x40)\n      tag_100\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_100:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_23:\n      tag_101\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_102\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_102:\n      tag_103\n      jump\t// in\n    tag_101:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1779:1868  function name() public view virtual returns (string memory) {... */\n    tag_28:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1824:1837  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1856:1861  _name */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1849:1861  return _name */\n      dup1\n      sload\n      tag_105\n      swap1\n      tag_106\n      jump\t// in\n    tag_105:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_107\n      swap1\n      tag_106\n      jump\t// in\n    tag_107:\n      dup1\n      iszero\n      tag_108\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_109\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_108)\n    tag_109:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_110:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_110\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_108:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1779:1868  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3998:4184  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_34:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4071:4075  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4087:4100  address owner */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4103:4115  _msgSender() */\n      tag_112\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4103:4113  _msgSender */\n      tag_113\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4103:4115  _msgSender() */\n      jump\t// in\n    tag_112:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4087:4115  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4125:4156  _approve(owner, spender, value) */\n      tag_114\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4134:4139  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4141:4148  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4150:4155  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4125:4133  _approve */\n      tag_115\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4125:4156  _approve(owner, spender, value) */\n      jump\t// in\n    tag_114:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4173:4177  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4166:4177  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3998:4184  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2849:2946  function totalSupply() public view virtual returns (uint256) {... */\n    tag_38:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2901:2908  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2927:2939  _totalSupply */\n      sload(0x02)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2920:2939  return _totalSupply */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2849:2946  function totalSupply() public view virtual returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/ICFT.sol\":2918:3023  function upgradeContract() public onlyOwner {... */\n    tag_42:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_118\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_119\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_118:\n        /* \"contracts/ICFT.sol\":2918:3023  function upgradeContract() public onlyOwner {... */\n      jump\t// out\n        /* \"contracts/ICFT.sol\":469:516  mapping(address => uint256) public lockupExpiry */\n    tag_46:\n      mstore(0x20, 0x0b)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"contracts/ICFT.sol\":2250:2482  function transferFrom(address from, address to, uint256 amount) public override returns (bool) {... */\n    tag_51:\n        /* \"contracts/ICFT.sol\":2339:2343  bool */\n      0x00\n        /* \"contracts/ICFT.sol\":2382:2394  lockupExpiry */\n      0x0b\n        /* \"contracts/ICFT.sol\":2382:2400  lockupExpiry[from] */\n      0x00\n        /* \"contracts/ICFT.sol\":2395:2399  from */\n      dup6\n        /* \"contracts/ICFT.sol\":2382:2400  lockupExpiry[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/ICFT.sol\":2363:2378  block.timestamp */\n      timestamp\n        /* \"contracts/ICFT.sol\":2363:2400  block.timestamp >= lockupExpiry[from] */\n      lt\n      iszero\n        /* \"contracts/ICFT.sol\":2355:2422  require(block.timestamp >= lockupExpiry[from], \"Tokens are locked\") */\n      tag_122\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_123\n      swap1\n      tag_124\n      jump\t// in\n    tag_123:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_122:\n        /* \"contracts/ICFT.sol\":2439:2475  super.transferFrom(from, to, amount) */\n      tag_125\n        /* \"contracts/ICFT.sol\":2458:2462  from */\n      dup5\n        /* \"contracts/ICFT.sol\":2464:2466  to */\n      dup5\n        /* \"contracts/ICFT.sol\":2468:2474  amount */\n      dup5\n        /* \"contracts/ICFT.sol\":2439:2457  super.transferFrom */\n      tag_126\n        /* \"contracts/ICFT.sol\":2439:2475  super.transferFrom(from, to, amount) */\n      jump\t// in\n    tag_125:\n        /* \"contracts/ICFT.sol\":2432:2475  return super.transferFrom(from, to, amount) */\n      swap1\n      pop\n        /* \"contracts/ICFT.sol\":2250:2482  function transferFrom(address from, address to, uint256 amount) public override returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ICFT.sol\":358:382  address public marketing */\n    tag_54:\n      0x09\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2707:2789  function decimals() public view virtual returns (uint8) {... */\n    tag_58:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2756:2761  uint8 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2780:2782  18 */\n      0x12\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2773:2782  return 18 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2707:2789  function decimals() public view virtual returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/ICFT.sol\":298:324  address public projectTeam */\n    tag_62:\n      0x07\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/ICFT.sol\":2553:2646  function mint(address to, uint256 amount) public onlyOwner {... */\n    tag_66:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_129\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_119\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_129:\n        /* \"contracts/ICFT.sol\":2622:2639  _mint(to, amount) */\n      tag_131\n        /* \"contracts/ICFT.sol\":2628:2630  to */\n      dup3\n        /* \"contracts/ICFT.sol\":2632:2638  amount */\n      dup3\n        /* \"contracts/ICFT.sol\":2622:2627  _mint */\n      tag_132\n        /* \"contracts/ICFT.sol\":2622:2639  _mint(to, amount) */\n      jump\t// in\n    tag_131:\n        /* \"contracts/ICFT.sol\":2553:2646  function mint(address to, uint256 amount) public onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ICFT.sol\":2738:2827  function burn(uint256 amount) public onlyOwner {... */\n    tag_70:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_134\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_119\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_134:\n        /* \"contracts/ICFT.sol\":2795:2820  _burn(msg.sender, amount) */\n      tag_136\n        /* \"contracts/ICFT.sol\":2801:2811  msg.sender */\n      caller\n        /* \"contracts/ICFT.sol\":2813:2819  amount */\n      dup3\n        /* \"contracts/ICFT.sol\":2795:2800  _burn */\n      tag_137\n        /* \"contracts/ICFT.sol\":2795:2820  _burn(msg.sender, amount) */\n      jump\t// in\n    tag_136:\n        /* \"contracts/ICFT.sol\":2738:2827  function burn(uint256 amount) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/ICFT.sol\":388:422  address public communityIncentives */\n    tag_72:\n      0x0a\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3004:3120  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_76:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3069:3076  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3095:3104  _balances */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3095:3113  _balances[account] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3105:3112  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3095:3113  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3088:3113  return _balances[account] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3004:3120  function balanceOf(address account) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_79:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_140\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_119\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_140:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_142\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_143\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_142:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"contracts/ICFT.sol\":268:292  address public investors */\n    tag_81:\n      0x06\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_84:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1703:1716  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1981:2074  function symbol() public view virtual returns (string memory) {... */\n    tag_87:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2028:2041  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2060:2067  _symbol */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2053:2067  return _symbol */\n      dup1\n      sload\n      tag_146\n      swap1\n      tag_106\n      jump\t// in\n    tag_146:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_147\n      swap1\n      tag_106\n      jump\t// in\n    tag_147:\n      dup1\n      iszero\n      tag_148\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_149\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_148)\n    tag_149:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_150:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_150\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_148:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1981:2074  function symbol() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/ICFT.sol\":1966:2176  function transfer(address to, uint256 amount) public override returns (bool) {... */\n    tag_91:\n        /* \"contracts/ICFT.sol\":2037:2041  bool */\n      0x00\n        /* \"contracts/ICFT.sol\":2080:2092  lockupExpiry */\n      0x0b\n        /* \"contracts/ICFT.sol\":2080:2104  lockupExpiry[msg.sender] */\n      0x00\n        /* \"contracts/ICFT.sol\":2093:2103  msg.sender */\n      caller\n        /* \"contracts/ICFT.sol\":2080:2104  lockupExpiry[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/ICFT.sol\":2061:2076  block.timestamp */\n      timestamp\n        /* \"contracts/ICFT.sol\":2061:2104  block.timestamp >= lockupExpiry[msg.sender] */\n      lt\n      iszero\n        /* \"contracts/ICFT.sol\":2053:2126  require(block.timestamp >= lockupExpiry[msg.sender], \"Tokens are locked\") */\n      tag_152\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_153\n      swap1\n      tag_124\n      jump\t// in\n    tag_153:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_152:\n        /* \"contracts/ICFT.sol\":2143:2169  super.transfer(to, amount) */\n      tag_154\n        /* \"contracts/ICFT.sol\":2158:2160  to */\n      dup4\n        /* \"contracts/ICFT.sol\":2162:2168  amount */\n      dup4\n        /* \"contracts/ICFT.sol\":2143:2157  super.transfer */\n      tag_155\n        /* \"contracts/ICFT.sol\":2143:2169  super.transfer(to, amount) */\n      jump\t// in\n    tag_154:\n        /* \"contracts/ICFT.sol\":2136:2169  return super.transfer(to, amount) */\n      swap1\n      pop\n        /* \"contracts/ICFT.sol\":1966:2176  function transfer(address to, uint256 amount) public override returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ICFT.sol\":330:352  address public reserve */\n    tag_94:\n      0x08\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3551:3691  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_99:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3631:3638  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3668  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3675  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3669:3674  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3675  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3684  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3676:3683  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3684  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3650:3684  return _allowances[owner][spender] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3551:3691  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_103:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_158\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_119\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_158:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2647:2648  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2635  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_160\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_161\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_161:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_160:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_162\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_143\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_162:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_113:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8726:8854  function _approve(address owner, address spender, uint256 value) internal {... */\n    tag_115:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8810:8847  _approve(owner, spender, value, true) */\n      tag_165\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8819:8824  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8826:8833  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8835:8840  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8842:8846  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8810:8818  _approve */\n      tag_166\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8810:8847  _approve(owner, spender, value, true) */\n      jump\t// in\n    tag_165:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8726:8854  function _approve(address owner, address spender, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_119:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      tag_168\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1876  _msgSender */\n      tag_113\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      jump\t// in\n    tag_168:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      tag_169\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1860  owner */\n      tag_84\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      jump\t// in\n    tag_169:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_170\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      tag_171\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1938  _msgSender */\n      tag_113\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      jump\t// in\n    tag_171:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_172\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_172:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n    tag_170:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4776:5020  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_126:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4863:4867  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4879:4894  address spender */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4897:4909  _msgSender() */\n      tag_174\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4897:4907  _msgSender */\n      tag_113\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4897:4909  _msgSender() */\n      jump\t// in\n    tag_174:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4879:4909  address spender = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4919:4956  _spendAllowance(from, spender, value) */\n      tag_175\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4935:4939  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4941:4948  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4950:4955  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4919:4934  _spendAllowance */\n      tag_176\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4919:4956  _spendAllowance(from, spender, value) */\n      jump\t// in\n    tag_175:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4966:4992  _transfer(from, to, value) */\n      tag_177\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4976:4980  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4982:4984  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4986:4991  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4966:4975  _transfer */\n      tag_178\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4966:4992  _transfer(from, to, value) */\n      jump\t// in\n    tag_177:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5009:5013  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5002:5013  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4776:5020  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7458:7666  function _mint(address account, uint256 value) internal {... */\n    tag_132:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7547:7548  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7549  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7535  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7549  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7524:7615  if (account == address(0)) {... */\n      tag_180\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7601:7602  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7572:7604  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_181\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_181:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7524:7615  if (account == address(0)) {... */\n    tag_180:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7624:7659  _update(address(0), account, value) */\n      tag_182\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7640:7641  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7644:7651  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7653:7658  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7624:7631  _update */\n      tag_183\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7624:7659  _update(address(0), account, value) */\n      jump\t// in\n    tag_182:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7458:7666  function _mint(address account, uint256 value) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7984:8190  function _burn(address account, uint256 value) internal {... */\n    tag_137:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8073:8074  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8054:8075  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8054:8061  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8054:8075  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8050:8139  if (account == address(0)) {... */\n      tag_185\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8125:8126  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8098:8128  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_186\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_186:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8050:8139  if (account == address(0)) {... */\n    tag_185:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8148:8183  _update(account, address(0), value) */\n      tag_187\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8156:8163  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8173:8174  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8177:8182  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8148:8155  _update */\n      tag_183\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8148:8183  _update(account, address(0), value) */\n      jump\t// in\n    tag_187:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7984:8190  function _burn(address account, uint256 value) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_143:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n      0x05\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3315:3493  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_155:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3384:3388  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3400:3413  address owner */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3416:3428  _msgSender() */\n      tag_190\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3416:3426  _msgSender */\n      tag_113\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3416:3428  _msgSender() */\n      jump\t// in\n    tag_190:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3400:3428  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3438:3465  _transfer(owner, to, value) */\n      tag_191\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3448:3453  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3455:3457  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3459:3464  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3438:3447  _transfer */\n      tag_178\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3438:3465  _transfer(owner, to, value) */\n      jump\t// in\n    tag_191:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3482:3486  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3475:3486  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3315:3493  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9701:10133  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n    tag_166:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9830:9831  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9813:9832  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9813:9818  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9813:9832  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9809:9898  if (owner == address(0)) {... */\n      tag_193\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9884:9885  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9855:9887  ERC20InvalidApprover(address(0)) */\n      mload(0x40)\n      0xe602df0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_194\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_194:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9809:9898  if (owner == address(0)) {... */\n    tag_193:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9930:9931  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9911:9932  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9911:9918  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9911:9932  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9907:9997  if (spender == address(0)) {... */\n      tag_195\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9983:9984  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9955:9986  ERC20InvalidSpender(address(0)) */\n      mload(0x40)\n      0x94280d6200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_196\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_196:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9907:9997  if (spender == address(0)) {... */\n    tag_195:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10036:10041  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10017  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10024  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10018:10023  owner */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10024  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10033  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10025:10032  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10033  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10041  _allowances[owner][spender] = value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10055:10064  emitEvent */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10051:10127  if (emitEvent) {... */\n      iszero\n      tag_197\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10101:10108  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10085:10116  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10094:10099  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10085:10116  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10110:10115  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10085:10116  Approval(owner, spender, value) */\n      mload(0x40)\n      tag_198\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_198:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10051:10127  if (emitEvent) {... */\n    tag_197:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9701:10133  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10415:10892  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n    tag_176:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10514:10538  uint256 currentAllowance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10541:10566  allowance(owner, spender) */\n      tag_200\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10551:10556  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10558:10565  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10541:10550  allowance */\n      tag_99\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10541:10566  allowance(owner, spender) */\n      jump\t// in\n    tag_200:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10514:10566  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10600:10617  type(uint256).max */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10580:10596  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10580:10617  currentAllowance != type(uint256).max */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10576:10886  if (currentAllowance != type(uint256).max) {... */\n      tag_201\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10656:10661  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10637:10653  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10637:10661  currentAllowance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10633:10763  if (currentAllowance < value) {... */\n      iszero\n      tag_202\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10715:10722  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10724:10740  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10742:10747  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10688:10748  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      mload(0x40)\n      0xfb8f41b200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_203\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_204\n      jump\t// in\n    tag_203:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10633:10763  if (currentAllowance < value) {... */\n    tag_202:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10804:10861  _approve(owner, spender, currentAllowance - value, false) */\n      tag_205\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10813:10818  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10820:10827  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10848:10853  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10829:10845  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10829:10853  currentAllowance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10855:10860  false */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10804:10812  _approve */\n      tag_166\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10804:10861  _approve(owner, spender, currentAllowance - value, false) */\n      jump\t// in\n    tag_205:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10576:10886  if (currentAllowance != type(uint256).max) {... */\n    tag_201:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10504:10892  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10415:10892  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5393:5693  function _transfer(address from, address to, uint256 value) internal {... */\n    tag_178:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5492:5493  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5476:5494  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5476:5480  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5476:5494  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5472:5558  if (from == address(0)) {... */\n      tag_207\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5544:5545  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5517:5547  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_208\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_208:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5472:5558  if (from == address(0)) {... */\n    tag_207:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5585:5586  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5571:5587  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5571:5573  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5571:5587  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5567:5653  if (to == address(0)) {... */\n      tag_209\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5639:5640  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5610:5642  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_210\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_210:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5567:5653  if (to == address(0)) {... */\n    tag_209:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5662:5686  _update(from, to, value) */\n      tag_211\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5670:5674  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5676:5678  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5680:5685  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5662:5669  _update */\n      tag_183\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5662:5686  _update(from, to, value) */\n      jump\t// in\n    tag_211:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5393:5693  function _transfer(address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6008:7115  function _update(address from, address to, uint256 value) internal virtual {... */\n    tag_183:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6113:6114  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6097:6115  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6097:6101  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6097:6115  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\n      tag_213\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6249:6254  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6233:6245  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6233:6254  _totalSupply += value */\n      dup3\n      dup3\n      sload\n      tag_214\n      swap2\n      swap1\n      tag_215\n      jump\t// in\n    tag_214:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\n      jump(tag_216)\n    tag_213:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6285:6304  uint256 fromBalance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6307:6316  _balances */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6307:6322  _balances[from] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6317:6321  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6307:6322  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6285:6322  uint256 fromBalance = _balances[from] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6354:6359  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6340:6351  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6340:6359  fromBalance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6336:6451  if (fromBalance < value) {... */\n      iszero\n      tag_217\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6411:6415  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6417:6428  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6430:6435  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6386:6436  ERC20InsufficientBalance(from, fromBalance, value) */\n      mload(0x40)\n      0xe450d38c00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_218\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_204\n      jump\t// in\n    tag_218:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6336:6451  if (fromBalance < value) {... */\n    tag_217:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6603:6608  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6589:6600  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6589:6608  fromBalance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6580  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6586  _balances[from] */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6581:6585  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6586  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6608  _balances[from] = fromBalance - value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:6633  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\n    tag_216:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6661:6662  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6647:6663  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6647:6649  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6647:6663  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\n      tag_219\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6826:6831  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6810:6822  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6810:6831  _totalSupply -= value */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\n      jump(tag_220)\n    tag_219:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7038:7043  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7030  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7034  _balances[to] */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7031:7033  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7034  _balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7043  _balances[to] += value */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\n    tag_220:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7098:7100  to */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7092:7096  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7102:7107  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n      mload(0x40)\n      tag_221\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_221:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6008:7115  function _update(address from, address to, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:106   */\n    tag_222:\n        /* \"#utility.yul\":59:65   */\n      0x00\n        /* \"#utility.yul\":93:98   */\n      dup2\n        /* \"#utility.yul\":87:99   */\n      mload\n        /* \"#utility.yul\":77:99   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:106   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":112:281   */\n    tag_223:\n        /* \"#utility.yul\":196:207   */\n      0x00\n        /* \"#utility.yul\":230:236   */\n      dup3\n        /* \"#utility.yul\":225:228   */\n      dup3\n        /* \"#utility.yul\":218:237   */\n      mstore\n        /* \"#utility.yul\":270:274   */\n      0x20\n        /* \"#utility.yul\":265:268   */\n      dup3\n        /* \"#utility.yul\":261:275   */\n      add\n        /* \"#utility.yul\":246:275   */\n      swap1\n      pop\n        /* \"#utility.yul\":112:281   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":287:426   */\n    tag_224:\n        /* \"#utility.yul\":376:382   */\n      dup3\n        /* \"#utility.yul\":371:374   */\n      dup2\n        /* \"#utility.yul\":366:369   */\n      dup4\n        /* \"#utility.yul\":360:383   */\n      mcopy\n        /* \"#utility.yul\":417:418   */\n      0x00\n        /* \"#utility.yul\":408:414   */\n      dup4\n        /* \"#utility.yul\":403:406   */\n      dup4\n        /* \"#utility.yul\":399:415   */\n      add\n        /* \"#utility.yul\":392:419   */\n      mstore\n        /* \"#utility.yul\":287:426   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":432:534   */\n    tag_225:\n        /* \"#utility.yul\":473:479   */\n      0x00\n        /* \"#utility.yul\":524:526   */\n      0x1f\n        /* \"#utility.yul\":520:527   */\n      not\n        /* \"#utility.yul\":515:517   */\n      0x1f\n        /* \"#utility.yul\":508:513   */\n      dup4\n        /* \"#utility.yul\":504:518   */\n      add\n        /* \"#utility.yul\":500:528   */\n      and\n        /* \"#utility.yul\":490:528   */\n      swap1\n      pop\n        /* \"#utility.yul\":432:534   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":540:917   */\n    tag_226:\n        /* \"#utility.yul\":628:631   */\n      0x00\n        /* \"#utility.yul\":656:695   */\n      tag_253\n        /* \"#utility.yul\":689:694   */\n      dup3\n        /* \"#utility.yul\":656:695   */\n      tag_222\n      jump\t// in\n    tag_253:\n        /* \"#utility.yul\":711:782   */\n      tag_254\n        /* \"#utility.yul\":775:781   */\n      dup2\n        /* \"#utility.yul\":770:773   */\n      dup6\n        /* \"#utility.yul\":711:782   */\n      tag_223\n      jump\t// in\n    tag_254:\n        /* \"#utility.yul\":704:782   */\n      swap4\n      pop\n        /* \"#utility.yul\":791:856   */\n      tag_255\n        /* \"#utility.yul\":849:855   */\n      dup2\n        /* \"#utility.yul\":844:847   */\n      dup6\n        /* \"#utility.yul\":837:841   */\n      0x20\n        /* \"#utility.yul\":830:835   */\n      dup7\n        /* \"#utility.yul\":826:842   */\n      add\n        /* \"#utility.yul\":791:856   */\n      tag_224\n      jump\t// in\n    tag_255:\n        /* \"#utility.yul\":881:910   */\n      tag_256\n        /* \"#utility.yul\":903:909   */\n      dup2\n        /* \"#utility.yul\":881:910   */\n      tag_225\n      jump\t// in\n    tag_256:\n        /* \"#utility.yul\":876:879   */\n      dup5\n        /* \"#utility.yul\":872:911   */\n      add\n        /* \"#utility.yul\":865:911   */\n      swap2\n      pop\n        /* \"#utility.yul\":632:917   */\n      pop\n        /* \"#utility.yul\":540:917   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":923:1236   */\n    tag_30:\n        /* \"#utility.yul\":1036:1040   */\n      0x00\n        /* \"#utility.yul\":1074:1076   */\n      0x20\n        /* \"#utility.yul\":1063:1072   */\n      dup3\n        /* \"#utility.yul\":1059:1077   */\n      add\n        /* \"#utility.yul\":1051:1077   */\n      swap1\n      pop\n        /* \"#utility.yul\":1123:1132   */\n      dup2\n        /* \"#utility.yul\":1117:1121   */\n      dup2\n        /* \"#utility.yul\":1113:1133   */\n      sub\n        /* \"#utility.yul\":1109:1110   */\n      0x00\n        /* \"#utility.yul\":1098:1107   */\n      dup4\n        /* \"#utility.yul\":1094:1111   */\n      add\n        /* \"#utility.yul\":1087:1134   */\n      mstore\n        /* \"#utility.yul\":1151:1229   */\n      tag_258\n        /* \"#utility.yul\":1224:1228   */\n      dup2\n        /* \"#utility.yul\":1215:1221   */\n      dup5\n        /* \"#utility.yul\":1151:1229   */\n      tag_226\n      jump\t// in\n    tag_258:\n        /* \"#utility.yul\":1143:1229   */\n      swap1\n      pop\n        /* \"#utility.yul\":923:1236   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1323:1440   */\n    tag_228:\n        /* \"#utility.yul\":1432:1433   */\n      0x00\n        /* \"#utility.yul\":1429:1430   */\n      dup1\n        /* \"#utility.yul\":1422:1434   */\n      revert\n        /* \"#utility.yul\":1569:1695   */\n    tag_230:\n        /* \"#utility.yul\":1606:1613   */\n      0x00\n        /* \"#utility.yul\":1646:1688   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1639:1644   */\n      dup3\n        /* \"#utility.yul\":1635:1689   */\n      and\n        /* \"#utility.yul\":1624:1689   */\n      swap1\n      pop\n        /* \"#utility.yul\":1569:1695   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1701:1797   */\n    tag_231:\n        /* \"#utility.yul\":1738:1745   */\n      0x00\n        /* \"#utility.yul\":1767:1791   */\n      tag_264\n        /* \"#utility.yul\":1785:1790   */\n      dup3\n        /* \"#utility.yul\":1767:1791   */\n      tag_230\n      jump\t// in\n    tag_264:\n        /* \"#utility.yul\":1756:1791   */\n      swap1\n      pop\n        /* \"#utility.yul\":1701:1797   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1803:1925   */\n    tag_232:\n        /* \"#utility.yul\":1876:1900   */\n      tag_266\n        /* \"#utility.yul\":1894:1899   */\n      dup2\n        /* \"#utility.yul\":1876:1900   */\n      tag_231\n      jump\t// in\n    tag_266:\n        /* \"#utility.yul\":1869:1874   */\n      dup2\n        /* \"#utility.yul\":1866:1901   */\n      eq\n        /* \"#utility.yul\":1856:1919   */\n      tag_267\n      jumpi\n        /* \"#utility.yul\":1915:1916   */\n      0x00\n        /* \"#utility.yul\":1912:1913   */\n      dup1\n        /* \"#utility.yul\":1905:1917   */\n      revert\n        /* \"#utility.yul\":1856:1919   */\n    tag_267:\n        /* \"#utility.yul\":1803:1925   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1931:2070   */\n    tag_233:\n        /* \"#utility.yul\":1977:1982   */\n      0x00\n        /* \"#utility.yul\":2015:2021   */\n      dup2\n        /* \"#utility.yul\":2002:2022   */\n      calldataload\n        /* \"#utility.yul\":1993:2022   */\n      swap1\n      pop\n        /* \"#utility.yul\":2031:2064   */\n      tag_269\n        /* \"#utility.yul\":2058:2063   */\n      dup2\n        /* \"#utility.yul\":2031:2064   */\n      tag_232\n      jump\t// in\n    tag_269:\n        /* \"#utility.yul\":1931:2070   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2076:2153   */\n    tag_234:\n        /* \"#utility.yul\":2113:2120   */\n      0x00\n        /* \"#utility.yul\":2142:2147   */\n      dup2\n        /* \"#utility.yul\":2131:2147   */\n      swap1\n      pop\n        /* \"#utility.yul\":2076:2153   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2159:2281   */\n    tag_235:\n        /* \"#utility.yul\":2232:2256   */\n      tag_272\n        /* \"#utility.yul\":2250:2255   */\n      dup2\n        /* \"#utility.yul\":2232:2256   */\n      tag_234\n      jump\t// in\n    tag_272:\n        /* \"#utility.yul\":2225:2230   */\n      dup2\n        /* \"#utility.yul\":2222:2257   */\n      eq\n        /* \"#utility.yul\":2212:2275   */\n      tag_273\n      jumpi\n        /* \"#utility.yul\":2271:2272   */\n      0x00\n        /* \"#utility.yul\":2268:2269   */\n      dup1\n        /* \"#utility.yul\":2261:2273   */\n      revert\n        /* \"#utility.yul\":2212:2275   */\n    tag_273:\n        /* \"#utility.yul\":2159:2281   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2287:2426   */\n    tag_236:\n        /* \"#utility.yul\":2333:2338   */\n      0x00\n        /* \"#utility.yul\":2371:2377   */\n      dup2\n        /* \"#utility.yul\":2358:2378   */\n      calldataload\n        /* \"#utility.yul\":2349:2378   */\n      swap1\n      pop\n        /* \"#utility.yul\":2387:2420   */\n      tag_275\n        /* \"#utility.yul\":2414:2419   */\n      dup2\n        /* \"#utility.yul\":2387:2420   */\n      tag_235\n      jump\t// in\n    tag_275:\n        /* \"#utility.yul\":2287:2426   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2432:2906   */\n    tag_33:\n        /* \"#utility.yul\":2500:2506   */\n      0x00\n        /* \"#utility.yul\":2508:2514   */\n      dup1\n        /* \"#utility.yul\":2557:2559   */\n      0x40\n        /* \"#utility.yul\":2545:2554   */\n      dup4\n        /* \"#utility.yul\":2536:2543   */\n      dup6\n        /* \"#utility.yul\":2532:2555   */\n      sub\n        /* \"#utility.yul\":2528:2560   */\n      slt\n        /* \"#utility.yul\":2525:2644   */\n      iszero\n      tag_277\n      jumpi\n        /* \"#utility.yul\":2563:2642   */\n      tag_278\n      tag_228\n      jump\t// in\n    tag_278:\n        /* \"#utility.yul\":2525:2644   */\n    tag_277:\n        /* \"#utility.yul\":2683:2684   */\n      0x00\n        /* \"#utility.yul\":2708:2761   */\n      tag_279\n        /* \"#utility.yul\":2753:2760   */\n      dup6\n        /* \"#utility.yul\":2744:2750   */\n      dup3\n        /* \"#utility.yul\":2733:2742   */\n      dup7\n        /* \"#utility.yul\":2729:2751   */\n      add\n        /* \"#utility.yul\":2708:2761   */\n      tag_233\n      jump\t// in\n    tag_279:\n        /* \"#utility.yul\":2698:2761   */\n      swap3\n      pop\n        /* \"#utility.yul\":2654:2771   */\n      pop\n        /* \"#utility.yul\":2810:2812   */\n      0x20\n        /* \"#utility.yul\":2836:2889   */\n      tag_280\n        /* \"#utility.yul\":2881:2888   */\n      dup6\n        /* \"#utility.yul\":2872:2878   */\n      dup3\n        /* \"#utility.yul\":2861:2870   */\n      dup7\n        /* \"#utility.yul\":2857:2879   */\n      add\n        /* \"#utility.yul\":2836:2889   */\n      tag_236\n      jump\t// in\n    tag_280:\n        /* \"#utility.yul\":2826:2889   */\n      swap2\n      pop\n        /* \"#utility.yul\":2781:2899   */\n      pop\n        /* \"#utility.yul\":2432:2906   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2912:3002   */\n    tag_237:\n        /* \"#utility.yul\":2946:2953   */\n      0x00\n        /* \"#utility.yul\":2989:2994   */\n      dup2\n        /* \"#utility.yul\":2982:2995   */\n      iszero\n        /* \"#utility.yul\":2975:2996   */\n      iszero\n        /* \"#utility.yul\":2964:2996   */\n      swap1\n      pop\n        /* \"#utility.yul\":2912:3002   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3008:3117   */\n    tag_238:\n        /* \"#utility.yul\":3089:3110   */\n      tag_283\n        /* \"#utility.yul\":3104:3109   */\n      dup2\n        /* \"#utility.yul\":3089:3110   */\n      tag_237\n      jump\t// in\n    tag_283:\n        /* \"#utility.yul\":3084:3087   */\n      dup3\n        /* \"#utility.yul\":3077:3111   */\n      mstore\n        /* \"#utility.yul\":3008:3117   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3123:3333   */\n    tag_36:\n        /* \"#utility.yul\":3210:3214   */\n      0x00\n        /* \"#utility.yul\":3248:3250   */\n      0x20\n        /* \"#utility.yul\":3237:3246   */\n      dup3\n        /* \"#utility.yul\":3233:3251   */\n      add\n        /* \"#utility.yul\":3225:3251   */\n      swap1\n      pop\n        /* \"#utility.yul\":3261:3326   */\n      tag_285\n        /* \"#utility.yul\":3323:3324   */\n      0x00\n        /* \"#utility.yul\":3312:3321   */\n      dup4\n        /* \"#utility.yul\":3308:3325   */\n      add\n        /* \"#utility.yul\":3299:3305   */\n      dup5\n        /* \"#utility.yul\":3261:3326   */\n      tag_238\n      jump\t// in\n    tag_285:\n        /* \"#utility.yul\":3123:3333   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3339:3457   */\n    tag_239:\n        /* \"#utility.yul\":3426:3450   */\n      tag_287\n        /* \"#utility.yul\":3444:3449   */\n      dup2\n        /* \"#utility.yul\":3426:3450   */\n      tag_234\n      jump\t// in\n    tag_287:\n        /* \"#utility.yul\":3421:3424   */\n      dup3\n        /* \"#utility.yul\":3414:3451   */\n      mstore\n        /* \"#utility.yul\":3339:3457   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3463:3685   */\n    tag_40:\n        /* \"#utility.yul\":3556:3560   */\n      0x00\n        /* \"#utility.yul\":3594:3596   */\n      0x20\n        /* \"#utility.yul\":3583:3592   */\n      dup3\n        /* \"#utility.yul\":3579:3597   */\n      add\n        /* \"#utility.yul\":3571:3597   */\n      swap1\n      pop\n        /* \"#utility.yul\":3607:3678   */\n      tag_289\n        /* \"#utility.yul\":3675:3676   */\n      0x00\n        /* \"#utility.yul\":3664:3673   */\n      dup4\n        /* \"#utility.yul\":3660:3677   */\n      add\n        /* \"#utility.yul\":3651:3657   */\n      dup5\n        /* \"#utility.yul\":3607:3678   */\n      tag_239\n      jump\t// in\n    tag_289:\n        /* \"#utility.yul\":3463:3685   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3691:4020   */\n    tag_45:\n        /* \"#utility.yul\":3750:3756   */\n      0x00\n        /* \"#utility.yul\":3799:3801   */\n      0x20\n        /* \"#utility.yul\":3787:3796   */\n      dup3\n        /* \"#utility.yul\":3778:3785   */\n      dup5\n        /* \"#utility.yul\":3774:3797   */\n      sub\n        /* \"#utility.yul\":3770:3802   */\n      slt\n        /* \"#utility.yul\":3767:3886   */\n      iszero\n      tag_291\n      jumpi\n        /* \"#utility.yul\":3805:3884   */\n      tag_292\n      tag_228\n      jump\t// in\n    tag_292:\n        /* \"#utility.yul\":3767:3886   */\n    tag_291:\n        /* \"#utility.yul\":3925:3926   */\n      0x00\n        /* \"#utility.yul\":3950:4003   */\n      tag_293\n        /* \"#utility.yul\":3995:4002   */\n      dup5\n        /* \"#utility.yul\":3986:3992   */\n      dup3\n        /* \"#utility.yul\":3975:3984   */\n      dup6\n        /* \"#utility.yul\":3971:3993   */\n      add\n        /* \"#utility.yul\":3950:4003   */\n      tag_233\n      jump\t// in\n    tag_293:\n        /* \"#utility.yul\":3940:4003   */\n      swap2\n      pop\n        /* \"#utility.yul\":3896:4013   */\n      pop\n        /* \"#utility.yul\":3691:4020   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4026:4645   */\n    tag_50:\n        /* \"#utility.yul\":4103:4109   */\n      0x00\n        /* \"#utility.yul\":4111:4117   */\n      dup1\n        /* \"#utility.yul\":4119:4125   */\n      0x00\n        /* \"#utility.yul\":4168:4170   */\n      0x60\n        /* \"#utility.yul\":4156:4165   */\n      dup5\n        /* \"#utility.yul\":4147:4154   */\n      dup7\n        /* \"#utility.yul\":4143:4166   */\n      sub\n        /* \"#utility.yul\":4139:4171   */\n      slt\n        /* \"#utility.yul\":4136:4255   */\n      iszero\n      tag_295\n      jumpi\n        /* \"#utility.yul\":4174:4253   */\n      tag_296\n      tag_228\n      jump\t// in\n    tag_296:\n        /* \"#utility.yul\":4136:4255   */\n    tag_295:\n        /* \"#utility.yul\":4294:4295   */\n      0x00\n        /* \"#utility.yul\":4319:4372   */\n      tag_297\n        /* \"#utility.yul\":4364:4371   */\n      dup7\n        /* \"#utility.yul\":4355:4361   */\n      dup3\n        /* \"#utility.yul\":4344:4353   */\n      dup8\n        /* \"#utility.yul\":4340:4362   */\n      add\n        /* \"#utility.yul\":4319:4372   */\n      tag_233\n      jump\t// in\n    tag_297:\n        /* \"#utility.yul\":4309:4372   */\n      swap4\n      pop\n        /* \"#utility.yul\":4265:4382   */\n      pop\n        /* \"#utility.yul\":4421:4423   */\n      0x20\n        /* \"#utility.yul\":4447:4500   */\n      tag_298\n        /* \"#utility.yul\":4492:4499   */\n      dup7\n        /* \"#utility.yul\":4483:4489   */\n      dup3\n        /* \"#utility.yul\":4472:4481   */\n      dup8\n        /* \"#utility.yul\":4468:4490   */\n      add\n        /* \"#utility.yul\":4447:4500   */\n      tag_233\n      jump\t// in\n    tag_298:\n        /* \"#utility.yul\":4437:4500   */\n      swap3\n      pop\n        /* \"#utility.yul\":4392:4510   */\n      pop\n        /* \"#utility.yul\":4549:4551   */\n      0x40\n        /* \"#utility.yul\":4575:4628   */\n      tag_299\n        /* \"#utility.yul\":4620:4627   */\n      dup7\n        /* \"#utility.yul\":4611:4617   */\n      dup3\n        /* \"#utility.yul\":4600:4609   */\n      dup8\n        /* \"#utility.yul\":4596:4618   */\n      add\n        /* \"#utility.yul\":4575:4628   */\n      tag_236\n      jump\t// in\n    tag_299:\n        /* \"#utility.yul\":4565:4628   */\n      swap2\n      pop\n        /* \"#utility.yul\":4520:4638   */\n      pop\n        /* \"#utility.yul\":4026:4645   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":4651:4769   */\n    tag_240:\n        /* \"#utility.yul\":4738:4762   */\n      tag_301\n        /* \"#utility.yul\":4756:4761   */\n      dup2\n        /* \"#utility.yul\":4738:4762   */\n      tag_231\n      jump\t// in\n    tag_301:\n        /* \"#utility.yul\":4733:4736   */\n      dup3\n        /* \"#utility.yul\":4726:4763   */\n      mstore\n        /* \"#utility.yul\":4651:4769   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4775:4997   */\n    tag_56:\n        /* \"#utility.yul\":4868:4872   */\n      0x00\n        /* \"#utility.yul\":4906:4908   */\n      0x20\n        /* \"#utility.yul\":4895:4904   */\n      dup3\n        /* \"#utility.yul\":4891:4909   */\n      add\n        /* \"#utility.yul\":4883:4909   */\n      swap1\n      pop\n        /* \"#utility.yul\":4919:4990   */\n      tag_303\n        /* \"#utility.yul\":4987:4988   */\n      0x00\n        /* \"#utility.yul\":4976:4985   */\n      dup4\n        /* \"#utility.yul\":4972:4989   */\n      add\n        /* \"#utility.yul\":4963:4969   */\n      dup5\n        /* \"#utility.yul\":4919:4990   */\n      tag_240\n      jump\t// in\n    tag_303:\n        /* \"#utility.yul\":4775:4997   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5003:5089   */\n    tag_241:\n        /* \"#utility.yul\":5038:5045   */\n      0x00\n        /* \"#utility.yul\":5078:5082   */\n      0xff\n        /* \"#utility.yul\":5071:5076   */\n      dup3\n        /* \"#utility.yul\":5067:5083   */\n      and\n        /* \"#utility.yul\":5056:5083   */\n      swap1\n      pop\n        /* \"#utility.yul\":5003:5089   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5095:5207   */\n    tag_242:\n        /* \"#utility.yul\":5178:5200   */\n      tag_306\n        /* \"#utility.yul\":5194:5199   */\n      dup2\n        /* \"#utility.yul\":5178:5200   */\n      tag_241\n      jump\t// in\n    tag_306:\n        /* \"#utility.yul\":5173:5176   */\n      dup3\n        /* \"#utility.yul\":5166:5201   */\n      mstore\n        /* \"#utility.yul\":5095:5207   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5213:5427   */\n    tag_60:\n        /* \"#utility.yul\":5302:5306   */\n      0x00\n        /* \"#utility.yul\":5340:5342   */\n      0x20\n        /* \"#utility.yul\":5329:5338   */\n      dup3\n        /* \"#utility.yul\":5325:5343   */\n      add\n        /* \"#utility.yul\":5317:5343   */\n      swap1\n      pop\n        /* \"#utility.yul\":5353:5420   */\n      tag_308\n        /* \"#utility.yul\":5417:5418   */\n      0x00\n        /* \"#utility.yul\":5406:5415   */\n      dup4\n        /* \"#utility.yul\":5402:5419   */\n      add\n        /* \"#utility.yul\":5393:5399   */\n      dup5\n        /* \"#utility.yul\":5353:5420   */\n      tag_242\n      jump\t// in\n    tag_308:\n        /* \"#utility.yul\":5213:5427   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5433:5762   */\n    tag_69:\n        /* \"#utility.yul\":5492:5498   */\n      0x00\n        /* \"#utility.yul\":5541:5543   */\n      0x20\n        /* \"#utility.yul\":5529:5538   */\n      dup3\n        /* \"#utility.yul\":5520:5527   */\n      dup5\n        /* \"#utility.yul\":5516:5539   */\n      sub\n        /* \"#utility.yul\":5512:5544   */\n      slt\n        /* \"#utility.yul\":5509:5628   */\n      iszero\n      tag_310\n      jumpi\n        /* \"#utility.yul\":5547:5626   */\n      tag_311\n      tag_228\n      jump\t// in\n    tag_311:\n        /* \"#utility.yul\":5509:5628   */\n    tag_310:\n        /* \"#utility.yul\":5667:5668   */\n      0x00\n        /* \"#utility.yul\":5692:5745   */\n      tag_312\n        /* \"#utility.yul\":5737:5744   */\n      dup5\n        /* \"#utility.yul\":5728:5734   */\n      dup3\n        /* \"#utility.yul\":5717:5726   */\n      dup6\n        /* \"#utility.yul\":5713:5735   */\n      add\n        /* \"#utility.yul\":5692:5745   */\n      tag_236\n      jump\t// in\n    tag_312:\n        /* \"#utility.yul\":5682:5745   */\n      swap2\n      pop\n        /* \"#utility.yul\":5638:5755   */\n      pop\n        /* \"#utility.yul\":5433:5762   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5768:6242   */\n    tag_98:\n        /* \"#utility.yul\":5836:5842   */\n      0x00\n        /* \"#utility.yul\":5844:5850   */\n      dup1\n        /* \"#utility.yul\":5893:5895   */\n      0x40\n        /* \"#utility.yul\":5881:5890   */\n      dup4\n        /* \"#utility.yul\":5872:5879   */\n      dup6\n        /* \"#utility.yul\":5868:5891   */\n      sub\n        /* \"#utility.yul\":5864:5896   */\n      slt\n        /* \"#utility.yul\":5861:5980   */\n      iszero\n      tag_314\n      jumpi\n        /* \"#utility.yul\":5899:5978   */\n      tag_315\n      tag_228\n      jump\t// in\n    tag_315:\n        /* \"#utility.yul\":5861:5980   */\n    tag_314:\n        /* \"#utility.yul\":6019:6020   */\n      0x00\n        /* \"#utility.yul\":6044:6097   */\n      tag_316\n        /* \"#utility.yul\":6089:6096   */\n      dup6\n        /* \"#utility.yul\":6080:6086   */\n      dup3\n        /* \"#utility.yul\":6069:6078   */\n      dup7\n        /* \"#utility.yul\":6065:6087   */\n      add\n        /* \"#utility.yul\":6044:6097   */\n      tag_233\n      jump\t// in\n    tag_316:\n        /* \"#utility.yul\":6034:6097   */\n      swap3\n      pop\n        /* \"#utility.yul\":5990:6107   */\n      pop\n        /* \"#utility.yul\":6146:6148   */\n      0x20\n        /* \"#utility.yul\":6172:6225   */\n      tag_317\n        /* \"#utility.yul\":6217:6224   */\n      dup6\n        /* \"#utility.yul\":6208:6214   */\n      dup3\n        /* \"#utility.yul\":6197:6206   */\n      dup7\n        /* \"#utility.yul\":6193:6215   */\n      add\n        /* \"#utility.yul\":6172:6225   */\n      tag_233\n      jump\t// in\n    tag_317:\n        /* \"#utility.yul\":6162:6225   */\n      swap2\n      pop\n        /* \"#utility.yul\":6117:6235   */\n      pop\n        /* \"#utility.yul\":5768:6242   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6248:6428   */\n    tag_243:\n        /* \"#utility.yul\":6296:6373   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":6293:6294   */\n      0x00\n        /* \"#utility.yul\":6286:6374   */\n      mstore\n        /* \"#utility.yul\":6393:6397   */\n      0x22\n        /* \"#utility.yul\":6390:6391   */\n      0x04\n        /* \"#utility.yul\":6383:6398   */\n      mstore\n        /* \"#utility.yul\":6417:6421   */\n      0x24\n        /* \"#utility.yul\":6414:6415   */\n      0x00\n        /* \"#utility.yul\":6407:6422   */\n      revert\n        /* \"#utility.yul\":6434:6754   */\n    tag_106:\n        /* \"#utility.yul\":6478:6484   */\n      0x00\n        /* \"#utility.yul\":6515:6516   */\n      0x02\n        /* \"#utility.yul\":6509:6513   */\n      dup3\n        /* \"#utility.yul\":6505:6517   */\n      div\n        /* \"#utility.yul\":6495:6517   */\n      swap1\n      pop\n        /* \"#utility.yul\":6562:6563   */\n      0x01\n        /* \"#utility.yul\":6556:6560   */\n      dup3\n        /* \"#utility.yul\":6552:6564   */\n      and\n        /* \"#utility.yul\":6583:6601   */\n      dup1\n        /* \"#utility.yul\":6573:6654   */\n      tag_320\n      jumpi\n        /* \"#utility.yul\":6639:6643   */\n      0x7f\n        /* \"#utility.yul\":6631:6637   */\n      dup3\n        /* \"#utility.yul\":6627:6644   */\n      and\n        /* \"#utility.yul\":6617:6644   */\n      swap2\n      pop\n        /* \"#utility.yul\":6573:6654   */\n    tag_320:\n        /* \"#utility.yul\":6701:6703   */\n      0x20\n        /* \"#utility.yul\":6693:6699   */\n      dup3\n        /* \"#utility.yul\":6690:6704   */\n      lt\n        /* \"#utility.yul\":6670:6688   */\n      dup2\n        /* \"#utility.yul\":6667:6705   */\n      sub\n        /* \"#utility.yul\":6664:6748   */\n      tag_321\n      jumpi\n        /* \"#utility.yul\":6720:6738   */\n      tag_322\n      tag_243\n      jump\t// in\n    tag_322:\n        /* \"#utility.yul\":6664:6748   */\n    tag_321:\n        /* \"#utility.yul\":6485:6754   */\n      pop\n        /* \"#utility.yul\":6434:6754   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6760:6927   */\n    tag_244:\n        /* \"#utility.yul\":6900:6919   */\n      0x546f6b656e7320617265206c6f636b6564000000000000000000000000000000\n        /* \"#utility.yul\":6896:6897   */\n      0x00\n        /* \"#utility.yul\":6888:6894   */\n      dup3\n        /* \"#utility.yul\":6884:6898   */\n      add\n        /* \"#utility.yul\":6877:6920   */\n      mstore\n        /* \"#utility.yul\":6760:6927   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6933:7299   */\n    tag_245:\n        /* \"#utility.yul\":7075:7078   */\n      0x00\n        /* \"#utility.yul\":7096:7163   */\n      tag_325\n        /* \"#utility.yul\":7160:7162   */\n      0x11\n        /* \"#utility.yul\":7155:7158   */\n      dup4\n        /* \"#utility.yul\":7096:7163   */\n      tag_223\n      jump\t// in\n    tag_325:\n        /* \"#utility.yul\":7089:7163   */\n      swap2\n      pop\n        /* \"#utility.yul\":7172:7265   */\n      tag_326\n        /* \"#utility.yul\":7261:7264   */\n      dup3\n        /* \"#utility.yul\":7172:7265   */\n      tag_244\n      jump\t// in\n    tag_326:\n        /* \"#utility.yul\":7290:7292   */\n      0x20\n        /* \"#utility.yul\":7285:7288   */\n      dup3\n        /* \"#utility.yul\":7281:7293   */\n      add\n        /* \"#utility.yul\":7274:7293   */\n      swap1\n      pop\n        /* \"#utility.yul\":6933:7299   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7305:7724   */\n    tag_124:\n        /* \"#utility.yul\":7471:7475   */\n      0x00\n        /* \"#utility.yul\":7509:7511   */\n      0x20\n        /* \"#utility.yul\":7498:7507   */\n      dup3\n        /* \"#utility.yul\":7494:7512   */\n      add\n        /* \"#utility.yul\":7486:7512   */\n      swap1\n      pop\n        /* \"#utility.yul\":7558:7567   */\n      dup2\n        /* \"#utility.yul\":7552:7556   */\n      dup2\n        /* \"#utility.yul\":7548:7568   */\n      sub\n        /* \"#utility.yul\":7544:7545   */\n      0x00\n        /* \"#utility.yul\":7533:7542   */\n      dup4\n        /* \"#utility.yul\":7529:7546   */\n      add\n        /* \"#utility.yul\":7522:7569   */\n      mstore\n        /* \"#utility.yul\":7586:7717   */\n      tag_328\n        /* \"#utility.yul\":7712:7716   */\n      dup2\n        /* \"#utility.yul\":7586:7717   */\n      tag_245\n      jump\t// in\n    tag_328:\n        /* \"#utility.yul\":7578:7717   */\n      swap1\n      pop\n        /* \"#utility.yul\":7305:7724   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7730:8172   */\n    tag_204:\n        /* \"#utility.yul\":7879:7883   */\n      0x00\n        /* \"#utility.yul\":7917:7919   */\n      0x60\n        /* \"#utility.yul\":7906:7915   */\n      dup3\n        /* \"#utility.yul\":7902:7920   */\n      add\n        /* \"#utility.yul\":7894:7920   */\n      swap1\n      pop\n        /* \"#utility.yul\":7930:8001   */\n      tag_330\n        /* \"#utility.yul\":7998:7999   */\n      0x00\n        /* \"#utility.yul\":7987:7996   */\n      dup4\n        /* \"#utility.yul\":7983:8000   */\n      add\n        /* \"#utility.yul\":7974:7980   */\n      dup7\n        /* \"#utility.yul\":7930:8001   */\n      tag_240\n      jump\t// in\n    tag_330:\n        /* \"#utility.yul\":8011:8083   */\n      tag_331\n        /* \"#utility.yul\":8079:8081   */\n      0x20\n        /* \"#utility.yul\":8068:8077   */\n      dup4\n        /* \"#utility.yul\":8064:8082   */\n      add\n        /* \"#utility.yul\":8055:8061   */\n      dup6\n        /* \"#utility.yul\":8011:8083   */\n      tag_239\n      jump\t// in\n    tag_331:\n        /* \"#utility.yul\":8093:8165   */\n      tag_332\n        /* \"#utility.yul\":8161:8163   */\n      0x40\n        /* \"#utility.yul\":8150:8159   */\n      dup4\n        /* \"#utility.yul\":8146:8164   */\n      add\n        /* \"#utility.yul\":8137:8143   */\n      dup5\n        /* \"#utility.yul\":8093:8165   */\n      tag_239\n      jump\t// in\n    tag_332:\n        /* \"#utility.yul\":7730:8172   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8178:8358   */\n    tag_246:\n        /* \"#utility.yul\":8226:8303   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":8223:8224   */\n      0x00\n        /* \"#utility.yul\":8216:8304   */\n      mstore\n        /* \"#utility.yul\":8323:8327   */\n      0x11\n        /* \"#utility.yul\":8320:8321   */\n      0x04\n        /* \"#utility.yul\":8313:8328   */\n      mstore\n        /* \"#utility.yul\":8347:8351   */\n      0x24\n        /* \"#utility.yul\":8344:8345   */\n      0x00\n        /* \"#utility.yul\":8337:8352   */\n      revert\n        /* \"#utility.yul\":8364:8555   */\n    tag_215:\n        /* \"#utility.yul\":8404:8407   */\n      0x00\n        /* \"#utility.yul\":8423:8443   */\n      tag_335\n        /* \"#utility.yul\":8441:8442   */\n      dup3\n        /* \"#utility.yul\":8423:8443   */\n      tag_234\n      jump\t// in\n    tag_335:\n        /* \"#utility.yul\":8418:8443   */\n      swap2\n      pop\n        /* \"#utility.yul\":8457:8477   */\n      tag_336\n        /* \"#utility.yul\":8475:8476   */\n      dup4\n        /* \"#utility.yul\":8457:8477   */\n      tag_234\n      jump\t// in\n    tag_336:\n        /* \"#utility.yul\":8452:8477   */\n      swap3\n      pop\n        /* \"#utility.yul\":8500:8501   */\n      dup3\n        /* \"#utility.yul\":8497:8498   */\n      dup3\n        /* \"#utility.yul\":8493:8502   */\n      add\n        /* \"#utility.yul\":8486:8502   */\n      swap1\n      pop\n        /* \"#utility.yul\":8521:8524   */\n      dup1\n        /* \"#utility.yul\":8518:8519   */\n      dup3\n        /* \"#utility.yul\":8515:8525   */\n      gt\n        /* \"#utility.yul\":8512:8548   */\n      iszero\n      tag_337\n      jumpi\n        /* \"#utility.yul\":8528:8546   */\n      tag_338\n      tag_246\n      jump\t// in\n    tag_338:\n        /* \"#utility.yul\":8512:8548   */\n    tag_337:\n        /* \"#utility.yul\":8364:8555   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220cd062e27254d501db682d580f07091f6d39f2fa3ca55df2b6caada0f6b665a0664736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1089": {
									"entryPoint": null,
									"id": 1089,
									"parameterSlots": 7,
									"returnSlots": 0
								},
								"@_336": {
									"entryPoint": null,
									"id": 336,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_50": {
									"entryPoint": null,
									"id": 50,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_mint_639": {
									"entryPoint": 1263,
									"id": 639,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 1068,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_update_606": {
									"entryPoint": 1396,
									"id": 606,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 2007,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 2058,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_addresst_addresst_addresst_addresst_addresst_uint256_fromMemory": {
									"entryPoint": 2078,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 7
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 3003,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_854cf043fa623ebed8453fda259d33de3f6e7493e6b8ff90fcfdd906ab498ce3_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3099,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 3417,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 3018,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 3432,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_854cf043fa623ebed8453fda259d33de3f6e7493e6b8ff90fcfdd906ab498ce3__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3133,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 3485,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 2383,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 2235,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 3043,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 3366,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 3318,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 3208,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 2659,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 1968,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 1937,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 2027,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 2625,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 2518,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 2796,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 2401,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 2335,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 2769,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 2509,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 2741,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 3163,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 3273,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 2290,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 2245,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 2551,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 1933,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"shift_left_dynamic": {
									"entryPoint": 2416,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 2729,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 2601,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"store_literal_in_memory_854cf043fa623ebed8453fda259d33de3f6e7493e6b8ff90fcfdd906ab498ce3": {
									"entryPoint": 3059,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 2428,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 2560,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 1985,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 2036,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 2597,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:11120:7",
										"nodeType": "YulBlock",
										"src": "0:11120:7",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:7",
													"nodeType": "YulBlock",
													"src": "47:35:7",
													"statements": [
														{
															"nativeSrc": "57:19:7",
															"nodeType": "YulAssignment",
															"src": "57:19:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:7",
																		"nodeType": "YulLiteral",
																		"src": "73:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:7"
																},
																"nativeSrc": "67:9:7",
																"nodeType": "YulFunctionCall",
																"src": "67:9:7"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:7"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:7",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:7",
														"nodeType": "YulTypedName",
														"src": "40:6:7",
														"type": ""
													}
												],
												"src": "7:75:7"
											},
											{
												"body": {
													"nativeSrc": "177:28:7",
													"nodeType": "YulBlock",
													"src": "177:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:7",
																		"nodeType": "YulLiteral",
																		"src": "194:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:7",
																		"nodeType": "YulLiteral",
																		"src": "197:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:7"
																},
																"nativeSrc": "187:12:7",
																"nodeType": "YulFunctionCall",
																"src": "187:12:7"
															},
															"nativeSrc": "187:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:7"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:7"
											},
											{
												"body": {
													"nativeSrc": "300:28:7",
													"nodeType": "YulBlock",
													"src": "300:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:7",
																		"nodeType": "YulLiteral",
																		"src": "317:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:7",
																		"nodeType": "YulLiteral",
																		"src": "320:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:7"
																},
																"nativeSrc": "310:12:7",
																"nodeType": "YulFunctionCall",
																"src": "310:12:7"
															},
															"nativeSrc": "310:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:7"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:7"
											},
											{
												"body": {
													"nativeSrc": "379:81:7",
													"nodeType": "YulBlock",
													"src": "379:81:7",
													"statements": [
														{
															"nativeSrc": "389:65:7",
															"nodeType": "YulAssignment",
															"src": "389:65:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:7",
																		"nodeType": "YulLiteral",
																		"src": "411:42:7",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:7"
																},
																"nativeSrc": "400:54:7",
																"nodeType": "YulFunctionCall",
																"src": "400:54:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:7",
														"nodeType": "YulTypedName",
														"src": "361:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:7",
														"nodeType": "YulTypedName",
														"src": "371:7:7",
														"type": ""
													}
												],
												"src": "334:126:7"
											},
											{
												"body": {
													"nativeSrc": "511:51:7",
													"nodeType": "YulBlock",
													"src": "511:51:7",
													"statements": [
														{
															"nativeSrc": "521:35:7",
															"nodeType": "YulAssignment",
															"src": "521:35:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:7"
																},
																"nativeSrc": "532:24:7",
																"nodeType": "YulFunctionCall",
																"src": "532:24:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:7",
														"nodeType": "YulTypedName",
														"src": "493:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:7",
														"nodeType": "YulTypedName",
														"src": "503:7:7",
														"type": ""
													}
												],
												"src": "466:96:7"
											},
											{
												"body": {
													"nativeSrc": "611:79:7",
													"nodeType": "YulBlock",
													"src": "611:79:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:7",
																"nodeType": "YulBlock",
																"src": "668:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:7",
																					"nodeType": "YulLiteral",
																					"src": "677:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:7",
																					"nodeType": "YulLiteral",
																					"src": "680:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:7"
																			},
																			"nativeSrc": "670:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:7"
																		},
																		"nativeSrc": "670:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:7",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:7"
																				},
																				"nativeSrc": "641:24:7",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:7"
																		},
																		"nativeSrc": "631:35:7",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:7"
																},
																"nativeSrc": "624:43:7",
																"nodeType": "YulFunctionCall",
																"src": "624:43:7"
															},
															"nativeSrc": "621:63:7",
															"nodeType": "YulIf",
															"src": "621:63:7"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:7",
														"nodeType": "YulTypedName",
														"src": "604:5:7",
														"type": ""
													}
												],
												"src": "568:122:7"
											},
											{
												"body": {
													"nativeSrc": "759:80:7",
													"nodeType": "YulBlock",
													"src": "759:80:7",
													"statements": [
														{
															"nativeSrc": "769:22:7",
															"nodeType": "YulAssignment",
															"src": "769:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "784:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "778:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:7"
																},
																"nativeSrc": "778:13:7",
																"nodeType": "YulFunctionCall",
																"src": "778:13:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "769:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "827:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "800:26:7",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:7"
																},
																"nativeSrc": "800:33:7",
																"nodeType": "YulFunctionCall",
																"src": "800:33:7"
															},
															"nativeSrc": "800:33:7",
															"nodeType": "YulExpressionStatement",
															"src": "800:33:7"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "696:143:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "737:6:7",
														"nodeType": "YulTypedName",
														"src": "737:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "745:3:7",
														"nodeType": "YulTypedName",
														"src": "745:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "753:5:7",
														"nodeType": "YulTypedName",
														"src": "753:5:7",
														"type": ""
													}
												],
												"src": "696:143:7"
											},
											{
												"body": {
													"nativeSrc": "890:32:7",
													"nodeType": "YulBlock",
													"src": "890:32:7",
													"statements": [
														{
															"nativeSrc": "900:16:7",
															"nodeType": "YulAssignment",
															"src": "900:16:7",
															"value": {
																"name": "value",
																"nativeSrc": "911:5:7",
																"nodeType": "YulIdentifier",
																"src": "911:5:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "900:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "900:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "845:77:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "872:5:7",
														"nodeType": "YulTypedName",
														"src": "872:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "882:7:7",
														"nodeType": "YulTypedName",
														"src": "882:7:7",
														"type": ""
													}
												],
												"src": "845:77:7"
											},
											{
												"body": {
													"nativeSrc": "971:79:7",
													"nodeType": "YulBlock",
													"src": "971:79:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "1028:16:7",
																"nodeType": "YulBlock",
																"src": "1028:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1037:1:7",
																					"nodeType": "YulLiteral",
																					"src": "1037:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1040:1:7",
																					"nodeType": "YulLiteral",
																					"src": "1040:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1030:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "1030:6:7"
																			},
																			"nativeSrc": "1030:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "1030:12:7"
																		},
																		"nativeSrc": "1030:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "1030:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "994:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "994:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1019:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "1019:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "1001:17:7",
																					"nodeType": "YulIdentifier",
																					"src": "1001:17:7"
																				},
																				"nativeSrc": "1001:24:7",
																				"nodeType": "YulFunctionCall",
																				"src": "1001:24:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "991:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "991:2:7"
																		},
																		"nativeSrc": "991:35:7",
																		"nodeType": "YulFunctionCall",
																		"src": "991:35:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "984:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "984:6:7"
																},
																"nativeSrc": "984:43:7",
																"nodeType": "YulFunctionCall",
																"src": "984:43:7"
															},
															"nativeSrc": "981:63:7",
															"nodeType": "YulIf",
															"src": "981:63:7"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "928:122:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "964:5:7",
														"nodeType": "YulTypedName",
														"src": "964:5:7",
														"type": ""
													}
												],
												"src": "928:122:7"
											},
											{
												"body": {
													"nativeSrc": "1119:80:7",
													"nodeType": "YulBlock",
													"src": "1119:80:7",
													"statements": [
														{
															"nativeSrc": "1129:22:7",
															"nodeType": "YulAssignment",
															"src": "1129:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1144:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "1144:6:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1138:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "1138:5:7"
																},
																"nativeSrc": "1138:13:7",
																"nodeType": "YulFunctionCall",
																"src": "1138:13:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1129:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "1129:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1187:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "1187:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "1160:26:7",
																	"nodeType": "YulIdentifier",
																	"src": "1160:26:7"
																},
																"nativeSrc": "1160:33:7",
																"nodeType": "YulFunctionCall",
																"src": "1160:33:7"
															},
															"nativeSrc": "1160:33:7",
															"nodeType": "YulExpressionStatement",
															"src": "1160:33:7"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nativeSrc": "1056:143:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1097:6:7",
														"nodeType": "YulTypedName",
														"src": "1097:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1105:3:7",
														"nodeType": "YulTypedName",
														"src": "1105:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1113:5:7",
														"nodeType": "YulTypedName",
														"src": "1113:5:7",
														"type": ""
													}
												],
												"src": "1056:143:7"
											},
											{
												"body": {
													"nativeSrc": "1384:1112:7",
													"nodeType": "YulBlock",
													"src": "1384:1112:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "1431:83:7",
																"nodeType": "YulBlock",
																"src": "1431:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1433:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "1433:77:7"
																			},
																			"nativeSrc": "1433:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "1433:79:7"
																		},
																		"nativeSrc": "1433:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "1433:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1405:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "1405:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1414:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "1414:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1401:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1401:3:7"
																		},
																		"nativeSrc": "1401:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1401:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1426:3:7",
																		"nodeType": "YulLiteral",
																		"src": "1426:3:7",
																		"type": "",
																		"value": "224"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1397:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1397:3:7"
																},
																"nativeSrc": "1397:33:7",
																"nodeType": "YulFunctionCall",
																"src": "1397:33:7"
															},
															"nativeSrc": "1394:120:7",
															"nodeType": "YulIf",
															"src": "1394:120:7"
														},
														{
															"nativeSrc": "1524:128:7",
															"nodeType": "YulBlock",
															"src": "1524:128:7",
															"statements": [
																{
																	"nativeSrc": "1539:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1539:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1553:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1553:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1543:6:7",
																			"nodeType": "YulTypedName",
																			"src": "1543:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1568:74:7",
																	"nodeType": "YulAssignment",
																	"src": "1568:74:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1614:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "1614:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1625:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "1625:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1610:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "1610:3:7"
																				},
																				"nativeSrc": "1610:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "1610:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1634:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "1634:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1578:31:7",
																			"nodeType": "YulIdentifier",
																			"src": "1578:31:7"
																		},
																		"nativeSrc": "1578:64:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1578:64:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1568:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "1568:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1662:129:7",
															"nodeType": "YulBlock",
															"src": "1662:129:7",
															"statements": [
																{
																	"nativeSrc": "1677:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1677:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1691:2:7",
																		"nodeType": "YulLiteral",
																		"src": "1691:2:7",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1681:6:7",
																			"nodeType": "YulTypedName",
																			"src": "1681:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1707:74:7",
																	"nodeType": "YulAssignment",
																	"src": "1707:74:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1753:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "1753:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1764:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "1764:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1749:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "1749:3:7"
																				},
																				"nativeSrc": "1749:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "1749:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1773:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "1773:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1717:31:7",
																			"nodeType": "YulIdentifier",
																			"src": "1717:31:7"
																		},
																		"nativeSrc": "1717:64:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1717:64:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "1707:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "1707:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1801:129:7",
															"nodeType": "YulBlock",
															"src": "1801:129:7",
															"statements": [
																{
																	"nativeSrc": "1816:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1816:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1830:2:7",
																		"nodeType": "YulLiteral",
																		"src": "1830:2:7",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1820:6:7",
																			"nodeType": "YulTypedName",
																			"src": "1820:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1846:74:7",
																	"nodeType": "YulAssignment",
																	"src": "1846:74:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1892:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "1892:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1903:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "1903:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1888:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "1888:3:7"
																				},
																				"nativeSrc": "1888:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "1888:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1912:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "1912:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1856:31:7",
																			"nodeType": "YulIdentifier",
																			"src": "1856:31:7"
																		},
																		"nativeSrc": "1856:64:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1856:64:7"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "1846:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "1846:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1940:129:7",
															"nodeType": "YulBlock",
															"src": "1940:129:7",
															"statements": [
																{
																	"nativeSrc": "1955:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1955:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1969:2:7",
																		"nodeType": "YulLiteral",
																		"src": "1969:2:7",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1959:6:7",
																			"nodeType": "YulTypedName",
																			"src": "1959:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1985:74:7",
																	"nodeType": "YulAssignment",
																	"src": "1985:74:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2031:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "2031:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2042:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "2042:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2027:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "2027:3:7"
																				},
																				"nativeSrc": "2027:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "2027:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2051:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "2051:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1995:31:7",
																			"nodeType": "YulIdentifier",
																			"src": "1995:31:7"
																		},
																		"nativeSrc": "1995:64:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1995:64:7"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nativeSrc": "1985:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "1985:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2079:130:7",
															"nodeType": "YulBlock",
															"src": "2079:130:7",
															"statements": [
																{
																	"nativeSrc": "2094:17:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2094:17:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2108:3:7",
																		"nodeType": "YulLiteral",
																		"src": "2108:3:7",
																		"type": "",
																		"value": "128"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2098:6:7",
																			"nodeType": "YulTypedName",
																			"src": "2098:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2125:74:7",
																	"nodeType": "YulAssignment",
																	"src": "2125:74:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2171:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "2171:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2182:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "2182:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2167:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "2167:3:7"
																				},
																				"nativeSrc": "2167:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "2167:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2191:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "2191:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "2135:31:7",
																			"nodeType": "YulIdentifier",
																			"src": "2135:31:7"
																		},
																		"nativeSrc": "2135:64:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2135:64:7"
																	},
																	"variableNames": [
																		{
																			"name": "value4",
																			"nativeSrc": "2125:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "2125:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2219:130:7",
															"nodeType": "YulBlock",
															"src": "2219:130:7",
															"statements": [
																{
																	"nativeSrc": "2234:17:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2234:17:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2248:3:7",
																		"nodeType": "YulLiteral",
																		"src": "2248:3:7",
																		"type": "",
																		"value": "160"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2238:6:7",
																			"nodeType": "YulTypedName",
																			"src": "2238:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2265:74:7",
																	"nodeType": "YulAssignment",
																	"src": "2265:74:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2311:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "2311:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2322:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "2322:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2307:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "2307:3:7"
																				},
																				"nativeSrc": "2307:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "2307:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2331:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "2331:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "2275:31:7",
																			"nodeType": "YulIdentifier",
																			"src": "2275:31:7"
																		},
																		"nativeSrc": "2275:64:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2275:64:7"
																	},
																	"variableNames": [
																		{
																			"name": "value5",
																			"nativeSrc": "2265:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "2265:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2359:130:7",
															"nodeType": "YulBlock",
															"src": "2359:130:7",
															"statements": [
																{
																	"nativeSrc": "2374:17:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2374:17:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2388:3:7",
																		"nodeType": "YulLiteral",
																		"src": "2388:3:7",
																		"type": "",
																		"value": "192"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2378:6:7",
																			"nodeType": "YulTypedName",
																			"src": "2378:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2405:74:7",
																	"nodeType": "YulAssignment",
																	"src": "2405:74:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2451:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "2451:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2462:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "2462:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2447:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "2447:3:7"
																				},
																				"nativeSrc": "2447:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "2447:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2471:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "2471:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "2415:31:7",
																			"nodeType": "YulIdentifier",
																			"src": "2415:31:7"
																		},
																		"nativeSrc": "2415:64:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2415:64:7"
																	},
																	"variableNames": [
																		{
																			"name": "value6",
																			"nativeSrc": "2405:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "2405:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_addresst_addresst_addresst_addresst_uint256_fromMemory",
												"nativeSrc": "1205:1291:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1306:9:7",
														"nodeType": "YulTypedName",
														"src": "1306:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1317:7:7",
														"nodeType": "YulTypedName",
														"src": "1317:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1329:6:7",
														"nodeType": "YulTypedName",
														"src": "1329:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1337:6:7",
														"nodeType": "YulTypedName",
														"src": "1337:6:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "1345:6:7",
														"nodeType": "YulTypedName",
														"src": "1345:6:7",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "1353:6:7",
														"nodeType": "YulTypedName",
														"src": "1353:6:7",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "1361:6:7",
														"nodeType": "YulTypedName",
														"src": "1361:6:7",
														"type": ""
													},
													{
														"name": "value5",
														"nativeSrc": "1369:6:7",
														"nodeType": "YulTypedName",
														"src": "1369:6:7",
														"type": ""
													},
													{
														"name": "value6",
														"nativeSrc": "1377:6:7",
														"nodeType": "YulTypedName",
														"src": "1377:6:7",
														"type": ""
													}
												],
												"src": "1205:1291:7"
											},
											{
												"body": {
													"nativeSrc": "2561:40:7",
													"nodeType": "YulBlock",
													"src": "2561:40:7",
													"statements": [
														{
															"nativeSrc": "2572:22:7",
															"nodeType": "YulAssignment",
															"src": "2572:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2588:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "2588:5:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2582:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "2582:5:7"
																},
																"nativeSrc": "2582:12:7",
																"nodeType": "YulFunctionCall",
																"src": "2582:12:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "2572:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2572:6:7"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "2502:99:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2544:5:7",
														"nodeType": "YulTypedName",
														"src": "2544:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "2554:6:7",
														"nodeType": "YulTypedName",
														"src": "2554:6:7",
														"type": ""
													}
												],
												"src": "2502:99:7"
											},
											{
												"body": {
													"nativeSrc": "2635:152:7",
													"nodeType": "YulBlock",
													"src": "2635:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2652:1:7",
																		"nodeType": "YulLiteral",
																		"src": "2652:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2655:77:7",
																		"nodeType": "YulLiteral",
																		"src": "2655:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2645:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2645:6:7"
																},
																"nativeSrc": "2645:88:7",
																"nodeType": "YulFunctionCall",
																"src": "2645:88:7"
															},
															"nativeSrc": "2645:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "2645:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2749:1:7",
																		"nodeType": "YulLiteral",
																		"src": "2749:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2752:4:7",
																		"nodeType": "YulLiteral",
																		"src": "2752:4:7",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2742:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2742:6:7"
																},
																"nativeSrc": "2742:15:7",
																"nodeType": "YulFunctionCall",
																"src": "2742:15:7"
															},
															"nativeSrc": "2742:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "2742:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2773:1:7",
																		"nodeType": "YulLiteral",
																		"src": "2773:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2776:4:7",
																		"nodeType": "YulLiteral",
																		"src": "2776:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "2766:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2766:6:7"
																},
																"nativeSrc": "2766:15:7",
																"nodeType": "YulFunctionCall",
																"src": "2766:15:7"
															},
															"nativeSrc": "2766:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "2766:15:7"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "2607:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "2607:180:7"
											},
											{
												"body": {
													"nativeSrc": "2821:152:7",
													"nodeType": "YulBlock",
													"src": "2821:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2838:1:7",
																		"nodeType": "YulLiteral",
																		"src": "2838:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2841:77:7",
																		"nodeType": "YulLiteral",
																		"src": "2841:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2831:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2831:6:7"
																},
																"nativeSrc": "2831:88:7",
																"nodeType": "YulFunctionCall",
																"src": "2831:88:7"
															},
															"nativeSrc": "2831:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "2831:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2935:1:7",
																		"nodeType": "YulLiteral",
																		"src": "2935:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2938:4:7",
																		"nodeType": "YulLiteral",
																		"src": "2938:4:7",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2928:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2928:6:7"
																},
																"nativeSrc": "2928:15:7",
																"nodeType": "YulFunctionCall",
																"src": "2928:15:7"
															},
															"nativeSrc": "2928:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "2928:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2959:1:7",
																		"nodeType": "YulLiteral",
																		"src": "2959:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2962:4:7",
																		"nodeType": "YulLiteral",
																		"src": "2962:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "2952:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2952:6:7"
																},
																"nativeSrc": "2952:15:7",
																"nodeType": "YulFunctionCall",
																"src": "2952:15:7"
															},
															"nativeSrc": "2952:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "2952:15:7"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "2793:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "2793:180:7"
											},
											{
												"body": {
													"nativeSrc": "3030:269:7",
													"nodeType": "YulBlock",
													"src": "3030:269:7",
													"statements": [
														{
															"nativeSrc": "3040:22:7",
															"nodeType": "YulAssignment",
															"src": "3040:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "3054:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "3054:4:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3060:1:7",
																		"nodeType": "YulLiteral",
																		"src": "3060:1:7",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "3050:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3050:3:7"
																},
																"nativeSrc": "3050:12:7",
																"nodeType": "YulFunctionCall",
																"src": "3050:12:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "3040:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3040:6:7"
																}
															]
														},
														{
															"nativeSrc": "3071:38:7",
															"nodeType": "YulVariableDeclaration",
															"src": "3071:38:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "3101:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "3101:4:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3107:1:7",
																		"nodeType": "YulLiteral",
																		"src": "3107:1:7",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "3097:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3097:3:7"
																},
																"nativeSrc": "3097:12:7",
																"nodeType": "YulFunctionCall",
																"src": "3097:12:7"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "3075:18:7",
																	"nodeType": "YulTypedName",
																	"src": "3075:18:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3148:51:7",
																"nodeType": "YulBlock",
																"src": "3148:51:7",
																"statements": [
																	{
																		"nativeSrc": "3162:27:7",
																		"nodeType": "YulAssignment",
																		"src": "3162:27:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "3176:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "3176:6:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3184:4:7",
																					"nodeType": "YulLiteral",
																					"src": "3184:4:7",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "3172:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "3172:3:7"
																			},
																			"nativeSrc": "3172:17:7",
																			"nodeType": "YulFunctionCall",
																			"src": "3172:17:7"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "3162:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "3162:6:7"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "3128:18:7",
																		"nodeType": "YulIdentifier",
																		"src": "3128:18:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3121:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3121:6:7"
																},
																"nativeSrc": "3121:26:7",
																"nodeType": "YulFunctionCall",
																"src": "3121:26:7"
															},
															"nativeSrc": "3118:81:7",
															"nodeType": "YulIf",
															"src": "3118:81:7"
														},
														{
															"body": {
																"nativeSrc": "3251:42:7",
																"nodeType": "YulBlock",
																"src": "3251:42:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "3265:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "3265:16:7"
																			},
																			"nativeSrc": "3265:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "3265:18:7"
																		},
																		"nativeSrc": "3265:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "3265:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "3215:18:7",
																		"nodeType": "YulIdentifier",
																		"src": "3215:18:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "3238:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "3238:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3246:2:7",
																				"nodeType": "YulLiteral",
																				"src": "3246:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "3235:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "3235:2:7"
																		},
																		"nativeSrc": "3235:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3235:14:7"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "3212:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "3212:2:7"
																},
																"nativeSrc": "3212:38:7",
																"nodeType": "YulFunctionCall",
																"src": "3212:38:7"
															},
															"nativeSrc": "3209:84:7",
															"nodeType": "YulIf",
															"src": "3209:84:7"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "2979:320:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "3014:4:7",
														"nodeType": "YulTypedName",
														"src": "3014:4:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "3023:6:7",
														"nodeType": "YulTypedName",
														"src": "3023:6:7",
														"type": ""
													}
												],
												"src": "2979:320:7"
											},
											{
												"body": {
													"nativeSrc": "3359:87:7",
													"nodeType": "YulBlock",
													"src": "3359:87:7",
													"statements": [
														{
															"nativeSrc": "3369:11:7",
															"nodeType": "YulAssignment",
															"src": "3369:11:7",
															"value": {
																"name": "ptr",
																"nativeSrc": "3377:3:7",
																"nodeType": "YulIdentifier",
																"src": "3377:3:7"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "3369:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "3369:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3397:1:7",
																		"nodeType": "YulLiteral",
																		"src": "3397:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "3400:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "3400:3:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3390:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3390:6:7"
																},
																"nativeSrc": "3390:14:7",
																"nodeType": "YulFunctionCall",
																"src": "3390:14:7"
															},
															"nativeSrc": "3390:14:7",
															"nodeType": "YulExpressionStatement",
															"src": "3390:14:7"
														},
														{
															"nativeSrc": "3413:26:7",
															"nodeType": "YulAssignment",
															"src": "3413:26:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3431:1:7",
																		"nodeType": "YulLiteral",
																		"src": "3431:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3434:4:7",
																		"nodeType": "YulLiteral",
																		"src": "3434:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "3421:9:7",
																	"nodeType": "YulIdentifier",
																	"src": "3421:9:7"
																},
																"nativeSrc": "3421:18:7",
																"nodeType": "YulFunctionCall",
																"src": "3421:18:7"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "3413:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "3413:4:7"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "3305:141:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "3346:3:7",
														"nodeType": "YulTypedName",
														"src": "3346:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "3354:4:7",
														"nodeType": "YulTypedName",
														"src": "3354:4:7",
														"type": ""
													}
												],
												"src": "3305:141:7"
											},
											{
												"body": {
													"nativeSrc": "3496:49:7",
													"nodeType": "YulBlock",
													"src": "3496:49:7",
													"statements": [
														{
															"nativeSrc": "3506:33:7",
															"nodeType": "YulAssignment",
															"src": "3506:33:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3524:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "3524:5:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3531:2:7",
																				"nodeType": "YulLiteral",
																				"src": "3531:2:7",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3520:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3520:3:7"
																		},
																		"nativeSrc": "3520:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3520:14:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3536:2:7",
																		"nodeType": "YulLiteral",
																		"src": "3536:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "3516:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3516:3:7"
																},
																"nativeSrc": "3516:23:7",
																"nodeType": "YulFunctionCall",
																"src": "3516:23:7"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "3506:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3506:6:7"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "3452:93:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3479:5:7",
														"nodeType": "YulTypedName",
														"src": "3479:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "3489:6:7",
														"nodeType": "YulTypedName",
														"src": "3489:6:7",
														"type": ""
													}
												],
												"src": "3452:93:7"
											},
											{
												"body": {
													"nativeSrc": "3604:54:7",
													"nodeType": "YulBlock",
													"src": "3604:54:7",
													"statements": [
														{
															"nativeSrc": "3614:37:7",
															"nodeType": "YulAssignment",
															"src": "3614:37:7",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "3639:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "3639:4:7"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "3645:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "3645:5:7"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "3635:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3635:3:7"
																},
																"nativeSrc": "3635:16:7",
																"nodeType": "YulFunctionCall",
																"src": "3635:16:7"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "3614:8:7",
																	"nodeType": "YulIdentifier",
																	"src": "3614:8:7"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "3551:107:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "3579:4:7",
														"nodeType": "YulTypedName",
														"src": "3579:4:7",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "3585:5:7",
														"nodeType": "YulTypedName",
														"src": "3585:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "3595:8:7",
														"nodeType": "YulTypedName",
														"src": "3595:8:7",
														"type": ""
													}
												],
												"src": "3551:107:7"
											},
											{
												"body": {
													"nativeSrc": "3740:317:7",
													"nodeType": "YulBlock",
													"src": "3740:317:7",
													"statements": [
														{
															"nativeSrc": "3750:35:7",
															"nodeType": "YulVariableDeclaration",
															"src": "3750:35:7",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "3771:10:7",
																		"nodeType": "YulIdentifier",
																		"src": "3771:10:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3783:1:7",
																		"nodeType": "YulLiteral",
																		"src": "3783:1:7",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "3767:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3767:3:7"
																},
																"nativeSrc": "3767:18:7",
																"nodeType": "YulFunctionCall",
																"src": "3767:18:7"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "3754:9:7",
																	"nodeType": "YulTypedName",
																	"src": "3754:9:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3794:109:7",
															"nodeType": "YulVariableDeclaration",
															"src": "3794:109:7",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "3825:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "3825:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3836:66:7",
																		"nodeType": "YulLiteral",
																		"src": "3836:66:7",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "3806:18:7",
																	"nodeType": "YulIdentifier",
																	"src": "3806:18:7"
																},
																"nativeSrc": "3806:97:7",
																"nodeType": "YulFunctionCall",
																"src": "3806:97:7"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "3798:4:7",
																	"nodeType": "YulTypedName",
																	"src": "3798:4:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3912:51:7",
															"nodeType": "YulAssignment",
															"src": "3912:51:7",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "3943:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "3943:9:7"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "3954:8:7",
																		"nodeType": "YulIdentifier",
																		"src": "3954:8:7"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "3924:18:7",
																	"nodeType": "YulIdentifier",
																	"src": "3924:18:7"
																},
																"nativeSrc": "3924:39:7",
																"nodeType": "YulFunctionCall",
																"src": "3924:39:7"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "3912:8:7",
																	"nodeType": "YulIdentifier",
																	"src": "3912:8:7"
																}
															]
														},
														{
															"nativeSrc": "3972:30:7",
															"nodeType": "YulAssignment",
															"src": "3972:30:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3985:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "3985:5:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "3996:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "3996:4:7"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "3992:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3992:3:7"
																		},
																		"nativeSrc": "3992:9:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3992:9:7"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "3981:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3981:3:7"
																},
																"nativeSrc": "3981:21:7",
																"nodeType": "YulFunctionCall",
																"src": "3981:21:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3972:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "3972:5:7"
																}
															]
														},
														{
															"nativeSrc": "4011:40:7",
															"nodeType": "YulAssignment",
															"src": "4011:40:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4024:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "4024:5:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "4035:8:7",
																				"nodeType": "YulIdentifier",
																				"src": "4035:8:7"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "4045:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "4045:4:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "4031:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "4031:3:7"
																		},
																		"nativeSrc": "4031:19:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4031:19:7"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "4021:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "4021:2:7"
																},
																"nativeSrc": "4021:30:7",
																"nodeType": "YulFunctionCall",
																"src": "4021:30:7"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "4011:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4011:6:7"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "3664:393:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3701:5:7",
														"nodeType": "YulTypedName",
														"src": "3701:5:7",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "3708:10:7",
														"nodeType": "YulTypedName",
														"src": "3708:10:7",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "3720:8:7",
														"nodeType": "YulTypedName",
														"src": "3720:8:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "3733:6:7",
														"nodeType": "YulTypedName",
														"src": "3733:6:7",
														"type": ""
													}
												],
												"src": "3664:393:7"
											},
											{
												"body": {
													"nativeSrc": "4095:28:7",
													"nodeType": "YulBlock",
													"src": "4095:28:7",
													"statements": [
														{
															"nativeSrc": "4105:12:7",
															"nodeType": "YulAssignment",
															"src": "4105:12:7",
															"value": {
																"name": "value",
																"nativeSrc": "4112:5:7",
																"nodeType": "YulIdentifier",
																"src": "4112:5:7"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "4105:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4105:3:7"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "4063:60:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4081:5:7",
														"nodeType": "YulTypedName",
														"src": "4081:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "4091:3:7",
														"nodeType": "YulTypedName",
														"src": "4091:3:7",
														"type": ""
													}
												],
												"src": "4063:60:7"
											},
											{
												"body": {
													"nativeSrc": "4189:82:7",
													"nodeType": "YulBlock",
													"src": "4189:82:7",
													"statements": [
														{
															"nativeSrc": "4199:66:7",
															"nodeType": "YulAssignment",
															"src": "4199:66:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "4257:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "4257:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "4239:17:7",
																					"nodeType": "YulIdentifier",
																					"src": "4239:17:7"
																				},
																				"nativeSrc": "4239:24:7",
																				"nodeType": "YulFunctionCall",
																				"src": "4239:24:7"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "4230:8:7",
																			"nodeType": "YulIdentifier",
																			"src": "4230:8:7"
																		},
																		"nativeSrc": "4230:34:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4230:34:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "4212:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "4212:17:7"
																},
																"nativeSrc": "4212:53:7",
																"nodeType": "YulFunctionCall",
																"src": "4212:53:7"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "4199:9:7",
																	"nodeType": "YulIdentifier",
																	"src": "4199:9:7"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "4129:142:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4169:5:7",
														"nodeType": "YulTypedName",
														"src": "4169:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "4179:9:7",
														"nodeType": "YulTypedName",
														"src": "4179:9:7",
														"type": ""
													}
												],
												"src": "4129:142:7"
											},
											{
												"body": {
													"nativeSrc": "4324:28:7",
													"nodeType": "YulBlock",
													"src": "4324:28:7",
													"statements": [
														{
															"nativeSrc": "4334:12:7",
															"nodeType": "YulAssignment",
															"src": "4334:12:7",
															"value": {
																"name": "value",
																"nativeSrc": "4341:5:7",
																"nodeType": "YulIdentifier",
																"src": "4341:5:7"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "4334:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4334:3:7"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "4277:75:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4310:5:7",
														"nodeType": "YulTypedName",
														"src": "4310:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "4320:3:7",
														"nodeType": "YulTypedName",
														"src": "4320:3:7",
														"type": ""
													}
												],
												"src": "4277:75:7"
											},
											{
												"body": {
													"nativeSrc": "4434:193:7",
													"nodeType": "YulBlock",
													"src": "4434:193:7",
													"statements": [
														{
															"nativeSrc": "4444:63:7",
															"nodeType": "YulVariableDeclaration",
															"src": "4444:63:7",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "4499:7:7",
																		"nodeType": "YulIdentifier",
																		"src": "4499:7:7"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "4468:30:7",
																	"nodeType": "YulIdentifier",
																	"src": "4468:30:7"
																},
																"nativeSrc": "4468:39:7",
																"nodeType": "YulFunctionCall",
																"src": "4468:39:7"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "4448:16:7",
																	"nodeType": "YulTypedName",
																	"src": "4448:16:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "4523:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "4523:4:7"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "4563:4:7",
																						"nodeType": "YulIdentifier",
																						"src": "4563:4:7"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "4557:5:7",
																					"nodeType": "YulIdentifier",
																					"src": "4557:5:7"
																				},
																				"nativeSrc": "4557:11:7",
																				"nodeType": "YulFunctionCall",
																				"src": "4557:11:7"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "4570:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "4570:6:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "4602:16:7",
																						"nodeType": "YulIdentifier",
																						"src": "4602:16:7"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "4578:23:7",
																					"nodeType": "YulIdentifier",
																					"src": "4578:23:7"
																				},
																				"nativeSrc": "4578:41:7",
																				"nodeType": "YulFunctionCall",
																				"src": "4578:41:7"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "4529:27:7",
																			"nodeType": "YulIdentifier",
																			"src": "4529:27:7"
																		},
																		"nativeSrc": "4529:91:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4529:91:7"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "4516:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4516:6:7"
																},
																"nativeSrc": "4516:105:7",
																"nodeType": "YulFunctionCall",
																"src": "4516:105:7"
															},
															"nativeSrc": "4516:105:7",
															"nodeType": "YulExpressionStatement",
															"src": "4516:105:7"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "4358:269:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "4411:4:7",
														"nodeType": "YulTypedName",
														"src": "4411:4:7",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "4417:6:7",
														"nodeType": "YulTypedName",
														"src": "4417:6:7",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "4425:7:7",
														"nodeType": "YulTypedName",
														"src": "4425:7:7",
														"type": ""
													}
												],
												"src": "4358:269:7"
											},
											{
												"body": {
													"nativeSrc": "4682:24:7",
													"nodeType": "YulBlock",
													"src": "4682:24:7",
													"statements": [
														{
															"nativeSrc": "4692:8:7",
															"nodeType": "YulAssignment",
															"src": "4692:8:7",
															"value": {
																"kind": "number",
																"nativeSrc": "4699:1:7",
																"nodeType": "YulLiteral",
																"src": "4699:1:7",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "4692:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4692:3:7"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "4633:73:7",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "4678:3:7",
														"nodeType": "YulTypedName",
														"src": "4678:3:7",
														"type": ""
													}
												],
												"src": "4633:73:7"
											},
											{
												"body": {
													"nativeSrc": "4765:136:7",
													"nodeType": "YulBlock",
													"src": "4765:136:7",
													"statements": [
														{
															"nativeSrc": "4775:46:7",
															"nodeType": "YulVariableDeclaration",
															"src": "4775:46:7",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "4789:30:7",
																	"nodeType": "YulIdentifier",
																	"src": "4789:30:7"
																},
																"nativeSrc": "4789:32:7",
																"nodeType": "YulFunctionCall",
																"src": "4789:32:7"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "4779:6:7",
																	"nodeType": "YulTypedName",
																	"src": "4779:6:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "4874:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "4874:4:7"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "4880:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "4880:6:7"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "4888:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "4888:6:7"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "4830:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "4830:43:7"
																},
																"nativeSrc": "4830:65:7",
																"nodeType": "YulFunctionCall",
																"src": "4830:65:7"
															},
															"nativeSrc": "4830:65:7",
															"nodeType": "YulExpressionStatement",
															"src": "4830:65:7"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "4712:189:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "4751:4:7",
														"nodeType": "YulTypedName",
														"src": "4751:4:7",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "4757:6:7",
														"nodeType": "YulTypedName",
														"src": "4757:6:7",
														"type": ""
													}
												],
												"src": "4712:189:7"
											},
											{
												"body": {
													"nativeSrc": "4957:136:7",
													"nodeType": "YulBlock",
													"src": "4957:136:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "5024:63:7",
																"nodeType": "YulBlock",
																"src": "5024:63:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "5068:5:7",
																					"nodeType": "YulIdentifier",
																					"src": "5068:5:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5075:1:7",
																					"nodeType": "YulLiteral",
																					"src": "5075:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "5038:29:7",
																				"nodeType": "YulIdentifier",
																				"src": "5038:29:7"
																			},
																			"nativeSrc": "5038:39:7",
																			"nodeType": "YulFunctionCall",
																			"src": "5038:39:7"
																		},
																		"nativeSrc": "5038:39:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "5038:39:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "4977:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "4977:5:7"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "4984:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "4984:3:7"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "4974:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "4974:2:7"
																},
																"nativeSrc": "4974:14:7",
																"nodeType": "YulFunctionCall",
																"src": "4974:14:7"
															},
															"nativeSrc": "4967:120:7",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "4989:26:7",
																"nodeType": "YulBlock",
																"src": "4989:26:7",
																"statements": [
																	{
																		"nativeSrc": "4991:22:7",
																		"nodeType": "YulAssignment",
																		"src": "4991:22:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "5004:5:7",
																					"nodeType": "YulIdentifier",
																					"src": "5004:5:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5011:1:7",
																					"nodeType": "YulLiteral",
																					"src": "5011:1:7",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "5000:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "5000:3:7"
																			},
																			"nativeSrc": "5000:13:7",
																			"nodeType": "YulFunctionCall",
																			"src": "5000:13:7"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "4991:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "4991:5:7"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "4971:2:7",
																"nodeType": "YulBlock",
																"src": "4971:2:7",
																"statements": []
															},
															"src": "4967:120:7"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "4907:186:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "4945:5:7",
														"nodeType": "YulTypedName",
														"src": "4945:5:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "4952:3:7",
														"nodeType": "YulTypedName",
														"src": "4952:3:7",
														"type": ""
													}
												],
												"src": "4907:186:7"
											},
											{
												"body": {
													"nativeSrc": "5178:464:7",
													"nodeType": "YulBlock",
													"src": "5178:464:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "5204:431:7",
																"nodeType": "YulBlock",
																"src": "5204:431:7",
																"statements": [
																	{
																		"nativeSrc": "5218:54:7",
																		"nodeType": "YulVariableDeclaration",
																		"src": "5218:54:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "5266:5:7",
																					"nodeType": "YulIdentifier",
																					"src": "5266:5:7"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "5234:31:7",
																				"nodeType": "YulIdentifier",
																				"src": "5234:31:7"
																			},
																			"nativeSrc": "5234:38:7",
																			"nodeType": "YulFunctionCall",
																			"src": "5234:38:7"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "5222:8:7",
																				"nodeType": "YulTypedName",
																				"src": "5222:8:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "5285:63:7",
																		"nodeType": "YulVariableDeclaration",
																		"src": "5285:63:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "5308:8:7",
																					"nodeType": "YulIdentifier",
																					"src": "5308:8:7"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "5336:10:7",
																							"nodeType": "YulIdentifier",
																							"src": "5336:10:7"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "5318:17:7",
																						"nodeType": "YulIdentifier",
																						"src": "5318:17:7"
																					},
																					"nativeSrc": "5318:29:7",
																					"nodeType": "YulFunctionCall",
																					"src": "5318:29:7"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "5304:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "5304:3:7"
																			},
																			"nativeSrc": "5304:44:7",
																			"nodeType": "YulFunctionCall",
																			"src": "5304:44:7"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "5289:11:7",
																				"nodeType": "YulTypedName",
																				"src": "5289:11:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "5505:27:7",
																			"nodeType": "YulBlock",
																			"src": "5505:27:7",
																			"statements": [
																				{
																					"nativeSrc": "5507:23:7",
																					"nodeType": "YulAssignment",
																					"src": "5507:23:7",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "5522:8:7",
																						"nodeType": "YulIdentifier",
																						"src": "5522:8:7"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "5507:11:7",
																							"nodeType": "YulIdentifier",
																							"src": "5507:11:7"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "5489:10:7",
																					"nodeType": "YulIdentifier",
																					"src": "5489:10:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5501:2:7",
																					"nodeType": "YulLiteral",
																					"src": "5501:2:7",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "5486:2:7",
																				"nodeType": "YulIdentifier",
																				"src": "5486:2:7"
																			},
																			"nativeSrc": "5486:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "5486:18:7"
																		},
																		"nativeSrc": "5483:49:7",
																		"nodeType": "YulIf",
																		"src": "5483:49:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "5574:11:7",
																					"nodeType": "YulIdentifier",
																					"src": "5574:11:7"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "5591:8:7",
																							"nodeType": "YulIdentifier",
																							"src": "5591:8:7"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "5619:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "5619:3:7"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "5601:17:7",
																								"nodeType": "YulIdentifier",
																								"src": "5601:17:7"
																							},
																							"nativeSrc": "5601:22:7",
																							"nodeType": "YulFunctionCall",
																							"src": "5601:22:7"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "5587:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "5587:3:7"
																					},
																					"nativeSrc": "5587:37:7",
																					"nodeType": "YulFunctionCall",
																					"src": "5587:37:7"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "5545:28:7",
																				"nodeType": "YulIdentifier",
																				"src": "5545:28:7"
																			},
																			"nativeSrc": "5545:80:7",
																			"nodeType": "YulFunctionCall",
																			"src": "5545:80:7"
																		},
																		"nativeSrc": "5545:80:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "5545:80:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "5195:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "5195:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5200:2:7",
																		"nodeType": "YulLiteral",
																		"src": "5200:2:7",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5192:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "5192:2:7"
																},
																"nativeSrc": "5192:11:7",
																"nodeType": "YulFunctionCall",
																"src": "5192:11:7"
															},
															"nativeSrc": "5189:446:7",
															"nodeType": "YulIf",
															"src": "5189:446:7"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "5099:543:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "5154:5:7",
														"nodeType": "YulTypedName",
														"src": "5154:5:7",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "5161:3:7",
														"nodeType": "YulTypedName",
														"src": "5161:3:7",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "5166:10:7",
														"nodeType": "YulTypedName",
														"src": "5166:10:7",
														"type": ""
													}
												],
												"src": "5099:543:7"
											},
											{
												"body": {
													"nativeSrc": "5711:54:7",
													"nodeType": "YulBlock",
													"src": "5711:54:7",
													"statements": [
														{
															"nativeSrc": "5721:37:7",
															"nodeType": "YulAssignment",
															"src": "5721:37:7",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "5746:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "5746:4:7"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "5752:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "5752:5:7"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "5742:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5742:3:7"
																},
																"nativeSrc": "5742:16:7",
																"nodeType": "YulFunctionCall",
																"src": "5742:16:7"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "5721:8:7",
																	"nodeType": "YulIdentifier",
																	"src": "5721:8:7"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "5648:117:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "5686:4:7",
														"nodeType": "YulTypedName",
														"src": "5686:4:7",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "5692:5:7",
														"nodeType": "YulTypedName",
														"src": "5692:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "5702:8:7",
														"nodeType": "YulTypedName",
														"src": "5702:8:7",
														"type": ""
													}
												],
												"src": "5648:117:7"
											},
											{
												"body": {
													"nativeSrc": "5822:118:7",
													"nodeType": "YulBlock",
													"src": "5822:118:7",
													"statements": [
														{
															"nativeSrc": "5832:68:7",
															"nodeType": "YulVariableDeclaration",
															"src": "5832:68:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "5881:1:7",
																						"nodeType": "YulLiteral",
																						"src": "5881:1:7",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "5884:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "5884:5:7"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "5877:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "5877:3:7"
																				},
																				"nativeSrc": "5877:13:7",
																				"nodeType": "YulFunctionCall",
																				"src": "5877:13:7"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "5896:1:7",
																						"nodeType": "YulLiteral",
																						"src": "5896:1:7",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "5892:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "5892:3:7"
																				},
																				"nativeSrc": "5892:6:7",
																				"nodeType": "YulFunctionCall",
																				"src": "5892:6:7"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "5848:28:7",
																			"nodeType": "YulIdentifier",
																			"src": "5848:28:7"
																		},
																		"nativeSrc": "5848:51:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5848:51:7"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "5844:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5844:3:7"
																},
																"nativeSrc": "5844:56:7",
																"nodeType": "YulFunctionCall",
																"src": "5844:56:7"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "5836:4:7",
																	"nodeType": "YulTypedName",
																	"src": "5836:4:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5909:25:7",
															"nodeType": "YulAssignment",
															"src": "5909:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "5923:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "5923:4:7"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "5929:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "5929:4:7"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "5919:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5919:3:7"
																},
																"nativeSrc": "5919:15:7",
																"nodeType": "YulFunctionCall",
																"src": "5919:15:7"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "5909:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5909:6:7"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "5771:169:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "5799:4:7",
														"nodeType": "YulTypedName",
														"src": "5799:4:7",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "5805:5:7",
														"nodeType": "YulTypedName",
														"src": "5805:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "5815:6:7",
														"nodeType": "YulTypedName",
														"src": "5815:6:7",
														"type": ""
													}
												],
												"src": "5771:169:7"
											},
											{
												"body": {
													"nativeSrc": "6026:214:7",
													"nodeType": "YulBlock",
													"src": "6026:214:7",
													"statements": [
														{
															"nativeSrc": "6159:37:7",
															"nodeType": "YulAssignment",
															"src": "6159:37:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "6186:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "6186:4:7"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "6192:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "6192:3:7"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "6167:18:7",
																	"nodeType": "YulIdentifier",
																	"src": "6167:18:7"
																},
																"nativeSrc": "6167:29:7",
																"nodeType": "YulFunctionCall",
																"src": "6167:29:7"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "6159:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "6159:4:7"
																}
															]
														},
														{
															"nativeSrc": "6205:29:7",
															"nodeType": "YulAssignment",
															"src": "6205:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "6216:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "6216:4:7"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "6226:1:7",
																				"nodeType": "YulLiteral",
																				"src": "6226:1:7",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "6229:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "6229:3:7"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "6222:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "6222:3:7"
																		},
																		"nativeSrc": "6222:11:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6222:11:7"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "6213:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "6213:2:7"
																},
																"nativeSrc": "6213:21:7",
																"nodeType": "YulFunctionCall",
																"src": "6213:21:7"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "6205:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "6205:4:7"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "5945:295:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "6007:4:7",
														"nodeType": "YulTypedName",
														"src": "6007:4:7",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "6013:3:7",
														"nodeType": "YulTypedName",
														"src": "6013:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "6021:4:7",
														"nodeType": "YulTypedName",
														"src": "6021:4:7",
														"type": ""
													}
												],
												"src": "5945:295:7"
											},
											{
												"body": {
													"nativeSrc": "6337:1303:7",
													"nodeType": "YulBlock",
													"src": "6337:1303:7",
													"statements": [
														{
															"nativeSrc": "6348:51:7",
															"nodeType": "YulVariableDeclaration",
															"src": "6348:51:7",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "6395:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "6395:3:7"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "6362:32:7",
																	"nodeType": "YulIdentifier",
																	"src": "6362:32:7"
																},
																"nativeSrc": "6362:37:7",
																"nodeType": "YulFunctionCall",
																"src": "6362:37:7"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "6352:6:7",
																	"nodeType": "YulTypedName",
																	"src": "6352:6:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6484:22:7",
																"nodeType": "YulBlock",
																"src": "6484:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "6486:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "6486:16:7"
																			},
																			"nativeSrc": "6486:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "6486:18:7"
																		},
																		"nativeSrc": "6486:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "6486:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "6456:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "6456:6:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6464:18:7",
																		"nodeType": "YulLiteral",
																		"src": "6464:18:7",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "6453:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "6453:2:7"
																},
																"nativeSrc": "6453:30:7",
																"nodeType": "YulFunctionCall",
																"src": "6453:30:7"
															},
															"nativeSrc": "6450:56:7",
															"nodeType": "YulIf",
															"src": "6450:56:7"
														},
														{
															"nativeSrc": "6516:52:7",
															"nodeType": "YulVariableDeclaration",
															"src": "6516:52:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "6562:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "6562:4:7"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "6556:5:7",
																			"nodeType": "YulIdentifier",
																			"src": "6556:5:7"
																		},
																		"nativeSrc": "6556:11:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6556:11:7"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "6530:25:7",
																	"nodeType": "YulIdentifier",
																	"src": "6530:25:7"
																},
																"nativeSrc": "6530:38:7",
																"nodeType": "YulFunctionCall",
																"src": "6530:38:7"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "6520:6:7",
																	"nodeType": "YulTypedName",
																	"src": "6520:6:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "6661:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "6661:4:7"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "6667:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "6667:6:7"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "6675:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "6675:6:7"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "6615:45:7",
																	"nodeType": "YulIdentifier",
																	"src": "6615:45:7"
																},
																"nativeSrc": "6615:67:7",
																"nodeType": "YulFunctionCall",
																"src": "6615:67:7"
															},
															"nativeSrc": "6615:67:7",
															"nodeType": "YulExpressionStatement",
															"src": "6615:67:7"
														},
														{
															"nativeSrc": "6692:18:7",
															"nodeType": "YulVariableDeclaration",
															"src": "6692:18:7",
															"value": {
																"kind": "number",
																"nativeSrc": "6709:1:7",
																"nodeType": "YulLiteral",
																"src": "6709:1:7",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "6696:9:7",
																	"nodeType": "YulTypedName",
																	"src": "6696:9:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "6720:17:7",
															"nodeType": "YulAssignment",
															"src": "6720:17:7",
															"value": {
																"kind": "number",
																"nativeSrc": "6733:4:7",
																"nodeType": "YulLiteral",
																"src": "6733:4:7",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "6720:9:7",
																	"nodeType": "YulIdentifier",
																	"src": "6720:9:7"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "6784:611:7",
																		"nodeType": "YulBlock",
																		"src": "6784:611:7",
																		"statements": [
																			{
																				"nativeSrc": "6798:37:7",
																				"nodeType": "YulVariableDeclaration",
																				"src": "6798:37:7",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "6817:6:7",
																							"nodeType": "YulIdentifier",
																							"src": "6817:6:7"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "6829:4:7",
																									"nodeType": "YulLiteral",
																									"src": "6829:4:7",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "6825:3:7",
																								"nodeType": "YulIdentifier",
																								"src": "6825:3:7"
																							},
																							"nativeSrc": "6825:9:7",
																							"nodeType": "YulFunctionCall",
																							"src": "6825:9:7"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "6813:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "6813:3:7"
																					},
																					"nativeSrc": "6813:22:7",
																					"nodeType": "YulFunctionCall",
																					"src": "6813:22:7"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "6802:7:7",
																						"nodeType": "YulTypedName",
																						"src": "6802:7:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "6849:51:7",
																				"nodeType": "YulVariableDeclaration",
																				"src": "6849:51:7",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "6895:4:7",
																							"nodeType": "YulIdentifier",
																							"src": "6895:4:7"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "6863:31:7",
																						"nodeType": "YulIdentifier",
																						"src": "6863:31:7"
																					},
																					"nativeSrc": "6863:37:7",
																					"nodeType": "YulFunctionCall",
																					"src": "6863:37:7"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "6853:6:7",
																						"nodeType": "YulTypedName",
																						"src": "6853:6:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "6913:10:7",
																				"nodeType": "YulVariableDeclaration",
																				"src": "6913:10:7",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "6922:1:7",
																					"nodeType": "YulLiteral",
																					"src": "6922:1:7",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "6917:1:7",
																						"nodeType": "YulTypedName",
																						"src": "6917:1:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "6981:163:7",
																					"nodeType": "YulBlock",
																					"src": "6981:163:7",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "7006:6:7",
																										"nodeType": "YulIdentifier",
																										"src": "7006:6:7"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "7024:3:7",
																														"nodeType": "YulIdentifier",
																														"src": "7024:3:7"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "7029:9:7",
																														"nodeType": "YulIdentifier",
																														"src": "7029:9:7"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "7020:3:7",
																													"nodeType": "YulIdentifier",
																													"src": "7020:3:7"
																												},
																												"nativeSrc": "7020:19:7",
																												"nodeType": "YulFunctionCall",
																												"src": "7020:19:7"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "7014:5:7",
																											"nodeType": "YulIdentifier",
																											"src": "7014:5:7"
																										},
																										"nativeSrc": "7014:26:7",
																										"nodeType": "YulFunctionCall",
																										"src": "7014:26:7"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "6999:6:7",
																									"nodeType": "YulIdentifier",
																									"src": "6999:6:7"
																								},
																								"nativeSrc": "6999:42:7",
																								"nodeType": "YulFunctionCall",
																								"src": "6999:42:7"
																							},
																							"nativeSrc": "6999:42:7",
																							"nodeType": "YulExpressionStatement",
																							"src": "6999:42:7"
																						},
																						{
																							"nativeSrc": "7058:24:7",
																							"nodeType": "YulAssignment",
																							"src": "7058:24:7",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "7072:6:7",
																										"nodeType": "YulIdentifier",
																										"src": "7072:6:7"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "7080:1:7",
																										"nodeType": "YulLiteral",
																										"src": "7080:1:7",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "7068:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "7068:3:7"
																								},
																								"nativeSrc": "7068:14:7",
																								"nodeType": "YulFunctionCall",
																								"src": "7068:14:7"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "7058:6:7",
																									"nodeType": "YulIdentifier",
																									"src": "7058:6:7"
																								}
																							]
																						},
																						{
																							"nativeSrc": "7099:31:7",
																							"nodeType": "YulAssignment",
																							"src": "7099:31:7",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "7116:9:7",
																										"nodeType": "YulIdentifier",
																										"src": "7116:9:7"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "7127:2:7",
																										"nodeType": "YulLiteral",
																										"src": "7127:2:7",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "7112:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "7112:3:7"
																								},
																								"nativeSrc": "7112:18:7",
																								"nodeType": "YulFunctionCall",
																								"src": "7112:18:7"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "7099:9:7",
																									"nodeType": "YulIdentifier",
																									"src": "7099:9:7"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "6947:1:7",
																							"nodeType": "YulIdentifier",
																							"src": "6947:1:7"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "6950:7:7",
																							"nodeType": "YulIdentifier",
																							"src": "6950:7:7"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "6944:2:7",
																						"nodeType": "YulIdentifier",
																						"src": "6944:2:7"
																					},
																					"nativeSrc": "6944:14:7",
																					"nodeType": "YulFunctionCall",
																					"src": "6944:14:7"
																				},
																				"nativeSrc": "6936:208:7",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "6959:21:7",
																					"nodeType": "YulBlock",
																					"src": "6959:21:7",
																					"statements": [
																						{
																							"nativeSrc": "6961:17:7",
																							"nodeType": "YulAssignment",
																							"src": "6961:17:7",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "6970:1:7",
																										"nodeType": "YulIdentifier",
																										"src": "6970:1:7"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "6973:4:7",
																										"nodeType": "YulLiteral",
																										"src": "6973:4:7",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "6966:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "6966:3:7"
																								},
																								"nativeSrc": "6966:12:7",
																								"nodeType": "YulFunctionCall",
																								"src": "6966:12:7"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "6961:1:7",
																									"nodeType": "YulIdentifier",
																									"src": "6961:1:7"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "6940:3:7",
																					"nodeType": "YulBlock",
																					"src": "6940:3:7",
																					"statements": []
																				},
																				"src": "6936:208:7"
																			},
																			{
																				"body": {
																					"nativeSrc": "7180:156:7",
																					"nodeType": "YulBlock",
																					"src": "7180:156:7",
																					"statements": [
																						{
																							"nativeSrc": "7198:43:7",
																							"nodeType": "YulVariableDeclaration",
																							"src": "7198:43:7",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "7225:3:7",
																												"nodeType": "YulIdentifier",
																												"src": "7225:3:7"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "7230:9:7",
																												"nodeType": "YulIdentifier",
																												"src": "7230:9:7"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "7221:3:7",
																											"nodeType": "YulIdentifier",
																											"src": "7221:3:7"
																										},
																										"nativeSrc": "7221:19:7",
																										"nodeType": "YulFunctionCall",
																										"src": "7221:19:7"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "7215:5:7",
																									"nodeType": "YulIdentifier",
																									"src": "7215:5:7"
																								},
																								"nativeSrc": "7215:26:7",
																								"nodeType": "YulFunctionCall",
																								"src": "7215:26:7"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "7202:9:7",
																									"nodeType": "YulTypedName",
																									"src": "7202:9:7",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "7265:6:7",
																										"nodeType": "YulIdentifier",
																										"src": "7265:6:7"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "7292:9:7",
																												"nodeType": "YulIdentifier",
																												"src": "7292:9:7"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "7307:6:7",
																														"nodeType": "YulIdentifier",
																														"src": "7307:6:7"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "7315:4:7",
																														"nodeType": "YulLiteral",
																														"src": "7315:4:7",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "7303:3:7",
																													"nodeType": "YulIdentifier",
																													"src": "7303:3:7"
																												},
																												"nativeSrc": "7303:17:7",
																												"nodeType": "YulFunctionCall",
																												"src": "7303:17:7"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "7273:18:7",
																											"nodeType": "YulIdentifier",
																											"src": "7273:18:7"
																										},
																										"nativeSrc": "7273:48:7",
																										"nodeType": "YulFunctionCall",
																										"src": "7273:48:7"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "7258:6:7",
																									"nodeType": "YulIdentifier",
																									"src": "7258:6:7"
																								},
																								"nativeSrc": "7258:64:7",
																								"nodeType": "YulFunctionCall",
																								"src": "7258:64:7"
																							},
																							"nativeSrc": "7258:64:7",
																							"nodeType": "YulExpressionStatement",
																							"src": "7258:64:7"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "7163:7:7",
																							"nodeType": "YulIdentifier",
																							"src": "7163:7:7"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "7172:6:7",
																							"nodeType": "YulIdentifier",
																							"src": "7172:6:7"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "7160:2:7",
																						"nodeType": "YulIdentifier",
																						"src": "7160:2:7"
																					},
																					"nativeSrc": "7160:19:7",
																					"nodeType": "YulFunctionCall",
																					"src": "7160:19:7"
																				},
																				"nativeSrc": "7157:179:7",
																				"nodeType": "YulIf",
																				"src": "7157:179:7"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "7356:4:7",
																							"nodeType": "YulIdentifier",
																							"src": "7356:4:7"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "7370:6:7",
																											"nodeType": "YulIdentifier",
																											"src": "7370:6:7"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "7378:1:7",
																											"nodeType": "YulLiteral",
																											"src": "7378:1:7",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "7366:3:7",
																										"nodeType": "YulIdentifier",
																										"src": "7366:3:7"
																									},
																									"nativeSrc": "7366:14:7",
																									"nodeType": "YulFunctionCall",
																									"src": "7366:14:7"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "7382:1:7",
																									"nodeType": "YulLiteral",
																									"src": "7382:1:7",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "7362:3:7",
																								"nodeType": "YulIdentifier",
																								"src": "7362:3:7"
																							},
																							"nativeSrc": "7362:22:7",
																							"nodeType": "YulFunctionCall",
																							"src": "7362:22:7"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "7349:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "7349:6:7"
																					},
																					"nativeSrc": "7349:36:7",
																					"nodeType": "YulFunctionCall",
																					"src": "7349:36:7"
																				},
																				"nativeSrc": "7349:36:7",
																				"nodeType": "YulExpressionStatement",
																				"src": "7349:36:7"
																			}
																		]
																	},
																	"nativeSrc": "6777:618:7",
																	"nodeType": "YulCase",
																	"src": "6777:618:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6782:1:7",
																		"nodeType": "YulLiteral",
																		"src": "6782:1:7",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "7412:222:7",
																		"nodeType": "YulBlock",
																		"src": "7412:222:7",
																		"statements": [
																			{
																				"nativeSrc": "7426:14:7",
																				"nodeType": "YulVariableDeclaration",
																				"src": "7426:14:7",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "7439:1:7",
																					"nodeType": "YulLiteral",
																					"src": "7439:1:7",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "7430:5:7",
																						"nodeType": "YulTypedName",
																						"src": "7430:5:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "7463:67:7",
																					"nodeType": "YulBlock",
																					"src": "7463:67:7",
																					"statements": [
																						{
																							"nativeSrc": "7481:35:7",
																							"nodeType": "YulAssignment",
																							"src": "7481:35:7",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "7500:3:7",
																												"nodeType": "YulIdentifier",
																												"src": "7500:3:7"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "7505:9:7",
																												"nodeType": "YulIdentifier",
																												"src": "7505:9:7"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "7496:3:7",
																											"nodeType": "YulIdentifier",
																											"src": "7496:3:7"
																										},
																										"nativeSrc": "7496:19:7",
																										"nodeType": "YulFunctionCall",
																										"src": "7496:19:7"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "7490:5:7",
																									"nodeType": "YulIdentifier",
																									"src": "7490:5:7"
																								},
																								"nativeSrc": "7490:26:7",
																								"nodeType": "YulFunctionCall",
																								"src": "7490:26:7"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "7481:5:7",
																									"nodeType": "YulIdentifier",
																									"src": "7481:5:7"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "7456:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "7456:6:7"
																				},
																				"nativeSrc": "7453:77:7",
																				"nodeType": "YulIf",
																				"src": "7453:77:7"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "7550:4:7",
																							"nodeType": "YulIdentifier",
																							"src": "7550:4:7"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "7609:5:7",
																									"nodeType": "YulIdentifier",
																									"src": "7609:5:7"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "7616:6:7",
																									"nodeType": "YulIdentifier",
																									"src": "7616:6:7"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "7556:52:7",
																								"nodeType": "YulIdentifier",
																								"src": "7556:52:7"
																							},
																							"nativeSrc": "7556:67:7",
																							"nodeType": "YulFunctionCall",
																							"src": "7556:67:7"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "7543:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "7543:6:7"
																					},
																					"nativeSrc": "7543:81:7",
																					"nodeType": "YulFunctionCall",
																					"src": "7543:81:7"
																				},
																				"nativeSrc": "7543:81:7",
																				"nodeType": "YulExpressionStatement",
																				"src": "7543:81:7"
																			}
																		]
																	},
																	"nativeSrc": "7404:230:7",
																	"nodeType": "YulCase",
																	"src": "7404:230:7",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "6757:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "6757:6:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6765:2:7",
																		"nodeType": "YulLiteral",
																		"src": "6765:2:7",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "6754:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "6754:2:7"
																},
																"nativeSrc": "6754:14:7",
																"nodeType": "YulFunctionCall",
																"src": "6754:14:7"
															},
															"nativeSrc": "6747:887:7",
															"nodeType": "YulSwitch",
															"src": "6747:887:7"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "6245:1395:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "6326:4:7",
														"nodeType": "YulTypedName",
														"src": "6326:4:7",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "6332:3:7",
														"nodeType": "YulTypedName",
														"src": "6332:3:7",
														"type": ""
													}
												],
												"src": "6245:1395:7"
											},
											{
												"body": {
													"nativeSrc": "7711:53:7",
													"nodeType": "YulBlock",
													"src": "7711:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7728:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "7728:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "7751:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "7751:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "7733:17:7",
																			"nodeType": "YulIdentifier",
																			"src": "7733:17:7"
																		},
																		"nativeSrc": "7733:24:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7733:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7721:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "7721:6:7"
																},
																"nativeSrc": "7721:37:7",
																"nodeType": "YulFunctionCall",
																"src": "7721:37:7"
															},
															"nativeSrc": "7721:37:7",
															"nodeType": "YulExpressionStatement",
															"src": "7721:37:7"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "7646:118:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7699:5:7",
														"nodeType": "YulTypedName",
														"src": "7699:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "7706:3:7",
														"nodeType": "YulTypedName",
														"src": "7706:3:7",
														"type": ""
													}
												],
												"src": "7646:118:7"
											},
											{
												"body": {
													"nativeSrc": "7868:124:7",
													"nodeType": "YulBlock",
													"src": "7868:124:7",
													"statements": [
														{
															"nativeSrc": "7878:26:7",
															"nodeType": "YulAssignment",
															"src": "7878:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7890:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "7890:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7901:2:7",
																		"nodeType": "YulLiteral",
																		"src": "7901:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7886:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "7886:3:7"
																},
																"nativeSrc": "7886:18:7",
																"nodeType": "YulFunctionCall",
																"src": "7886:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7878:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "7878:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "7958:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "7958:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7971:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "7971:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7982:1:7",
																				"nodeType": "YulLiteral",
																				"src": "7982:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7967:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "7967:3:7"
																		},
																		"nativeSrc": "7967:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7967:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "7914:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "7914:43:7"
																},
																"nativeSrc": "7914:71:7",
																"nodeType": "YulFunctionCall",
																"src": "7914:71:7"
															},
															"nativeSrc": "7914:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "7914:71:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "7770:222:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7840:9:7",
														"nodeType": "YulTypedName",
														"src": "7840:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7852:6:7",
														"nodeType": "YulTypedName",
														"src": "7852:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7863:4:7",
														"nodeType": "YulTypedName",
														"src": "7863:4:7",
														"type": ""
													}
												],
												"src": "7770:222:7"
											},
											{
												"body": {
													"nativeSrc": "8094:73:7",
													"nodeType": "YulBlock",
													"src": "8094:73:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8111:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "8111:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "8116:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "8116:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8104:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "8104:6:7"
																},
																"nativeSrc": "8104:19:7",
																"nodeType": "YulFunctionCall",
																"src": "8104:19:7"
															},
															"nativeSrc": "8104:19:7",
															"nodeType": "YulExpressionStatement",
															"src": "8104:19:7"
														},
														{
															"nativeSrc": "8132:29:7",
															"nodeType": "YulAssignment",
															"src": "8132:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8151:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "8151:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8156:4:7",
																		"nodeType": "YulLiteral",
																		"src": "8156:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8147:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "8147:3:7"
																},
																"nativeSrc": "8147:14:7",
																"nodeType": "YulFunctionCall",
																"src": "8147:14:7"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "8132:11:7",
																	"nodeType": "YulIdentifier",
																	"src": "8132:11:7"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "7998:169:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "8066:3:7",
														"nodeType": "YulTypedName",
														"src": "8066:3:7",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "8071:6:7",
														"nodeType": "YulTypedName",
														"src": "8071:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "8082:11:7",
														"nodeType": "YulTypedName",
														"src": "8082:11:7",
														"type": ""
													}
												],
												"src": "7998:169:7"
											},
											{
												"body": {
													"nativeSrc": "8279:65:7",
													"nodeType": "YulBlock",
													"src": "8279:65:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "8301:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "8301:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8309:1:7",
																				"nodeType": "YulLiteral",
																				"src": "8309:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8297:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "8297:3:7"
																		},
																		"nativeSrc": "8297:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8297:14:7"
																	},
																	{
																		"hexValue": "496e76616c6964206f776e65722061646472657373",
																		"kind": "string",
																		"nativeSrc": "8313:23:7",
																		"nodeType": "YulLiteral",
																		"src": "8313:23:7",
																		"type": "",
																		"value": "Invalid owner address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8290:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "8290:6:7"
																},
																"nativeSrc": "8290:47:7",
																"nodeType": "YulFunctionCall",
																"src": "8290:47:7"
															},
															"nativeSrc": "8290:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "8290:47:7"
														}
													]
												},
												"name": "store_literal_in_memory_854cf043fa623ebed8453fda259d33de3f6e7493e6b8ff90fcfdd906ab498ce3",
												"nativeSrc": "8173:171:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "8271:6:7",
														"nodeType": "YulTypedName",
														"src": "8271:6:7",
														"type": ""
													}
												],
												"src": "8173:171:7"
											},
											{
												"body": {
													"nativeSrc": "8496:220:7",
													"nodeType": "YulBlock",
													"src": "8496:220:7",
													"statements": [
														{
															"nativeSrc": "8506:74:7",
															"nodeType": "YulAssignment",
															"src": "8506:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8572:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "8572:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8577:2:7",
																		"nodeType": "YulLiteral",
																		"src": "8577:2:7",
																		"type": "",
																		"value": "21"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "8513:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "8513:58:7"
																},
																"nativeSrc": "8513:67:7",
																"nodeType": "YulFunctionCall",
																"src": "8513:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "8506:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "8506:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8678:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "8678:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_854cf043fa623ebed8453fda259d33de3f6e7493e6b8ff90fcfdd906ab498ce3",
																	"nativeSrc": "8589:88:7",
																	"nodeType": "YulIdentifier",
																	"src": "8589:88:7"
																},
																"nativeSrc": "8589:93:7",
																"nodeType": "YulFunctionCall",
																"src": "8589:93:7"
															},
															"nativeSrc": "8589:93:7",
															"nodeType": "YulExpressionStatement",
															"src": "8589:93:7"
														},
														{
															"nativeSrc": "8691:19:7",
															"nodeType": "YulAssignment",
															"src": "8691:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8702:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "8702:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8707:2:7",
																		"nodeType": "YulLiteral",
																		"src": "8707:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8698:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "8698:3:7"
																},
																"nativeSrc": "8698:12:7",
																"nodeType": "YulFunctionCall",
																"src": "8698:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "8691:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "8691:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_854cf043fa623ebed8453fda259d33de3f6e7493e6b8ff90fcfdd906ab498ce3_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "8350:366:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "8484:3:7",
														"nodeType": "YulTypedName",
														"src": "8484:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "8492:3:7",
														"nodeType": "YulTypedName",
														"src": "8492:3:7",
														"type": ""
													}
												],
												"src": "8350:366:7"
											},
											{
												"body": {
													"nativeSrc": "8893:248:7",
													"nodeType": "YulBlock",
													"src": "8893:248:7",
													"statements": [
														{
															"nativeSrc": "8903:26:7",
															"nodeType": "YulAssignment",
															"src": "8903:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8915:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "8915:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8926:2:7",
																		"nodeType": "YulLiteral",
																		"src": "8926:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8911:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "8911:3:7"
																},
																"nativeSrc": "8911:18:7",
																"nodeType": "YulFunctionCall",
																"src": "8911:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8903:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "8903:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8950:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "8950:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8961:1:7",
																				"nodeType": "YulLiteral",
																				"src": "8961:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8946:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "8946:3:7"
																		},
																		"nativeSrc": "8946:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8946:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "8969:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "8969:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8975:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "8975:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8965:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "8965:3:7"
																		},
																		"nativeSrc": "8965:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8965:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8939:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "8939:6:7"
																},
																"nativeSrc": "8939:47:7",
																"nodeType": "YulFunctionCall",
																"src": "8939:47:7"
															},
															"nativeSrc": "8939:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "8939:47:7"
														},
														{
															"nativeSrc": "8995:139:7",
															"nodeType": "YulAssignment",
															"src": "8995:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "9129:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "9129:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_854cf043fa623ebed8453fda259d33de3f6e7493e6b8ff90fcfdd906ab498ce3_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "9003:124:7",
																	"nodeType": "YulIdentifier",
																	"src": "9003:124:7"
																},
																"nativeSrc": "9003:131:7",
																"nodeType": "YulFunctionCall",
																"src": "9003:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8995:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "8995:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_854cf043fa623ebed8453fda259d33de3f6e7493e6b8ff90fcfdd906ab498ce3__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "8722:419:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8873:9:7",
														"nodeType": "YulTypedName",
														"src": "8873:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8888:4:7",
														"nodeType": "YulTypedName",
														"src": "8888:4:7",
														"type": ""
													}
												],
												"src": "8722:419:7"
											},
											{
												"body": {
													"nativeSrc": "9175:152:7",
													"nodeType": "YulBlock",
													"src": "9175:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9192:1:7",
																		"nodeType": "YulLiteral",
																		"src": "9192:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9195:77:7",
																		"nodeType": "YulLiteral",
																		"src": "9195:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9185:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "9185:6:7"
																},
																"nativeSrc": "9185:88:7",
																"nodeType": "YulFunctionCall",
																"src": "9185:88:7"
															},
															"nativeSrc": "9185:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "9185:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9289:1:7",
																		"nodeType": "YulLiteral",
																		"src": "9289:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9292:4:7",
																		"nodeType": "YulLiteral",
																		"src": "9292:4:7",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9282:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "9282:6:7"
																},
																"nativeSrc": "9282:15:7",
																"nodeType": "YulFunctionCall",
																"src": "9282:15:7"
															},
															"nativeSrc": "9282:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "9282:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9313:1:7",
																		"nodeType": "YulLiteral",
																		"src": "9313:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9316:4:7",
																		"nodeType": "YulLiteral",
																		"src": "9316:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "9306:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "9306:6:7"
																},
																"nativeSrc": "9306:15:7",
																"nodeType": "YulFunctionCall",
																"src": "9306:15:7"
															},
															"nativeSrc": "9306:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "9306:15:7"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "9147:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "9147:180:7"
											},
											{
												"body": {
													"nativeSrc": "9381:362:7",
													"nodeType": "YulBlock",
													"src": "9381:362:7",
													"statements": [
														{
															"nativeSrc": "9391:25:7",
															"nodeType": "YulAssignment",
															"src": "9391:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9414:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "9414:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9396:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "9396:17:7"
																},
																"nativeSrc": "9396:20:7",
																"nodeType": "YulFunctionCall",
																"src": "9396:20:7"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "9391:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "9391:1:7"
																}
															]
														},
														{
															"nativeSrc": "9425:25:7",
															"nodeType": "YulAssignment",
															"src": "9425:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "9448:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "9448:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9430:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "9430:17:7"
																},
																"nativeSrc": "9430:20:7",
																"nodeType": "YulFunctionCall",
																"src": "9430:20:7"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "9425:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "9425:1:7"
																}
															]
														},
														{
															"nativeSrc": "9459:28:7",
															"nodeType": "YulVariableDeclaration",
															"src": "9459:28:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9482:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "9482:1:7"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "9485:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "9485:1:7"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "9478:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "9478:3:7"
																},
																"nativeSrc": "9478:9:7",
																"nodeType": "YulFunctionCall",
																"src": "9478:9:7"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "9463:11:7",
																	"nodeType": "YulTypedName",
																	"src": "9463:11:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "9496:41:7",
															"nodeType": "YulAssignment",
															"src": "9496:41:7",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "9525:11:7",
																		"nodeType": "YulIdentifier",
																		"src": "9525:11:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9507:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "9507:17:7"
																},
																"nativeSrc": "9507:30:7",
																"nodeType": "YulFunctionCall",
																"src": "9507:30:7"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "9496:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "9496:7:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9714:22:7",
																"nodeType": "YulBlock",
																"src": "9714:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "9716:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "9716:16:7"
																			},
																			"nativeSrc": "9716:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "9716:18:7"
																		},
																		"nativeSrc": "9716:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "9716:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "9647:1:7",
																						"nodeType": "YulIdentifier",
																						"src": "9647:1:7"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "9640:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "9640:6:7"
																				},
																				"nativeSrc": "9640:9:7",
																				"nodeType": "YulFunctionCall",
																				"src": "9640:9:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "9670:1:7",
																						"nodeType": "YulIdentifier",
																						"src": "9670:1:7"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "9677:7:7",
																								"nodeType": "YulIdentifier",
																								"src": "9677:7:7"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "9686:1:7",
																								"nodeType": "YulIdentifier",
																								"src": "9686:1:7"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "9673:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "9673:3:7"
																						},
																						"nativeSrc": "9673:15:7",
																						"nodeType": "YulFunctionCall",
																						"src": "9673:15:7"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "9667:2:7",
																					"nodeType": "YulIdentifier",
																					"src": "9667:2:7"
																				},
																				"nativeSrc": "9667:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "9667:22:7"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "9620:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "9620:2:7"
																		},
																		"nativeSrc": "9620:83:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9620:83:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "9600:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "9600:6:7"
																},
																"nativeSrc": "9600:113:7",
																"nodeType": "YulFunctionCall",
																"src": "9600:113:7"
															},
															"nativeSrc": "9597:139:7",
															"nodeType": "YulIf",
															"src": "9597:139:7"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "9333:410:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "9364:1:7",
														"nodeType": "YulTypedName",
														"src": "9364:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "9367:1:7",
														"nodeType": "YulTypedName",
														"src": "9367:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "9373:7:7",
														"nodeType": "YulTypedName",
														"src": "9373:7:7",
														"type": ""
													}
												],
												"src": "9333:410:7"
											},
											{
												"body": {
													"nativeSrc": "9777:152:7",
													"nodeType": "YulBlock",
													"src": "9777:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9794:1:7",
																		"nodeType": "YulLiteral",
																		"src": "9794:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9797:77:7",
																		"nodeType": "YulLiteral",
																		"src": "9797:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9787:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "9787:6:7"
																},
																"nativeSrc": "9787:88:7",
																"nodeType": "YulFunctionCall",
																"src": "9787:88:7"
															},
															"nativeSrc": "9787:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "9787:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9891:1:7",
																		"nodeType": "YulLiteral",
																		"src": "9891:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9894:4:7",
																		"nodeType": "YulLiteral",
																		"src": "9894:4:7",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9884:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "9884:6:7"
																},
																"nativeSrc": "9884:15:7",
																"nodeType": "YulFunctionCall",
																"src": "9884:15:7"
															},
															"nativeSrc": "9884:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "9884:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9915:1:7",
																		"nodeType": "YulLiteral",
																		"src": "9915:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9918:4:7",
																		"nodeType": "YulLiteral",
																		"src": "9918:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "9908:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "9908:6:7"
																},
																"nativeSrc": "9908:15:7",
																"nodeType": "YulFunctionCall",
																"src": "9908:15:7"
															},
															"nativeSrc": "9908:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "9908:15:7"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "9749:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "9749:180:7"
											},
											{
												"body": {
													"nativeSrc": "9977:143:7",
													"nodeType": "YulBlock",
													"src": "9977:143:7",
													"statements": [
														{
															"nativeSrc": "9987:25:7",
															"nodeType": "YulAssignment",
															"src": "9987:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10010:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "10010:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9992:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "9992:17:7"
																},
																"nativeSrc": "9992:20:7",
																"nodeType": "YulFunctionCall",
																"src": "9992:20:7"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "9987:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "9987:1:7"
																}
															]
														},
														{
															"nativeSrc": "10021:25:7",
															"nodeType": "YulAssignment",
															"src": "10021:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "10044:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "10044:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "10026:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "10026:17:7"
																},
																"nativeSrc": "10026:20:7",
																"nodeType": "YulFunctionCall",
																"src": "10026:20:7"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "10021:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "10021:1:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "10068:22:7",
																"nodeType": "YulBlock",
																"src": "10068:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nativeSrc": "10070:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "10070:16:7"
																			},
																			"nativeSrc": "10070:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "10070:18:7"
																		},
																		"nativeSrc": "10070:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "10070:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "10065:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "10065:1:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "10058:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "10058:6:7"
																},
																"nativeSrc": "10058:9:7",
																"nodeType": "YulFunctionCall",
																"src": "10058:9:7"
															},
															"nativeSrc": "10055:35:7",
															"nodeType": "YulIf",
															"src": "10055:35:7"
														},
														{
															"nativeSrc": "10100:14:7",
															"nodeType": "YulAssignment",
															"src": "10100:14:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10109:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "10109:1:7"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "10112:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "10112:1:7"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "10105:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "10105:3:7"
																},
																"nativeSrc": "10105:9:7",
																"nodeType": "YulFunctionCall",
																"src": "10105:9:7"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "10100:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "10100:1:7"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "9935:185:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "9966:1:7",
														"nodeType": "YulTypedName",
														"src": "9966:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "9969:1:7",
														"nodeType": "YulTypedName",
														"src": "9969:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "9975:1:7",
														"nodeType": "YulTypedName",
														"src": "9975:1:7",
														"type": ""
													}
												],
												"src": "9935:185:7"
											},
											{
												"body": {
													"nativeSrc": "10170:147:7",
													"nodeType": "YulBlock",
													"src": "10170:147:7",
													"statements": [
														{
															"nativeSrc": "10180:25:7",
															"nodeType": "YulAssignment",
															"src": "10180:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10203:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "10203:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "10185:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "10185:17:7"
																},
																"nativeSrc": "10185:20:7",
																"nodeType": "YulFunctionCall",
																"src": "10185:20:7"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "10180:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "10180:1:7"
																}
															]
														},
														{
															"nativeSrc": "10214:25:7",
															"nodeType": "YulAssignment",
															"src": "10214:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "10237:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "10237:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "10219:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "10219:17:7"
																},
																"nativeSrc": "10219:20:7",
																"nodeType": "YulFunctionCall",
																"src": "10219:20:7"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "10214:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "10214:1:7"
																}
															]
														},
														{
															"nativeSrc": "10248:16:7",
															"nodeType": "YulAssignment",
															"src": "10248:16:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10259:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "10259:1:7"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "10262:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "10262:1:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10255:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "10255:3:7"
																},
																"nativeSrc": "10255:9:7",
																"nodeType": "YulFunctionCall",
																"src": "10255:9:7"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "10248:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "10248:3:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "10288:22:7",
																"nodeType": "YulBlock",
																"src": "10288:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "10290:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "10290:16:7"
																			},
																			"nativeSrc": "10290:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "10290:18:7"
																		},
																		"nativeSrc": "10290:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "10290:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10280:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "10280:1:7"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "10283:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "10283:3:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "10277:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "10277:2:7"
																},
																"nativeSrc": "10277:10:7",
																"nodeType": "YulFunctionCall",
																"src": "10277:10:7"
															},
															"nativeSrc": "10274:36:7",
															"nodeType": "YulIf",
															"src": "10274:36:7"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "10126:191:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "10157:1:7",
														"nodeType": "YulTypedName",
														"src": "10157:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "10160:1:7",
														"nodeType": "YulTypedName",
														"src": "10160:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "10166:3:7",
														"nodeType": "YulTypedName",
														"src": "10166:3:7",
														"type": ""
													}
												],
												"src": "10126:191:7"
											},
											{
												"body": {
													"nativeSrc": "10388:53:7",
													"nodeType": "YulBlock",
													"src": "10388:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10405:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "10405:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "10428:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "10428:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "10410:17:7",
																			"nodeType": "YulIdentifier",
																			"src": "10410:17:7"
																		},
																		"nativeSrc": "10410:24:7",
																		"nodeType": "YulFunctionCall",
																		"src": "10410:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10398:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "10398:6:7"
																},
																"nativeSrc": "10398:37:7",
																"nodeType": "YulFunctionCall",
																"src": "10398:37:7"
															},
															"nativeSrc": "10398:37:7",
															"nodeType": "YulExpressionStatement",
															"src": "10398:37:7"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "10323:118:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "10376:5:7",
														"nodeType": "YulTypedName",
														"src": "10376:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "10383:3:7",
														"nodeType": "YulTypedName",
														"src": "10383:3:7",
														"type": ""
													}
												],
												"src": "10323:118:7"
											},
											{
												"body": {
													"nativeSrc": "10601:288:7",
													"nodeType": "YulBlock",
													"src": "10601:288:7",
													"statements": [
														{
															"nativeSrc": "10611:26:7",
															"nodeType": "YulAssignment",
															"src": "10611:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10623:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "10623:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10634:2:7",
																		"nodeType": "YulLiteral",
																		"src": "10634:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10619:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "10619:3:7"
																},
																"nativeSrc": "10619:18:7",
																"nodeType": "YulFunctionCall",
																"src": "10619:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10611:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "10611:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "10691:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "10691:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10704:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "10704:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10715:1:7",
																				"nodeType": "YulLiteral",
																				"src": "10715:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10700:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "10700:3:7"
																		},
																		"nativeSrc": "10700:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "10700:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "10647:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "10647:43:7"
																},
																"nativeSrc": "10647:71:7",
																"nodeType": "YulFunctionCall",
																"src": "10647:71:7"
															},
															"nativeSrc": "10647:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "10647:71:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "10772:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "10772:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10785:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "10785:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10796:2:7",
																				"nodeType": "YulLiteral",
																				"src": "10796:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10781:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "10781:3:7"
																		},
																		"nativeSrc": "10781:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "10781:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "10728:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "10728:43:7"
																},
																"nativeSrc": "10728:72:7",
																"nodeType": "YulFunctionCall",
																"src": "10728:72:7"
															},
															"nativeSrc": "10728:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "10728:72:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "10854:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "10854:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10867:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "10867:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10878:2:7",
																				"nodeType": "YulLiteral",
																				"src": "10878:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10863:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "10863:3:7"
																		},
																		"nativeSrc": "10863:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "10863:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "10810:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "10810:43:7"
																},
																"nativeSrc": "10810:72:7",
																"nodeType": "YulFunctionCall",
																"src": "10810:72:7"
															},
															"nativeSrc": "10810:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "10810:72:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "10447:442:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10557:9:7",
														"nodeType": "YulTypedName",
														"src": "10557:9:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "10569:6:7",
														"nodeType": "YulTypedName",
														"src": "10569:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "10577:6:7",
														"nodeType": "YulTypedName",
														"src": "10577:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "10585:6:7",
														"nodeType": "YulTypedName",
														"src": "10585:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10596:4:7",
														"nodeType": "YulTypedName",
														"src": "10596:4:7",
														"type": ""
													}
												],
												"src": "10447:442:7"
											},
											{
												"body": {
													"nativeSrc": "10993:124:7",
													"nodeType": "YulBlock",
													"src": "10993:124:7",
													"statements": [
														{
															"nativeSrc": "11003:26:7",
															"nodeType": "YulAssignment",
															"src": "11003:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11015:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "11015:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11026:2:7",
																		"nodeType": "YulLiteral",
																		"src": "11026:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11011:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "11011:3:7"
																},
																"nativeSrc": "11011:18:7",
																"nodeType": "YulFunctionCall",
																"src": "11011:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11003:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "11003:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "11083:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "11083:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11096:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "11096:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11107:1:7",
																				"nodeType": "YulLiteral",
																				"src": "11107:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11092:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "11092:3:7"
																		},
																		"nativeSrc": "11092:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "11092:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "11039:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "11039:43:7"
																},
																"nativeSrc": "11039:71:7",
																"nodeType": "YulFunctionCall",
																"src": "11039:71:7"
															},
															"nativeSrc": "11039:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "11039:71:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "10895:222:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10965:9:7",
														"nodeType": "YulTypedName",
														"src": "10965:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "10977:6:7",
														"nodeType": "YulTypedName",
														"src": "10977:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10988:4:7",
														"nodeType": "YulTypedName",
														"src": "10988:4:7",
														"type": ""
													}
												],
												"src": "10895:222:7"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_addresst_addresst_addresst_addresst_uint256_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6 {\n        if slt(sub(dataEnd, headStart), 224) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 160\n\n            value5 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 192\n\n            value6 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_854cf043fa623ebed8453fda259d33de3f6e7493e6b8ff90fcfdd906ab498ce3(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid owner address\")\n\n    }\n\n    function abi_encode_t_stringliteral_854cf043fa623ebed8453fda259d33de3f6e7493e6b8ff90fcfdd906ab498ce3_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 21)\n        store_literal_in_memory_854cf043fa623ebed8453fda259d33de3f6e7493e6b8ff90fcfdd906ab498ce3(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_854cf043fa623ebed8453fda259d33de3f6e7493e6b8ff90fcfdd906ab498ce3__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_854cf043fa623ebed8453fda259d33de3f6e7493e6b8ff90fcfdd906ab498ce3_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 7,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b506040516123593803806123598339818101604052810190610031919061081e565b866040518060400160405280601e81526020017f496e646570656e64656e74204361706974616c2046756e6420546f6b656e00008152506040518060400160405280600481526020017f494346540000000000000000000000000000000000000000000000000000000081525081600390816100ad9190610aec565b5080600490816100bd9190610aec565b5050505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610130575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016101279190610bca565b60405180910390fd5b61013f8161042c60201b60201c565b505f73ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff16036101ae576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101a590610c3d565b60405180910390fd5b8560065f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508460075f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508360085f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508260095f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081600a5f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505f6064603c836102fe9190610c88565b6103089190610cf6565b90505f606460148461031a9190610c88565b6103249190610cf6565b90505f6064600a856103369190610c88565b6103409190610cf6565b90505f60646005866103529190610c88565b61035c9190610cf6565b90505f606460058761036e9190610c88565b6103789190610cf6565b905061038a8b866104ef60201b60201c565b61039a8a856104ef60201b60201c565b6103aa89846104ef60201b60201c565b6103ba88836104ef60201b60201c565b6103ca87826104ef60201b60201c565b6301e13380426103da9190610d26565b600b5f8c73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505050505050505050505050610db6565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160055f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361055f575f6040517fec442f050000000000000000000000000000000000000000000000000000000081526004016105569190610bca565b60405180910390fd5b6105705f838361057460201b60201c565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036105c4578060025f8282546105b89190610d26565b92505081905550610692565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205490508181101561064d578381836040517fe450d38c00000000000000000000000000000000000000000000000000000000815260040161064493929190610d68565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036106d9578060025f8282540392505081905550610723565b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516107809190610d9d565b60405180910390a3505050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6107ba82610791565b9050919050565b6107ca816107b0565b81146107d4575f80fd5b50565b5f815190506107e5816107c1565b92915050565b5f819050919050565b6107fd816107eb565b8114610807575f80fd5b50565b5f81519050610818816107f4565b92915050565b5f805f805f805f60e0888a0312156108395761083861078d565b5b5f6108468a828b016107d7565b97505060206108578a828b016107d7565b96505060406108688a828b016107d7565b95505060606108798a828b016107d7565b945050608061088a8a828b016107d7565b93505060a061089b8a828b016107d7565b92505060c06108ac8a828b0161080a565b91505092959891949750929550565b5f81519050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061093657607f821691505b602082108103610949576109486108f2565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f600883026109ab7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82610970565b6109b58683610970565b95508019841693508086168417925050509392505050565b5f819050919050565b5f6109f06109eb6109e6846107eb565b6109cd565b6107eb565b9050919050565b5f819050919050565b610a09836109d6565b610a1d610a15826109f7565b84845461097c565b825550505050565b5f90565b610a31610a25565b610a3c818484610a00565b505050565b5b81811015610a5f57610a545f82610a29565b600181019050610a42565b5050565b601f821115610aa457610a758161094f565b610a7e84610961565b81016020851015610a8d578190505b610aa1610a9985610961565b830182610a41565b50505b505050565b5f82821c905092915050565b5f610ac45f1984600802610aa9565b1980831691505092915050565b5f610adc8383610ab5565b9150826002028217905092915050565b610af5826108bb565b67ffffffffffffffff811115610b0e57610b0d6108c5565b5b610b18825461091f565b610b23828285610a63565b5f60209050601f831160018114610b54575f8415610b42578287015190505b610b4c8582610ad1565b865550610bb3565b601f198416610b628661094f565b5f5b82811015610b8957848901518255600182019150602085019450602081019050610b64565b86831015610ba65784890151610ba2601f891682610ab5565b8355505b6001600288020188555050505b505050505050565b610bc4816107b0565b82525050565b5f602082019050610bdd5f830184610bbb565b92915050565b5f82825260208201905092915050565b7f496e76616c6964206f776e6572206164647265737300000000000000000000005f82015250565b5f610c27601583610be3565b9150610c3282610bf3565b602082019050919050565b5f6020820190508181035f830152610c5481610c1b565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f610c92826107eb565b9150610c9d836107eb565b9250828202610cab816107eb565b91508282048414831517610cc257610cc1610c5b565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f610d00826107eb565b9150610d0b836107eb565b925082610d1b57610d1a610cc9565b5b828204905092915050565b5f610d30826107eb565b9150610d3b836107eb565b9250828201905080821115610d5357610d52610c5b565b5b92915050565b610d62816107eb565b82525050565b5f606082019050610d7b5f830186610bbb565b610d886020830185610d59565b610d956040830184610d59565b949350505050565b5f602082019050610db05f830184610d59565b92915050565b61159680610dc35f395ff3fe608060405234801561000f575f80fd5b5060043610610135575f3560e01c806342966c68116100b65780638da5cb5b1161007a5780638da5cb5b1461031757806395d89b4114610335578063a9059cbb14610353578063cd3293de14610383578063dd62ed3e146103a1578063f2fde38b146103d157610135565b806342966c681461028557806359d7bd71146102a157806370a08231146102bf578063715018a6146102ef5780638ac27f5f146102f957610135565b806323b872dd116100fd57806323b872dd146101df5780632d3e474a1461020f578063313ce5671461022d5780633829b0dc1461024b57806340c10f191461026957610135565b806306fdde0314610139578063095ea7b31461015757806318160ddd146101875780631f4e1504146101a5578063221322d5146101af575b5f80fd5b6101416103ed565b60405161014e919061117c565b60405180910390f35b610171600480360381019061016c919061122d565b61047d565b60405161017e9190611285565b60405180910390f35b61018f61049f565b60405161019c91906112ad565b60405180910390f35b6101ad6104a8565b005b6101c960048036038101906101c491906112c6565b6104b2565b6040516101d691906112ad565b60405180910390f35b6101f960048036038101906101f491906112f1565b6104c7565b6040516102069190611285565b60405180910390f35b61021761055c565b6040516102249190611350565b60405180910390f35b610235610581565b6040516102429190611384565b60405180910390f35b610253610589565b6040516102609190611350565b60405180910390f35b610283600480360381019061027e919061122d565b6105ae565b005b61029f600480360381019061029a919061139d565b6105c4565b005b6102a96105d9565b6040516102b69190611350565b60405180910390f35b6102d960048036038101906102d491906112c6565b6105fe565b6040516102e691906112ad565b60405180910390f35b6102f7610643565b005b610301610656565b60405161030e9190611350565b60405180910390f35b61031f61067b565b60405161032c9190611350565b60405180910390f35b61033d6106a3565b60405161034a919061117c565b60405180910390f35b61036d6004803603810190610368919061122d565b610733565b60405161037a9190611285565b60405180910390f35b61038b6107c6565b6040516103989190611350565b60405180910390f35b6103bb60048036038101906103b691906113c8565b6107eb565b6040516103c891906112ad565b60405180910390f35b6103eb60048036038101906103e691906112c6565b61086d565b005b6060600380546103fc90611433565b80601f016020809104026020016040519081016040528092919081815260200182805461042890611433565b80156104735780601f1061044a57610100808354040283529160200191610473565b820191905f5260205f20905b81548152906001019060200180831161045657829003601f168201915b5050505050905090565b5f806104876108f1565b90506104948185856108f8565b600191505092915050565b5f600254905090565b6104b061090a565b565b600b602052805f5260405f205f915090505481565b5f600b5f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054421015610548576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161053f906114ad565b60405180910390fd5b610553848484610991565b90509392505050565b60095f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f6012905090565b60075f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6105b661090a565b6105c082826109bf565b5050565b6105cc61090a565b6105d63382610a3e565b50565b600a5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f805f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b61064b61090a565b6106545f610abd565b565b60065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6060600480546106b290611433565b80601f01602080910402602001604051908101604052809291908181526020018280546106de90611433565b80156107295780601f1061070057610100808354040283529160200191610729565b820191905f5260205f20905b81548152906001019060200180831161070c57829003601f168201915b5050505050905090565b5f600b5f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20544210156107b4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107ab906114ad565b60405180910390fd5b6107be8383610b80565b905092915050565b60085f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b61087561090a565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036108e5575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016108dc9190611350565b60405180910390fd5b6108ee81610abd565b50565b5f33905090565b6109058383836001610ba2565b505050565b6109126108f1565b73ffffffffffffffffffffffffffffffffffffffff1661093061067b565b73ffffffffffffffffffffffffffffffffffffffff161461098f576109536108f1565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016109869190611350565b60405180910390fd5b565b5f8061099b6108f1565b90506109a8858285610d71565b6109b3858585610e03565b60019150509392505050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610a2f575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610a269190611350565b60405180910390fd5b610a3a5f8383610ef3565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610aae575f6040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401610aa59190611350565b60405180910390fd5b610ab9825f83610ef3565b5050565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160055f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f80610b8a6108f1565b9050610b97818585610e03565b600191505092915050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610c12575f6040517fe602df05000000000000000000000000000000000000000000000000000000008152600401610c099190611350565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610c82575f6040517f94280d62000000000000000000000000000000000000000000000000000000008152600401610c799190611350565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508015610d6b578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051610d6291906112ad565b60405180910390a35b50505050565b5f610d7c84846107eb565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8114610dfd5781811015610dee578281836040517ffb8f41b2000000000000000000000000000000000000000000000000000000008152600401610de5939291906114cb565b60405180910390fd5b610dfc84848484035f610ba2565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610e73575f6040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401610e6a9190611350565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610ee3575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610eda9190611350565b60405180910390fd5b610eee838383610ef3565b505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610f43578060025f828254610f37919061152d565b92505081905550611011565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081811015610fcc578381836040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401610fc3939291906114cb565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611058578060025f82825403925050819055506110a2565b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516110ff91906112ad565b60405180910390a3505050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f61114e8261110c565b6111588185611116565b9350611168818560208601611126565b61117181611134565b840191505092915050565b5f6020820190508181035f8301526111948184611144565b905092915050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6111c9826111a0565b9050919050565b6111d9816111bf565b81146111e3575f80fd5b50565b5f813590506111f4816111d0565b92915050565b5f819050919050565b61120c816111fa565b8114611216575f80fd5b50565b5f8135905061122781611203565b92915050565b5f80604083850312156112435761124261119c565b5b5f611250858286016111e6565b925050602061126185828601611219565b9150509250929050565b5f8115159050919050565b61127f8161126b565b82525050565b5f6020820190506112985f830184611276565b92915050565b6112a7816111fa565b82525050565b5f6020820190506112c05f83018461129e565b92915050565b5f602082840312156112db576112da61119c565b5b5f6112e8848285016111e6565b91505092915050565b5f805f606084860312156113085761130761119c565b5b5f611315868287016111e6565b9350506020611326868287016111e6565b925050604061133786828701611219565b9150509250925092565b61134a816111bf565b82525050565b5f6020820190506113635f830184611341565b92915050565b5f60ff82169050919050565b61137e81611369565b82525050565b5f6020820190506113975f830184611375565b92915050565b5f602082840312156113b2576113b161119c565b5b5f6113bf84828501611219565b91505092915050565b5f80604083850312156113de576113dd61119c565b5b5f6113eb858286016111e6565b92505060206113fc858286016111e6565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061144a57607f821691505b60208210810361145d5761145c611406565b5b50919050565b7f546f6b656e7320617265206c6f636b65640000000000000000000000000000005f82015250565b5f611497601183611116565b91506114a282611463565b602082019050919050565b5f6020820190508181035f8301526114c48161148b565b9050919050565b5f6060820190506114de5f830186611341565b6114eb602083018561129e565b6114f8604083018461129e565b949350505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f611537826111fa565b9150611542836111fa565b925082820190508082111561155a57611559611500565b5b9291505056fea2646970667358221220cd062e27254d501db682d580f07091f6d39f2fa3ca55df2b6caada0f6b665a0664736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x2359 CODESIZE SUB DUP1 PUSH2 0x2359 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x31 SWAP2 SWAP1 PUSH2 0x81E JUMP JUMPDEST DUP7 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x496E646570656E64656E74204361706974616C2046756E6420546F6B656E0000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4943465400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH2 0xAD SWAP2 SWAP1 PUSH2 0xAEC JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP2 PUSH2 0xBD SWAP2 SWAP1 PUSH2 0xAEC JUMP JUMPDEST POP POP POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x130 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x127 SWAP2 SWAP1 PUSH2 0xBCA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x13F DUP2 PUSH2 0x42C PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1AE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A5 SWAP1 PUSH2 0xC3D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP6 PUSH1 0x6 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP5 PUSH1 0x7 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 PUSH1 0x8 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP3 PUSH1 0x9 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH1 0xA PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH0 PUSH1 0x64 PUSH1 0x3C DUP4 PUSH2 0x2FE SWAP2 SWAP1 PUSH2 0xC88 JUMP JUMPDEST PUSH2 0x308 SWAP2 SWAP1 PUSH2 0xCF6 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x64 PUSH1 0x14 DUP5 PUSH2 0x31A SWAP2 SWAP1 PUSH2 0xC88 JUMP JUMPDEST PUSH2 0x324 SWAP2 SWAP1 PUSH2 0xCF6 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x64 PUSH1 0xA DUP6 PUSH2 0x336 SWAP2 SWAP1 PUSH2 0xC88 JUMP JUMPDEST PUSH2 0x340 SWAP2 SWAP1 PUSH2 0xCF6 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x64 PUSH1 0x5 DUP7 PUSH2 0x352 SWAP2 SWAP1 PUSH2 0xC88 JUMP JUMPDEST PUSH2 0x35C SWAP2 SWAP1 PUSH2 0xCF6 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x64 PUSH1 0x5 DUP8 PUSH2 0x36E SWAP2 SWAP1 PUSH2 0xC88 JUMP JUMPDEST PUSH2 0x378 SWAP2 SWAP1 PUSH2 0xCF6 JUMP JUMPDEST SWAP1 POP PUSH2 0x38A DUP12 DUP7 PUSH2 0x4EF PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x39A DUP11 DUP6 PUSH2 0x4EF PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x3AA DUP10 DUP5 PUSH2 0x4EF PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x3BA DUP9 DUP4 PUSH2 0x4EF PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x3CA DUP8 DUP3 PUSH2 0x4EF PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH4 0x1E13380 TIMESTAMP PUSH2 0x3DA SWAP2 SWAP1 PUSH2 0xD26 JUMP JUMPDEST PUSH1 0xB PUSH0 DUP13 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP POP POP POP POP POP POP POP POP POP POP POP PUSH2 0xDB6 JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x55F JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x556 SWAP2 SWAP1 PUSH2 0xBCA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x570 PUSH0 DUP4 DUP4 PUSH2 0x574 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x5C4 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x5B8 SWAP2 SWAP1 PUSH2 0xD26 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x692 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x64D JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x644 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xD68 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x6D9 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x723 JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x780 SWAP2 SWAP1 PUSH2 0xD9D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x7BA DUP3 PUSH2 0x791 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x7CA DUP2 PUSH2 0x7B0 JUMP JUMPDEST DUP2 EQ PUSH2 0x7D4 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x7E5 DUP2 PUSH2 0x7C1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x7FD DUP2 PUSH2 0x7EB JUMP JUMPDEST DUP2 EQ PUSH2 0x807 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x818 DUP2 PUSH2 0x7F4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x839 JUMPI PUSH2 0x838 PUSH2 0x78D JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x846 DUP11 DUP3 DUP12 ADD PUSH2 0x7D7 JUMP JUMPDEST SWAP8 POP POP PUSH1 0x20 PUSH2 0x857 DUP11 DUP3 DUP12 ADD PUSH2 0x7D7 JUMP JUMPDEST SWAP7 POP POP PUSH1 0x40 PUSH2 0x868 DUP11 DUP3 DUP12 ADD PUSH2 0x7D7 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x60 PUSH2 0x879 DUP11 DUP3 DUP12 ADD PUSH2 0x7D7 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x80 PUSH2 0x88A DUP11 DUP3 DUP12 ADD PUSH2 0x7D7 JUMP JUMPDEST SWAP4 POP POP PUSH1 0xA0 PUSH2 0x89B DUP11 DUP3 DUP12 ADD PUSH2 0x7D7 JUMP JUMPDEST SWAP3 POP POP PUSH1 0xC0 PUSH2 0x8AC DUP11 DUP3 DUP12 ADD PUSH2 0x80A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x936 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x949 JUMPI PUSH2 0x948 PUSH2 0x8F2 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x9AB PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x970 JUMP JUMPDEST PUSH2 0x9B5 DUP7 DUP4 PUSH2 0x970 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x9F0 PUSH2 0x9EB PUSH2 0x9E6 DUP5 PUSH2 0x7EB JUMP JUMPDEST PUSH2 0x9CD JUMP JUMPDEST PUSH2 0x7EB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA09 DUP4 PUSH2 0x9D6 JUMP JUMPDEST PUSH2 0xA1D PUSH2 0xA15 DUP3 PUSH2 0x9F7 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x97C JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0xA31 PUSH2 0xA25 JUMP JUMPDEST PUSH2 0xA3C DUP2 DUP5 DUP5 PUSH2 0xA00 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xA5F JUMPI PUSH2 0xA54 PUSH0 DUP3 PUSH2 0xA29 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0xA42 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0xAA4 JUMPI PUSH2 0xA75 DUP2 PUSH2 0x94F JUMP JUMPDEST PUSH2 0xA7E DUP5 PUSH2 0x961 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0xA8D JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0xAA1 PUSH2 0xA99 DUP6 PUSH2 0x961 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0xA41 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xAC4 PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0xAA9 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xADC DUP4 DUP4 PUSH2 0xAB5 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xAF5 DUP3 PUSH2 0x8BB JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xB0E JUMPI PUSH2 0xB0D PUSH2 0x8C5 JUMP JUMPDEST JUMPDEST PUSH2 0xB18 DUP3 SLOAD PUSH2 0x91F JUMP JUMPDEST PUSH2 0xB23 DUP3 DUP3 DUP6 PUSH2 0xA63 JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0xB54 JUMPI PUSH0 DUP5 ISZERO PUSH2 0xB42 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0xB4C DUP6 DUP3 PUSH2 0xAD1 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0xBB3 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0xB62 DUP7 PUSH2 0x94F JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0xB89 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xB64 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0xBA6 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0xBA2 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0xAB5 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xBC4 DUP2 PUSH2 0x7B0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xBDD PUSH0 DUP4 ADD DUP5 PUSH2 0xBBB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E76616C6964206F776E657220616464726573730000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xC27 PUSH1 0x15 DUP4 PUSH2 0xBE3 JUMP JUMPDEST SWAP2 POP PUSH2 0xC32 DUP3 PUSH2 0xBF3 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xC54 DUP2 PUSH2 0xC1B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0xC92 DUP3 PUSH2 0x7EB JUMP JUMPDEST SWAP2 POP PUSH2 0xC9D DUP4 PUSH2 0x7EB JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0xCAB DUP2 PUSH2 0x7EB JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0xCC2 JUMPI PUSH2 0xCC1 PUSH2 0xC5B JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0xD00 DUP3 PUSH2 0x7EB JUMP JUMPDEST SWAP2 POP PUSH2 0xD0B DUP4 PUSH2 0x7EB JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0xD1B JUMPI PUSH2 0xD1A PUSH2 0xCC9 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xD30 DUP3 PUSH2 0x7EB JUMP JUMPDEST SWAP2 POP PUSH2 0xD3B DUP4 PUSH2 0x7EB JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xD53 JUMPI PUSH2 0xD52 PUSH2 0xC5B JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xD62 DUP2 PUSH2 0x7EB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xD7B PUSH0 DUP4 ADD DUP7 PUSH2 0xBBB JUMP JUMPDEST PUSH2 0xD88 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xD59 JUMP JUMPDEST PUSH2 0xD95 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xD59 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xDB0 PUSH0 DUP4 ADD DUP5 PUSH2 0xD59 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1596 DUP1 PUSH2 0xDC3 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x135 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x42966C68 GT PUSH2 0xB6 JUMPI DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x7A JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x317 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x335 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x353 JUMPI DUP1 PUSH4 0xCD3293DE EQ PUSH2 0x383 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x3A1 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x3D1 JUMPI PUSH2 0x135 JUMP JUMPDEST DUP1 PUSH4 0x42966C68 EQ PUSH2 0x285 JUMPI DUP1 PUSH4 0x59D7BD71 EQ PUSH2 0x2A1 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x2BF JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x2EF JUMPI DUP1 PUSH4 0x8AC27F5F EQ PUSH2 0x2F9 JUMPI PUSH2 0x135 JUMP JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0xFD JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1DF JUMPI DUP1 PUSH4 0x2D3E474A EQ PUSH2 0x20F JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x22D JUMPI DUP1 PUSH4 0x3829B0DC EQ PUSH2 0x24B JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x269 JUMPI PUSH2 0x135 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x139 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x157 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x187 JUMPI DUP1 PUSH4 0x1F4E1504 EQ PUSH2 0x1A5 JUMPI DUP1 PUSH4 0x221322D5 EQ PUSH2 0x1AF JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x141 PUSH2 0x3ED JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14E SWAP2 SWAP1 PUSH2 0x117C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x171 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x16C SWAP2 SWAP1 PUSH2 0x122D JUMP JUMPDEST PUSH2 0x47D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x17E SWAP2 SWAP1 PUSH2 0x1285 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x18F PUSH2 0x49F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x19C SWAP2 SWAP1 PUSH2 0x12AD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1AD PUSH2 0x4A8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1C9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1C4 SWAP2 SWAP1 PUSH2 0x12C6 JUMP JUMPDEST PUSH2 0x4B2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D6 SWAP2 SWAP1 PUSH2 0x12AD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1F4 SWAP2 SWAP1 PUSH2 0x12F1 JUMP JUMPDEST PUSH2 0x4C7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x206 SWAP2 SWAP1 PUSH2 0x1285 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x217 PUSH2 0x55C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x224 SWAP2 SWAP1 PUSH2 0x1350 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x235 PUSH2 0x581 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x242 SWAP2 SWAP1 PUSH2 0x1384 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x253 PUSH2 0x589 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x260 SWAP2 SWAP1 PUSH2 0x1350 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x283 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x27E SWAP2 SWAP1 PUSH2 0x122D JUMP JUMPDEST PUSH2 0x5AE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x29F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x29A SWAP2 SWAP1 PUSH2 0x139D JUMP JUMPDEST PUSH2 0x5C4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2A9 PUSH2 0x5D9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B6 SWAP2 SWAP1 PUSH2 0x1350 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2D9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2D4 SWAP2 SWAP1 PUSH2 0x12C6 JUMP JUMPDEST PUSH2 0x5FE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2E6 SWAP2 SWAP1 PUSH2 0x12AD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2F7 PUSH2 0x643 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x301 PUSH2 0x656 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x30E SWAP2 SWAP1 PUSH2 0x1350 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x31F PUSH2 0x67B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x32C SWAP2 SWAP1 PUSH2 0x1350 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x33D PUSH2 0x6A3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x34A SWAP2 SWAP1 PUSH2 0x117C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x36D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x368 SWAP2 SWAP1 PUSH2 0x122D JUMP JUMPDEST PUSH2 0x733 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x37A SWAP2 SWAP1 PUSH2 0x1285 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x38B PUSH2 0x7C6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x398 SWAP2 SWAP1 PUSH2 0x1350 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3BB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3B6 SWAP2 SWAP1 PUSH2 0x13C8 JUMP JUMPDEST PUSH2 0x7EB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3C8 SWAP2 SWAP1 PUSH2 0x12AD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3EB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3E6 SWAP2 SWAP1 PUSH2 0x12C6 JUMP JUMPDEST PUSH2 0x86D JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x3FC SWAP1 PUSH2 0x1433 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x428 SWAP1 PUSH2 0x1433 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x473 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x44A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x473 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x456 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x487 PUSH2 0x8F1 JUMP JUMPDEST SWAP1 POP PUSH2 0x494 DUP2 DUP6 DUP6 PUSH2 0x8F8 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x4B0 PUSH2 0x90A JUMP JUMPDEST JUMP JUMPDEST PUSH1 0xB PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH1 0xB PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD TIMESTAMP LT ISZERO PUSH2 0x548 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x53F SWAP1 PUSH2 0x14AD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x553 DUP5 DUP5 DUP5 PUSH2 0x991 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x9 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x7 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x5B6 PUSH2 0x90A JUMP JUMPDEST PUSH2 0x5C0 DUP3 DUP3 PUSH2 0x9BF JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x5CC PUSH2 0x90A JUMP JUMPDEST PUSH2 0x5D6 CALLER DUP3 PUSH2 0xA3E JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0xA PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x64B PUSH2 0x90A JUMP JUMPDEST PUSH2 0x654 PUSH0 PUSH2 0xABD JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x6B2 SWAP1 PUSH2 0x1433 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x6DE SWAP1 PUSH2 0x1433 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x729 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x700 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x729 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x70C JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0xB PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD TIMESTAMP LT ISZERO PUSH2 0x7B4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7AB SWAP1 PUSH2 0x14AD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x7BE DUP4 DUP4 PUSH2 0xB80 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x8 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x875 PUSH2 0x90A JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x8E5 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8DC SWAP2 SWAP1 PUSH2 0x1350 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x8EE DUP2 PUSH2 0xABD JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x905 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0xBA2 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x912 PUSH2 0x8F1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x930 PUSH2 0x67B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x98F JUMPI PUSH2 0x953 PUSH2 0x8F1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x986 SWAP2 SWAP1 PUSH2 0x1350 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x99B PUSH2 0x8F1 JUMP JUMPDEST SWAP1 POP PUSH2 0x9A8 DUP6 DUP3 DUP6 PUSH2 0xD71 JUMP JUMPDEST PUSH2 0x9B3 DUP6 DUP6 DUP6 PUSH2 0xE03 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA2F JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA26 SWAP2 SWAP1 PUSH2 0x1350 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA3A PUSH0 DUP4 DUP4 PUSH2 0xEF3 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xAAE JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAA5 SWAP2 SWAP1 PUSH2 0x1350 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xAB9 DUP3 PUSH0 DUP4 PUSH2 0xEF3 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xB8A PUSH2 0x8F1 JUMP JUMPDEST SWAP1 POP PUSH2 0xB97 DUP2 DUP6 DUP6 PUSH2 0xE03 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xC12 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC09 SWAP2 SWAP1 PUSH2 0x1350 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xC82 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC79 SWAP2 SWAP1 PUSH2 0x1350 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0xD6B JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0xD62 SWAP2 SWAP1 PUSH2 0x12AD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xD7C DUP5 DUP5 PUSH2 0x7EB JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0xDFD JUMPI DUP2 DUP2 LT ISZERO PUSH2 0xDEE JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDE5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x14CB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xDFC DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0xBA2 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xE73 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE6A SWAP2 SWAP1 PUSH2 0x1350 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xEE3 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEDA SWAP2 SWAP1 PUSH2 0x1350 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xEEE DUP4 DUP4 DUP4 PUSH2 0xEF3 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xF43 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xF37 SWAP2 SWAP1 PUSH2 0x152D JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1011 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0xFCC JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFC3 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x14CB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1058 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x10A2 JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x10FF SWAP2 SWAP1 PUSH2 0x12AD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x114E DUP3 PUSH2 0x110C JUMP JUMPDEST PUSH2 0x1158 DUP2 DUP6 PUSH2 0x1116 JUMP JUMPDEST SWAP4 POP PUSH2 0x1168 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1126 JUMP JUMPDEST PUSH2 0x1171 DUP2 PUSH2 0x1134 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1194 DUP2 DUP5 PUSH2 0x1144 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x11C9 DUP3 PUSH2 0x11A0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x11D9 DUP2 PUSH2 0x11BF JUMP JUMPDEST DUP2 EQ PUSH2 0x11E3 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x11F4 DUP2 PUSH2 0x11D0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x120C DUP2 PUSH2 0x11FA JUMP JUMPDEST DUP2 EQ PUSH2 0x1216 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1227 DUP2 PUSH2 0x1203 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1243 JUMPI PUSH2 0x1242 PUSH2 0x119C JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1250 DUP6 DUP3 DUP7 ADD PUSH2 0x11E6 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1261 DUP6 DUP3 DUP7 ADD PUSH2 0x1219 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x127F DUP2 PUSH2 0x126B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1298 PUSH0 DUP4 ADD DUP5 PUSH2 0x1276 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x12A7 DUP2 PUSH2 0x11FA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x12C0 PUSH0 DUP4 ADD DUP5 PUSH2 0x129E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x12DB JUMPI PUSH2 0x12DA PUSH2 0x119C JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x12E8 DUP5 DUP3 DUP6 ADD PUSH2 0x11E6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1308 JUMPI PUSH2 0x1307 PUSH2 0x119C JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1315 DUP7 DUP3 DUP8 ADD PUSH2 0x11E6 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1326 DUP7 DUP3 DUP8 ADD PUSH2 0x11E6 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1337 DUP7 DUP3 DUP8 ADD PUSH2 0x1219 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0x134A DUP2 PUSH2 0x11BF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1363 PUSH0 DUP4 ADD DUP5 PUSH2 0x1341 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x137E DUP2 PUSH2 0x1369 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1397 PUSH0 DUP4 ADD DUP5 PUSH2 0x1375 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x13B2 JUMPI PUSH2 0x13B1 PUSH2 0x119C JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x13BF DUP5 DUP3 DUP6 ADD PUSH2 0x1219 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x13DE JUMPI PUSH2 0x13DD PUSH2 0x119C JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x13EB DUP6 DUP3 DUP7 ADD PUSH2 0x11E6 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x13FC DUP6 DUP3 DUP7 ADD PUSH2 0x11E6 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x144A JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x145D JUMPI PUSH2 0x145C PUSH2 0x1406 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x546F6B656E7320617265206C6F636B6564000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1497 PUSH1 0x11 DUP4 PUSH2 0x1116 JUMP JUMPDEST SWAP2 POP PUSH2 0x14A2 DUP3 PUSH2 0x1463 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x14C4 DUP2 PUSH2 0x148B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x14DE PUSH0 DUP4 ADD DUP7 PUSH2 0x1341 JUMP JUMPDEST PUSH2 0x14EB PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x129E JUMP JUMPDEST PUSH2 0x14F8 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x129E JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1537 DUP3 PUSH2 0x11FA JUMP JUMPDEST SWAP2 POP PUSH2 0x1542 DUP4 PUSH2 0x11FA JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x155A JUMPI PUSH2 0x1559 PUSH2 0x1500 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCD MOD 0x2E 0x27 0x25 0x4D POP SAR 0xB6 DUP3 0xD5 DUP1 CREATE PUSH17 0x91F6D39F2FA3CA55DF2B6CAADA0F6B665A MOD PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "167:2858:6:-:0;;;523:1373;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;808:12;1601:113:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1675:5;1667;:13;;;;;;:::i;:::-;;1700:7;1690;:17;;;;;;:::i;:::-;;1601:113;;1297:1:0;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;864:1:6::2;840:26;;:12;:26;;::::0;832:60:::2;;;;;;;;;;;;:::i;:::-;;;;;;;;;960:10;948:9;;:22;;;;;;;;;;;;;;;;;;994:12;980:11;;:26;;;;;;;;;;;;;;;;;;1026:8;1016:7;;:18;;;;;;;;;;;;;;;;;;1056:10;1044:9;;:22;;;;;;;;;;;;;;;;;;1098:20;1076:19;;:42;;;;;;;;;;;;;;;;;;1184:23;1233:3;1227:2;1211:13;:18;;;;:::i;:::-;1210:26;;;;:::i;:::-;1184:52;;1246:25;1297:3;1291:2;1275:13;:18;;;;:::i;:::-;1274:26;;;;:::i;:::-;1246:54;;1310:21;1357:3;1351:2;1335:13;:18;;;;:::i;:::-;1334:26;;;;:::i;:::-;1310:50;;1370:23;1418:3;1413:1;1397:13;:17;;;;:::i;:::-;1396:25;;;;:::i;:::-;1370:51;;1431:33;1489:3;1484:1;1468:13;:17;;;;:::i;:::-;1467:25;;;;:::i;:::-;1431:61;;1542:34;1548:10;1560:15;1542:5;;;:34;;:::i;:::-;1586:38;1592:12;1606:17;1586:5;;;:38;;:::i;:::-;1634:30;1640:8;1650:13;1634:5;;;:30;;:::i;:::-;1674:34;1680:10;1692:15;1674:5;;;:34;;:::i;:::-;1718:54;1724:20;1746:25;1718:5;;;:54;;:::i;:::-;1881:8;1863:15;:26;;;;:::i;:::-;1834:12;:26;1847:12;1834:26;;;;;;;;;;;;;;;:55;;;;822:1074;;;;;523:1373:::0;;;;;;;167:2858;;2912:187:0;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;7458:208:2:-;7547:1;7528:21;;:7;:21;;;7524:91;;7601:1;7572:32;;;;;;;;;;;:::i;:::-;;;;;;;;7524:91;7624:35;7640:1;7644:7;7653:5;7624:7;;;:35;;:::i;:::-;7458:208;;:::o;6008:1107::-;6113:1;6097:18;;:4;:18;;;6093:540;;6249:5;6233:12;;:21;;;;;;;:::i;:::-;;;;;;;;6093:540;;;6285:19;6307:9;:15;6317:4;6307:15;;;;;;;;;;;;;;;;6285:37;;6354:5;6340:11;:19;6336:115;;;6411:4;6417:11;6430:5;6386:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6336:115;6603:5;6589:11;:19;6571:9;:15;6581:4;6571:15;;;;;;;;;;;;;;;:37;;;;6271:362;6093:540;6661:1;6647:16;;:2;:16;;;6643:425;;6826:5;6810:12;;:21;;;;;;;;;;;6643:425;;;7038:5;7021:9;:13;7031:2;7021:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6643:425;7098:2;7083:25;;7092:4;7083:25;;;7102:5;7083:25;;;;;;:::i;:::-;;;;;;;;6008:1107;;;:::o;88:117:7:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:77::-;882:7;911:5;900:16;;845:77;;;:::o;928:122::-;1001:24;1019:5;1001:24;:::i;:::-;994:5;991:35;981:63;;1040:1;1037;1030:12;981:63;928:122;:::o;1056:143::-;1113:5;1144:6;1138:13;1129:22;;1160:33;1187:5;1160:33;:::i;:::-;1056:143;;;;:::o;1205:1291::-;1329:6;1337;1345;1353;1361;1369;1377;1426:3;1414:9;1405:7;1401:23;1397:33;1394:120;;;1433:79;;:::i;:::-;1394:120;1553:1;1578:64;1634:7;1625:6;1614:9;1610:22;1578:64;:::i;:::-;1568:74;;1524:128;1691:2;1717:64;1773:7;1764:6;1753:9;1749:22;1717:64;:::i;:::-;1707:74;;1662:129;1830:2;1856:64;1912:7;1903:6;1892:9;1888:22;1856:64;:::i;:::-;1846:74;;1801:129;1969:2;1995:64;2051:7;2042:6;2031:9;2027:22;1995:64;:::i;:::-;1985:74;;1940:129;2108:3;2135:64;2191:7;2182:6;2171:9;2167:22;2135:64;:::i;:::-;2125:74;;2079:130;2248:3;2275:64;2331:7;2322:6;2311:9;2307:22;2275:64;:::i;:::-;2265:74;;2219:130;2388:3;2415:64;2471:7;2462:6;2451:9;2447:22;2415:64;:::i;:::-;2405:74;;2359:130;1205:1291;;;;;;;;;;:::o;2502:99::-;2554:6;2588:5;2582:12;2572:22;;2502:99;;;:::o;2607:180::-;2655:77;2652:1;2645:88;2752:4;2749:1;2742:15;2776:4;2773:1;2766:15;2793:180;2841:77;2838:1;2831:88;2938:4;2935:1;2928:15;2962:4;2959:1;2952:15;2979:320;3023:6;3060:1;3054:4;3050:12;3040:22;;3107:1;3101:4;3097:12;3128:18;3118:81;;3184:4;3176:6;3172:17;3162:27;;3118:81;3246:2;3238:6;3235:14;3215:18;3212:38;3209:84;;3265:18;;:::i;:::-;3209:84;3030:269;2979:320;;;:::o;3305:141::-;3354:4;3377:3;3369:11;;3400:3;3397:1;3390:14;3434:4;3431:1;3421:18;3413:26;;3305:141;;;:::o;3452:93::-;3489:6;3536:2;3531;3524:5;3520:14;3516:23;3506:33;;3452:93;;;:::o;3551:107::-;3595:8;3645:5;3639:4;3635:16;3614:37;;3551:107;;;;:::o;3664:393::-;3733:6;3783:1;3771:10;3767:18;3806:97;3836:66;3825:9;3806:97;:::i;:::-;3924:39;3954:8;3943:9;3924:39;:::i;:::-;3912:51;;3996:4;3992:9;3985:5;3981:21;3972:30;;4045:4;4035:8;4031:19;4024:5;4021:30;4011:40;;3740:317;;3664:393;;;;;:::o;4063:60::-;4091:3;4112:5;4105:12;;4063:60;;;:::o;4129:142::-;4179:9;4212:53;4230:34;4239:24;4257:5;4239:24;:::i;:::-;4230:34;:::i;:::-;4212:53;:::i;:::-;4199:66;;4129:142;;;:::o;4277:75::-;4320:3;4341:5;4334:12;;4277:75;;;:::o;4358:269::-;4468:39;4499:7;4468:39;:::i;:::-;4529:91;4578:41;4602:16;4578:41;:::i;:::-;4570:6;4563:4;4557:11;4529:91;:::i;:::-;4523:4;4516:105;4434:193;4358:269;;;:::o;4633:73::-;4678:3;4633:73;:::o;4712:189::-;4789:32;;:::i;:::-;4830:65;4888:6;4880;4874:4;4830:65;:::i;:::-;4765:136;4712:189;;:::o;4907:186::-;4967:120;4984:3;4977:5;4974:14;4967:120;;;5038:39;5075:1;5068:5;5038:39;:::i;:::-;5011:1;5004:5;5000:13;4991:22;;4967:120;;;4907:186;;:::o;5099:543::-;5200:2;5195:3;5192:11;5189:446;;;5234:38;5266:5;5234:38;:::i;:::-;5318:29;5336:10;5318:29;:::i;:::-;5308:8;5304:44;5501:2;5489:10;5486:18;5483:49;;;5522:8;5507:23;;5483:49;5545:80;5601:22;5619:3;5601:22;:::i;:::-;5591:8;5587:37;5574:11;5545:80;:::i;:::-;5204:431;;5189:446;5099:543;;;:::o;5648:117::-;5702:8;5752:5;5746:4;5742:16;5721:37;;5648:117;;;;:::o;5771:169::-;5815:6;5848:51;5896:1;5892:6;5884:5;5881:1;5877:13;5848:51;:::i;:::-;5844:56;5929:4;5923;5919:15;5909:25;;5822:118;5771:169;;;;:::o;5945:295::-;6021:4;6167:29;6192:3;6186:4;6167:29;:::i;:::-;6159:37;;6229:3;6226:1;6222:11;6216:4;6213:21;6205:29;;5945:295;;;;:::o;6245:1395::-;6362:37;6395:3;6362:37;:::i;:::-;6464:18;6456:6;6453:30;6450:56;;;6486:18;;:::i;:::-;6450:56;6530:38;6562:4;6556:11;6530:38;:::i;:::-;6615:67;6675:6;6667;6661:4;6615:67;:::i;:::-;6709:1;6733:4;6720:17;;6765:2;6757:6;6754:14;6782:1;6777:618;;;;7439:1;7456:6;7453:77;;;7505:9;7500:3;7496:19;7490:26;7481:35;;7453:77;7556:67;7616:6;7609:5;7556:67;:::i;:::-;7550:4;7543:81;7412:222;6747:887;;6777:618;6829:4;6825:9;6817:6;6813:22;6863:37;6895:4;6863:37;:::i;:::-;6922:1;6936:208;6950:7;6947:1;6944:14;6936:208;;;7029:9;7024:3;7020:19;7014:26;7006:6;6999:42;7080:1;7072:6;7068:14;7058:24;;7127:2;7116:9;7112:18;7099:31;;6973:4;6970:1;6966:12;6961:17;;6936:208;;;7172:6;7163:7;7160:19;7157:179;;;7230:9;7225:3;7221:19;7215:26;7273:48;7315:4;7307:6;7303:17;7292:9;7273:48;:::i;:::-;7265:6;7258:64;7180:156;7157:179;7382:1;7378;7370:6;7366:14;7362:22;7356:4;7349:36;6784:611;;;6747:887;;6337:1303;;;6245:1395;;:::o;7646:118::-;7733:24;7751:5;7733:24;:::i;:::-;7728:3;7721:37;7646:118;;:::o;7770:222::-;7863:4;7901:2;7890:9;7886:18;7878:26;;7914:71;7982:1;7971:9;7967:17;7958:6;7914:71;:::i;:::-;7770:222;;;;:::o;7998:169::-;8082:11;8116:6;8111:3;8104:19;8156:4;8151:3;8147:14;8132:29;;7998:169;;;;:::o;8173:171::-;8313:23;8309:1;8301:6;8297:14;8290:47;8173:171;:::o;8350:366::-;8492:3;8513:67;8577:2;8572:3;8513:67;:::i;:::-;8506:74;;8589:93;8678:3;8589:93;:::i;:::-;8707:2;8702:3;8698:12;8691:19;;8350:366;;;:::o;8722:419::-;8888:4;8926:2;8915:9;8911:18;8903:26;;8975:9;8969:4;8965:20;8961:1;8950:9;8946:17;8939:47;9003:131;9129:4;9003:131;:::i;:::-;8995:139;;8722:419;;;:::o;9147:180::-;9195:77;9192:1;9185:88;9292:4;9289:1;9282:15;9316:4;9313:1;9306:15;9333:410;9373:7;9396:20;9414:1;9396:20;:::i;:::-;9391:25;;9430:20;9448:1;9430:20;:::i;:::-;9425:25;;9485:1;9482;9478:9;9507:30;9525:11;9507:30;:::i;:::-;9496:41;;9686:1;9677:7;9673:15;9670:1;9667:22;9647:1;9640:9;9620:83;9597:139;;9716:18;;:::i;:::-;9597:139;9381:362;9333:410;;;;:::o;9749:180::-;9797:77;9794:1;9787:88;9894:4;9891:1;9884:15;9918:4;9915:1;9908:15;9935:185;9975:1;9992:20;10010:1;9992:20;:::i;:::-;9987:25;;10026:20;10044:1;10026:20;:::i;:::-;10021:25;;10065:1;10055:35;;10070:18;;:::i;:::-;10055:35;10112:1;10109;10105:9;10100:14;;9935:185;;;;:::o;10126:191::-;10166:3;10185:20;10203:1;10185:20;:::i;:::-;10180:25;;10219:20;10237:1;10219:20;:::i;:::-;10214:25;;10262:1;10259;10255:9;10248:16;;10283:3;10280:1;10277:10;10274:36;;;10290:18;;:::i;:::-;10274:36;10126:191;;;;:::o;10323:118::-;10410:24;10428:5;10410:24;:::i;:::-;10405:3;10398:37;10323:118;;:::o;10447:442::-;10596:4;10634:2;10623:9;10619:18;10611:26;;10647:71;10715:1;10704:9;10700:17;10691:6;10647:71;:::i;:::-;10728:72;10796:2;10785:9;10781:18;10772:6;10728:72;:::i;:::-;10810;10878:2;10867:9;10863:18;10854:6;10810:72;:::i;:::-;10447:442;;;;;;:::o;10895:222::-;10988:4;11026:2;11015:9;11011:18;11003:26;;11039:71;11107:1;11096:9;11092:17;11083:6;11039:71;:::i;:::-;10895:222;;;;:::o;167:2858:6:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_approve_690": {
									"entryPoint": 2296,
									"id": 690,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_750": {
									"entryPoint": 2978,
									"id": 750,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_burn_672": {
									"entryPoint": 2622,
									"id": 672,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkOwner_84": {
									"entryPoint": 2314,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_mint_639": {
									"entryPoint": 2495,
									"id": 639,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_915": {
									"entryPoint": 2289,
									"id": 915,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_spendAllowance_798": {
									"entryPoint": 3441,
									"id": 798,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 2749,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transfer_529": {
									"entryPoint": 3587,
									"id": 529,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_606": {
									"entryPoint": 3827,
									"id": 606,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_426": {
									"entryPoint": 2027,
									"id": 426,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_450": {
									"entryPoint": 1149,
									"id": 450,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_385": {
									"entryPoint": 1534,
									"id": 385,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@burn_1176": {
									"entryPoint": 1476,
									"id": 1176,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@communityIncentives_951": {
									"entryPoint": 1497,
									"id": 951,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@decimals_363": {
									"entryPoint": 1409,
									"id": 363,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@investors_943": {
									"entryPoint": 1622,
									"id": 943,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@lockupExpiry_955": {
									"entryPoint": 1202,
									"id": 955,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@marketing_949": {
									"entryPoint": 1372,
									"id": 949,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@mint_1162": {
									"entryPoint": 1454,
									"id": 1162,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@name_345": {
									"entryPoint": 1005,
									"id": 345,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@owner_67": {
									"entryPoint": 1659,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@projectTeam_945": {
									"entryPoint": 1417,
									"id": 945,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@renounceOwnership_98": {
									"entryPoint": 1603,
									"id": 98,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@reserve_947": {
									"entryPoint": 1990,
									"id": 947,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@symbol_354": {
									"entryPoint": 1699,
									"id": 354,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_372": {
									"entryPoint": 1183,
									"id": 372,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_1147": {
									"entryPoint": 1223,
									"id": 1147,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transferFrom_482": {
									"entryPoint": 2449,
									"id": 482,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transferOwnership_126": {
									"entryPoint": 2157,
									"id": 126,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transfer_1117": {
									"entryPoint": 1843,
									"id": 1117,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@transfer_409": {
									"entryPoint": 2944,
									"id": 409,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@upgradeContract_1182": {
									"entryPoint": 1192,
									"id": 1182,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 4582,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 4633,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 4806,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 5064,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 4849,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 4653,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 5021,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 4929,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 4726,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4420,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_ef6b37cd0f982d2bb7242be4a25d6ba1cc9450d578c0a8ad1cd18136757f29cc_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5259,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 4766,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack": {
									"entryPoint": 4981,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 4944,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 5323,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 4741,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4476,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ef6b37cd0f982d2bb7242be4a25d6ba1cc9450d578c0a8ad1cd18136757f29cc__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5293,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 4781,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": 4996,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 4364,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 4374,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 5421,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 4543,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 4715,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 4512,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 4602,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 4969,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 4390,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 5171,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 5376,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 5126,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 4508,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 4404,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_ef6b37cd0f982d2bb7242be4a25d6ba1cc9450d578c0a8ad1cd18136757f29cc": {
									"entryPoint": 5219,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 4560,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 4611,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:8558:7",
										"nodeType": "YulBlock",
										"src": "0:8558:7",
										"statements": [
											{
												"body": {
													"nativeSrc": "66:40:7",
													"nodeType": "YulBlock",
													"src": "66:40:7",
													"statements": [
														{
															"nativeSrc": "77:22:7",
															"nodeType": "YulAssignment",
															"src": "77:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "93:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "93:5:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "87:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "87:5:7"
																},
																"nativeSrc": "87:12:7",
																"nodeType": "YulFunctionCall",
																"src": "87:12:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "77:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "77:6:7"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "7:99:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "49:5:7",
														"nodeType": "YulTypedName",
														"src": "49:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "59:6:7",
														"nodeType": "YulTypedName",
														"src": "59:6:7",
														"type": ""
													}
												],
												"src": "7:99:7"
											},
											{
												"body": {
													"nativeSrc": "208:73:7",
													"nodeType": "YulBlock",
													"src": "208:73:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "225:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "225:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "230:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "230:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "218:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "218:6:7"
																},
																"nativeSrc": "218:19:7",
																"nodeType": "YulFunctionCall",
																"src": "218:19:7"
															},
															"nativeSrc": "218:19:7",
															"nodeType": "YulExpressionStatement",
															"src": "218:19:7"
														},
														{
															"nativeSrc": "246:29:7",
															"nodeType": "YulAssignment",
															"src": "246:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "265:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "265:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "270:4:7",
																		"nodeType": "YulLiteral",
																		"src": "270:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "261:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "261:3:7"
																},
																"nativeSrc": "261:14:7",
																"nodeType": "YulFunctionCall",
																"src": "261:14:7"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "246:11:7",
																	"nodeType": "YulIdentifier",
																	"src": "246:11:7"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "112:169:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "180:3:7",
														"nodeType": "YulTypedName",
														"src": "180:3:7",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "185:6:7",
														"nodeType": "YulTypedName",
														"src": "185:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "196:11:7",
														"nodeType": "YulTypedName",
														"src": "196:11:7",
														"type": ""
													}
												],
												"src": "112:169:7"
											},
											{
												"body": {
													"nativeSrc": "349:77:7",
													"nodeType": "YulBlock",
													"src": "349:77:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "366:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "366:3:7"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "371:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "371:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "376:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "376:6:7"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "360:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "360:5:7"
																},
																"nativeSrc": "360:23:7",
																"nodeType": "YulFunctionCall",
																"src": "360:23:7"
															},
															"nativeSrc": "360:23:7",
															"nodeType": "YulExpressionStatement",
															"src": "360:23:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "403:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "403:3:7"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "408:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "408:6:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "399:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "399:3:7"
																		},
																		"nativeSrc": "399:16:7",
																		"nodeType": "YulFunctionCall",
																		"src": "399:16:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "417:1:7",
																		"nodeType": "YulLiteral",
																		"src": "417:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "392:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "392:6:7"
																},
																"nativeSrc": "392:27:7",
																"nodeType": "YulFunctionCall",
																"src": "392:27:7"
															},
															"nativeSrc": "392:27:7",
															"nodeType": "YulExpressionStatement",
															"src": "392:27:7"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "287:139:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "331:3:7",
														"nodeType": "YulTypedName",
														"src": "331:3:7",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "336:3:7",
														"nodeType": "YulTypedName",
														"src": "336:3:7",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "341:6:7",
														"nodeType": "YulTypedName",
														"src": "341:6:7",
														"type": ""
													}
												],
												"src": "287:139:7"
											},
											{
												"body": {
													"nativeSrc": "480:54:7",
													"nodeType": "YulBlock",
													"src": "480:54:7",
													"statements": [
														{
															"nativeSrc": "490:38:7",
															"nodeType": "YulAssignment",
															"src": "490:38:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "508:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "508:5:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "515:2:7",
																				"nodeType": "YulLiteral",
																				"src": "515:2:7",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "504:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "504:3:7"
																		},
																		"nativeSrc": "504:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "504:14:7"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "524:2:7",
																				"nodeType": "YulLiteral",
																				"src": "524:2:7",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "520:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "520:3:7"
																		},
																		"nativeSrc": "520:7:7",
																		"nodeType": "YulFunctionCall",
																		"src": "520:7:7"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "500:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "500:3:7"
																},
																"nativeSrc": "500:28:7",
																"nodeType": "YulFunctionCall",
																"src": "500:28:7"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "490:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "490:6:7"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "432:102:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "463:5:7",
														"nodeType": "YulTypedName",
														"src": "463:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "473:6:7",
														"nodeType": "YulTypedName",
														"src": "473:6:7",
														"type": ""
													}
												],
												"src": "432:102:7"
											},
											{
												"body": {
													"nativeSrc": "632:285:7",
													"nodeType": "YulBlock",
													"src": "632:285:7",
													"statements": [
														{
															"nativeSrc": "642:53:7",
															"nodeType": "YulVariableDeclaration",
															"src": "642:53:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "689:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "689:5:7"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "656:32:7",
																	"nodeType": "YulIdentifier",
																	"src": "656:32:7"
																},
																"nativeSrc": "656:39:7",
																"nodeType": "YulFunctionCall",
																"src": "656:39:7"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "646:6:7",
																	"nodeType": "YulTypedName",
																	"src": "646:6:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "704:78:7",
															"nodeType": "YulAssignment",
															"src": "704:78:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "770:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "770:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "775:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "775:6:7"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "711:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "711:58:7"
																},
																"nativeSrc": "711:71:7",
																"nodeType": "YulFunctionCall",
																"src": "711:71:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "704:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "704:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "830:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "830:5:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "837:4:7",
																				"nodeType": "YulLiteral",
																				"src": "837:4:7",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "826:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "826:3:7"
																		},
																		"nativeSrc": "826:16:7",
																		"nodeType": "YulFunctionCall",
																		"src": "826:16:7"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "844:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "844:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "849:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "849:6:7"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "791:34:7",
																	"nodeType": "YulIdentifier",
																	"src": "791:34:7"
																},
																"nativeSrc": "791:65:7",
																"nodeType": "YulFunctionCall",
																"src": "791:65:7"
															},
															"nativeSrc": "791:65:7",
															"nodeType": "YulExpressionStatement",
															"src": "791:65:7"
														},
														{
															"nativeSrc": "865:46:7",
															"nodeType": "YulAssignment",
															"src": "865:46:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "876:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "876:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "903:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "903:6:7"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "881:21:7",
																			"nodeType": "YulIdentifier",
																			"src": "881:21:7"
																		},
																		"nativeSrc": "881:29:7",
																		"nodeType": "YulFunctionCall",
																		"src": "881:29:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "872:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "872:3:7"
																},
																"nativeSrc": "872:39:7",
																"nodeType": "YulFunctionCall",
																"src": "872:39:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "865:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "865:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "540:377:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "613:5:7",
														"nodeType": "YulTypedName",
														"src": "613:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "620:3:7",
														"nodeType": "YulTypedName",
														"src": "620:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "628:3:7",
														"nodeType": "YulTypedName",
														"src": "628:3:7",
														"type": ""
													}
												],
												"src": "540:377:7"
											},
											{
												"body": {
													"nativeSrc": "1041:195:7",
													"nodeType": "YulBlock",
													"src": "1041:195:7",
													"statements": [
														{
															"nativeSrc": "1051:26:7",
															"nodeType": "YulAssignment",
															"src": "1051:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1063:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "1063:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1074:2:7",
																		"nodeType": "YulLiteral",
																		"src": "1074:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1059:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1059:3:7"
																},
																"nativeSrc": "1059:18:7",
																"nodeType": "YulFunctionCall",
																"src": "1059:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1051:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "1051:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1098:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "1098:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1109:1:7",
																				"nodeType": "YulLiteral",
																				"src": "1109:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1094:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1094:3:7"
																		},
																		"nativeSrc": "1094:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1094:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "1117:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "1117:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1123:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "1123:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1113:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1113:3:7"
																		},
																		"nativeSrc": "1113:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1113:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1087:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1087:6:7"
																},
																"nativeSrc": "1087:47:7",
																"nodeType": "YulFunctionCall",
																"src": "1087:47:7"
															},
															"nativeSrc": "1087:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "1087:47:7"
														},
														{
															"nativeSrc": "1143:86:7",
															"nodeType": "YulAssignment",
															"src": "1143:86:7",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1215:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "1215:6:7"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "1224:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "1224:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "1151:63:7",
																	"nodeType": "YulIdentifier",
																	"src": "1151:63:7"
																},
																"nativeSrc": "1151:78:7",
																"nodeType": "YulFunctionCall",
																"src": "1151:78:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1143:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "1143:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "923:313:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1013:9:7",
														"nodeType": "YulTypedName",
														"src": "1013:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1025:6:7",
														"nodeType": "YulTypedName",
														"src": "1025:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1036:4:7",
														"nodeType": "YulTypedName",
														"src": "1036:4:7",
														"type": ""
													}
												],
												"src": "923:313:7"
											},
											{
												"body": {
													"nativeSrc": "1282:35:7",
													"nodeType": "YulBlock",
													"src": "1282:35:7",
													"statements": [
														{
															"nativeSrc": "1292:19:7",
															"nodeType": "YulAssignment",
															"src": "1292:19:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1308:2:7",
																		"nodeType": "YulLiteral",
																		"src": "1308:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1302:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "1302:5:7"
																},
																"nativeSrc": "1302:9:7",
																"nodeType": "YulFunctionCall",
																"src": "1302:9:7"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1292:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1292:6:7"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "1242:75:7",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1275:6:7",
														"nodeType": "YulTypedName",
														"src": "1275:6:7",
														"type": ""
													}
												],
												"src": "1242:75:7"
											},
											{
												"body": {
													"nativeSrc": "1412:28:7",
													"nodeType": "YulBlock",
													"src": "1412:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1429:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1429:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1432:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1432:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1422:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1422:6:7"
																},
																"nativeSrc": "1422:12:7",
																"nodeType": "YulFunctionCall",
																"src": "1422:12:7"
															},
															"nativeSrc": "1422:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "1422:12:7"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "1323:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "1323:117:7"
											},
											{
												"body": {
													"nativeSrc": "1535:28:7",
													"nodeType": "YulBlock",
													"src": "1535:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1552:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1552:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1555:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1555:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1545:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1545:6:7"
																},
																"nativeSrc": "1545:12:7",
																"nodeType": "YulFunctionCall",
																"src": "1545:12:7"
															},
															"nativeSrc": "1545:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "1545:12:7"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "1446:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "1446:117:7"
											},
											{
												"body": {
													"nativeSrc": "1614:81:7",
													"nodeType": "YulBlock",
													"src": "1614:81:7",
													"statements": [
														{
															"nativeSrc": "1624:65:7",
															"nodeType": "YulAssignment",
															"src": "1624:65:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1639:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "1639:5:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1646:42:7",
																		"nodeType": "YulLiteral",
																		"src": "1646:42:7",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1635:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1635:3:7"
																},
																"nativeSrc": "1635:54:7",
																"nodeType": "YulFunctionCall",
																"src": "1635:54:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1624:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "1624:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "1569:126:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1596:5:7",
														"nodeType": "YulTypedName",
														"src": "1596:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1606:7:7",
														"nodeType": "YulTypedName",
														"src": "1606:7:7",
														"type": ""
													}
												],
												"src": "1569:126:7"
											},
											{
												"body": {
													"nativeSrc": "1746:51:7",
													"nodeType": "YulBlock",
													"src": "1746:51:7",
													"statements": [
														{
															"nativeSrc": "1756:35:7",
															"nodeType": "YulAssignment",
															"src": "1756:35:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1785:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "1785:5:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "1767:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "1767:17:7"
																},
																"nativeSrc": "1767:24:7",
																"nodeType": "YulFunctionCall",
																"src": "1767:24:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1756:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "1756:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "1701:96:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1728:5:7",
														"nodeType": "YulTypedName",
														"src": "1728:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1738:7:7",
														"nodeType": "YulTypedName",
														"src": "1738:7:7",
														"type": ""
													}
												],
												"src": "1701:96:7"
											},
											{
												"body": {
													"nativeSrc": "1846:79:7",
													"nodeType": "YulBlock",
													"src": "1846:79:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "1903:16:7",
																"nodeType": "YulBlock",
																"src": "1903:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1912:1:7",
																					"nodeType": "YulLiteral",
																					"src": "1912:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1915:1:7",
																					"nodeType": "YulLiteral",
																					"src": "1915:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1905:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "1905:6:7"
																			},
																			"nativeSrc": "1905:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "1905:12:7"
																		},
																		"nativeSrc": "1905:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "1905:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1869:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "1869:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1894:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "1894:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "1876:17:7",
																					"nodeType": "YulIdentifier",
																					"src": "1876:17:7"
																				},
																				"nativeSrc": "1876:24:7",
																				"nodeType": "YulFunctionCall",
																				"src": "1876:24:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1866:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "1866:2:7"
																		},
																		"nativeSrc": "1866:35:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1866:35:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1859:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1859:6:7"
																},
																"nativeSrc": "1859:43:7",
																"nodeType": "YulFunctionCall",
																"src": "1859:43:7"
															},
															"nativeSrc": "1856:63:7",
															"nodeType": "YulIf",
															"src": "1856:63:7"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "1803:122:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1839:5:7",
														"nodeType": "YulTypedName",
														"src": "1839:5:7",
														"type": ""
													}
												],
												"src": "1803:122:7"
											},
											{
												"body": {
													"nativeSrc": "1983:87:7",
													"nodeType": "YulBlock",
													"src": "1983:87:7",
													"statements": [
														{
															"nativeSrc": "1993:29:7",
															"nodeType": "YulAssignment",
															"src": "1993:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2015:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "2015:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2002:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "2002:12:7"
																},
																"nativeSrc": "2002:20:7",
																"nodeType": "YulFunctionCall",
																"src": "2002:20:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1993:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "1993:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2058:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "2058:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "2031:26:7",
																	"nodeType": "YulIdentifier",
																	"src": "2031:26:7"
																},
																"nativeSrc": "2031:33:7",
																"nodeType": "YulFunctionCall",
																"src": "2031:33:7"
															},
															"nativeSrc": "2031:33:7",
															"nodeType": "YulExpressionStatement",
															"src": "2031:33:7"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "1931:139:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1961:6:7",
														"nodeType": "YulTypedName",
														"src": "1961:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1969:3:7",
														"nodeType": "YulTypedName",
														"src": "1969:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1977:5:7",
														"nodeType": "YulTypedName",
														"src": "1977:5:7",
														"type": ""
													}
												],
												"src": "1931:139:7"
											},
											{
												"body": {
													"nativeSrc": "2121:32:7",
													"nodeType": "YulBlock",
													"src": "2121:32:7",
													"statements": [
														{
															"nativeSrc": "2131:16:7",
															"nodeType": "YulAssignment",
															"src": "2131:16:7",
															"value": {
																"name": "value",
																"nativeSrc": "2142:5:7",
																"nodeType": "YulIdentifier",
																"src": "2142:5:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2131:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "2131:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "2076:77:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2103:5:7",
														"nodeType": "YulTypedName",
														"src": "2103:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2113:7:7",
														"nodeType": "YulTypedName",
														"src": "2113:7:7",
														"type": ""
													}
												],
												"src": "2076:77:7"
											},
											{
												"body": {
													"nativeSrc": "2202:79:7",
													"nodeType": "YulBlock",
													"src": "2202:79:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "2259:16:7",
																"nodeType": "YulBlock",
																"src": "2259:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2268:1:7",
																					"nodeType": "YulLiteral",
																					"src": "2268:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2271:1:7",
																					"nodeType": "YulLiteral",
																					"src": "2271:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2261:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "2261:6:7"
																			},
																			"nativeSrc": "2261:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2261:12:7"
																		},
																		"nativeSrc": "2261:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "2261:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2225:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "2225:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2250:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "2250:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "2232:17:7",
																					"nodeType": "YulIdentifier",
																					"src": "2232:17:7"
																				},
																				"nativeSrc": "2232:24:7",
																				"nodeType": "YulFunctionCall",
																				"src": "2232:24:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2222:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "2222:2:7"
																		},
																		"nativeSrc": "2222:35:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2222:35:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2215:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2215:6:7"
																},
																"nativeSrc": "2215:43:7",
																"nodeType": "YulFunctionCall",
																"src": "2215:43:7"
															},
															"nativeSrc": "2212:63:7",
															"nodeType": "YulIf",
															"src": "2212:63:7"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "2159:122:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2195:5:7",
														"nodeType": "YulTypedName",
														"src": "2195:5:7",
														"type": ""
													}
												],
												"src": "2159:122:7"
											},
											{
												"body": {
													"nativeSrc": "2339:87:7",
													"nodeType": "YulBlock",
													"src": "2339:87:7",
													"statements": [
														{
															"nativeSrc": "2349:29:7",
															"nodeType": "YulAssignment",
															"src": "2349:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2371:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "2371:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2358:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "2358:12:7"
																},
																"nativeSrc": "2358:20:7",
																"nodeType": "YulFunctionCall",
																"src": "2358:20:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2349:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "2349:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2414:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "2414:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "2387:26:7",
																	"nodeType": "YulIdentifier",
																	"src": "2387:26:7"
																},
																"nativeSrc": "2387:33:7",
																"nodeType": "YulFunctionCall",
																"src": "2387:33:7"
															},
															"nativeSrc": "2387:33:7",
															"nodeType": "YulExpressionStatement",
															"src": "2387:33:7"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "2287:139:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2317:6:7",
														"nodeType": "YulTypedName",
														"src": "2317:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2325:3:7",
														"nodeType": "YulTypedName",
														"src": "2325:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2333:5:7",
														"nodeType": "YulTypedName",
														"src": "2333:5:7",
														"type": ""
													}
												],
												"src": "2287:139:7"
											},
											{
												"body": {
													"nativeSrc": "2515:391:7",
													"nodeType": "YulBlock",
													"src": "2515:391:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "2561:83:7",
																"nodeType": "YulBlock",
																"src": "2561:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2563:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "2563:77:7"
																			},
																			"nativeSrc": "2563:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2563:79:7"
																		},
																		"nativeSrc": "2563:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "2563:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2536:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "2536:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2545:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "2545:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2532:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2532:3:7"
																		},
																		"nativeSrc": "2532:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2532:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2557:2:7",
																		"nodeType": "YulLiteral",
																		"src": "2557:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2528:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2528:3:7"
																},
																"nativeSrc": "2528:32:7",
																"nodeType": "YulFunctionCall",
																"src": "2528:32:7"
															},
															"nativeSrc": "2525:119:7",
															"nodeType": "YulIf",
															"src": "2525:119:7"
														},
														{
															"nativeSrc": "2654:117:7",
															"nodeType": "YulBlock",
															"src": "2654:117:7",
															"statements": [
																{
																	"nativeSrc": "2669:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2669:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2683:1:7",
																		"nodeType": "YulLiteral",
																		"src": "2683:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2673:6:7",
																			"nodeType": "YulTypedName",
																			"src": "2673:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2698:63:7",
																	"nodeType": "YulAssignment",
																	"src": "2698:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2733:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "2733:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2744:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "2744:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2729:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "2729:3:7"
																				},
																				"nativeSrc": "2729:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "2729:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2753:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "2753:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "2708:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "2708:20:7"
																		},
																		"nativeSrc": "2708:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2708:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2698:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "2698:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2781:118:7",
															"nodeType": "YulBlock",
															"src": "2781:118:7",
															"statements": [
																{
																	"nativeSrc": "2796:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2796:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2810:2:7",
																		"nodeType": "YulLiteral",
																		"src": "2810:2:7",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2800:6:7",
																			"nodeType": "YulTypedName",
																			"src": "2800:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2826:63:7",
																	"nodeType": "YulAssignment",
																	"src": "2826:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2861:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "2861:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2872:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "2872:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2857:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "2857:3:7"
																				},
																				"nativeSrc": "2857:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "2857:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2881:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "2881:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "2836:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "2836:20:7"
																		},
																		"nativeSrc": "2836:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2836:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "2826:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "2826:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "2432:474:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2477:9:7",
														"nodeType": "YulTypedName",
														"src": "2477:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2488:7:7",
														"nodeType": "YulTypedName",
														"src": "2488:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2500:6:7",
														"nodeType": "YulTypedName",
														"src": "2500:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2508:6:7",
														"nodeType": "YulTypedName",
														"src": "2508:6:7",
														"type": ""
													}
												],
												"src": "2432:474:7"
											},
											{
												"body": {
													"nativeSrc": "2954:48:7",
													"nodeType": "YulBlock",
													"src": "2954:48:7",
													"statements": [
														{
															"nativeSrc": "2964:32:7",
															"nodeType": "YulAssignment",
															"src": "2964:32:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2989:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "2989:5:7"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "2982:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "2982:6:7"
																		},
																		"nativeSrc": "2982:13:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2982:13:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2975:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2975:6:7"
																},
																"nativeSrc": "2975:21:7",
																"nodeType": "YulFunctionCall",
																"src": "2975:21:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2964:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "2964:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "2912:90:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2936:5:7",
														"nodeType": "YulTypedName",
														"src": "2936:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2946:7:7",
														"nodeType": "YulTypedName",
														"src": "2946:7:7",
														"type": ""
													}
												],
												"src": "2912:90:7"
											},
											{
												"body": {
													"nativeSrc": "3067:50:7",
													"nodeType": "YulBlock",
													"src": "3067:50:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3084:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "3084:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3104:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "3104:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "3089:14:7",
																			"nodeType": "YulIdentifier",
																			"src": "3089:14:7"
																		},
																		"nativeSrc": "3089:21:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3089:21:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3077:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3077:6:7"
																},
																"nativeSrc": "3077:34:7",
																"nodeType": "YulFunctionCall",
																"src": "3077:34:7"
															},
															"nativeSrc": "3077:34:7",
															"nodeType": "YulExpressionStatement",
															"src": "3077:34:7"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "3008:109:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3055:5:7",
														"nodeType": "YulTypedName",
														"src": "3055:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3062:3:7",
														"nodeType": "YulTypedName",
														"src": "3062:3:7",
														"type": ""
													}
												],
												"src": "3008:109:7"
											},
											{
												"body": {
													"nativeSrc": "3215:118:7",
													"nodeType": "YulBlock",
													"src": "3215:118:7",
													"statements": [
														{
															"nativeSrc": "3225:26:7",
															"nodeType": "YulAssignment",
															"src": "3225:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3237:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "3237:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3248:2:7",
																		"nodeType": "YulLiteral",
																		"src": "3248:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3233:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3233:3:7"
																},
																"nativeSrc": "3233:18:7",
																"nodeType": "YulFunctionCall",
																"src": "3233:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3225:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "3225:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3299:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "3299:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3312:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "3312:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3323:1:7",
																				"nodeType": "YulLiteral",
																				"src": "3323:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3308:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3308:3:7"
																		},
																		"nativeSrc": "3308:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3308:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "3261:37:7",
																	"nodeType": "YulIdentifier",
																	"src": "3261:37:7"
																},
																"nativeSrc": "3261:65:7",
																"nodeType": "YulFunctionCall",
																"src": "3261:65:7"
															},
															"nativeSrc": "3261:65:7",
															"nodeType": "YulExpressionStatement",
															"src": "3261:65:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "3123:210:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3187:9:7",
														"nodeType": "YulTypedName",
														"src": "3187:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3199:6:7",
														"nodeType": "YulTypedName",
														"src": "3199:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3210:4:7",
														"nodeType": "YulTypedName",
														"src": "3210:4:7",
														"type": ""
													}
												],
												"src": "3123:210:7"
											},
											{
												"body": {
													"nativeSrc": "3404:53:7",
													"nodeType": "YulBlock",
													"src": "3404:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3421:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "3421:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3444:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "3444:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "3426:17:7",
																			"nodeType": "YulIdentifier",
																			"src": "3426:17:7"
																		},
																		"nativeSrc": "3426:24:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3426:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3414:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3414:6:7"
																},
																"nativeSrc": "3414:37:7",
																"nodeType": "YulFunctionCall",
																"src": "3414:37:7"
															},
															"nativeSrc": "3414:37:7",
															"nodeType": "YulExpressionStatement",
															"src": "3414:37:7"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "3339:118:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3392:5:7",
														"nodeType": "YulTypedName",
														"src": "3392:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3399:3:7",
														"nodeType": "YulTypedName",
														"src": "3399:3:7",
														"type": ""
													}
												],
												"src": "3339:118:7"
											},
											{
												"body": {
													"nativeSrc": "3561:124:7",
													"nodeType": "YulBlock",
													"src": "3561:124:7",
													"statements": [
														{
															"nativeSrc": "3571:26:7",
															"nodeType": "YulAssignment",
															"src": "3571:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3583:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "3583:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3594:2:7",
																		"nodeType": "YulLiteral",
																		"src": "3594:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3579:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3579:3:7"
																},
																"nativeSrc": "3579:18:7",
																"nodeType": "YulFunctionCall",
																"src": "3579:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3571:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "3571:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3651:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "3651:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3664:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "3664:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3675:1:7",
																				"nodeType": "YulLiteral",
																				"src": "3675:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3660:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3660:3:7"
																		},
																		"nativeSrc": "3660:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3660:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "3607:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "3607:43:7"
																},
																"nativeSrc": "3607:71:7",
																"nodeType": "YulFunctionCall",
																"src": "3607:71:7"
															},
															"nativeSrc": "3607:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "3607:71:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "3463:222:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3533:9:7",
														"nodeType": "YulTypedName",
														"src": "3533:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3545:6:7",
														"nodeType": "YulTypedName",
														"src": "3545:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3556:4:7",
														"nodeType": "YulTypedName",
														"src": "3556:4:7",
														"type": ""
													}
												],
												"src": "3463:222:7"
											},
											{
												"body": {
													"nativeSrc": "3757:263:7",
													"nodeType": "YulBlock",
													"src": "3757:263:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "3803:83:7",
																"nodeType": "YulBlock",
																"src": "3803:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3805:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "3805:77:7"
																			},
																			"nativeSrc": "3805:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "3805:79:7"
																		},
																		"nativeSrc": "3805:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "3805:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3778:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "3778:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3787:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "3787:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3774:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3774:3:7"
																		},
																		"nativeSrc": "3774:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3774:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3799:2:7",
																		"nodeType": "YulLiteral",
																		"src": "3799:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3770:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3770:3:7"
																},
																"nativeSrc": "3770:32:7",
																"nodeType": "YulFunctionCall",
																"src": "3770:32:7"
															},
															"nativeSrc": "3767:119:7",
															"nodeType": "YulIf",
															"src": "3767:119:7"
														},
														{
															"nativeSrc": "3896:117:7",
															"nodeType": "YulBlock",
															"src": "3896:117:7",
															"statements": [
																{
																	"nativeSrc": "3911:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3911:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3925:1:7",
																		"nodeType": "YulLiteral",
																		"src": "3925:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3915:6:7",
																			"nodeType": "YulTypedName",
																			"src": "3915:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3940:63:7",
																	"nodeType": "YulAssignment",
																	"src": "3940:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3975:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "3975:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3986:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "3986:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3971:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "3971:3:7"
																				},
																				"nativeSrc": "3971:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "3971:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3995:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "3995:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "3950:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "3950:20:7"
																		},
																		"nativeSrc": "3950:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3950:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3940:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "3940:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "3691:329:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3727:9:7",
														"nodeType": "YulTypedName",
														"src": "3727:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3738:7:7",
														"nodeType": "YulTypedName",
														"src": "3738:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3750:6:7",
														"nodeType": "YulTypedName",
														"src": "3750:6:7",
														"type": ""
													}
												],
												"src": "3691:329:7"
											},
											{
												"body": {
													"nativeSrc": "4126:519:7",
													"nodeType": "YulBlock",
													"src": "4126:519:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "4172:83:7",
																"nodeType": "YulBlock",
																"src": "4172:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4174:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "4174:77:7"
																			},
																			"nativeSrc": "4174:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "4174:79:7"
																		},
																		"nativeSrc": "4174:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "4174:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4147:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "4147:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4156:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "4156:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4143:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "4143:3:7"
																		},
																		"nativeSrc": "4143:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4143:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4168:2:7",
																		"nodeType": "YulLiteral",
																		"src": "4168:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4139:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4139:3:7"
																},
																"nativeSrc": "4139:32:7",
																"nodeType": "YulFunctionCall",
																"src": "4139:32:7"
															},
															"nativeSrc": "4136:119:7",
															"nodeType": "YulIf",
															"src": "4136:119:7"
														},
														{
															"nativeSrc": "4265:117:7",
															"nodeType": "YulBlock",
															"src": "4265:117:7",
															"statements": [
																{
																	"nativeSrc": "4280:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4280:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4294:1:7",
																		"nodeType": "YulLiteral",
																		"src": "4294:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4284:6:7",
																			"nodeType": "YulTypedName",
																			"src": "4284:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4309:63:7",
																	"nodeType": "YulAssignment",
																	"src": "4309:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4344:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "4344:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4355:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "4355:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4340:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "4340:3:7"
																				},
																				"nativeSrc": "4340:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "4340:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4364:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "4364:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4319:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "4319:20:7"
																		},
																		"nativeSrc": "4319:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4319:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4309:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "4309:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4392:118:7",
															"nodeType": "YulBlock",
															"src": "4392:118:7",
															"statements": [
																{
																	"nativeSrc": "4407:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4407:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4421:2:7",
																		"nodeType": "YulLiteral",
																		"src": "4421:2:7",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4411:6:7",
																			"nodeType": "YulTypedName",
																			"src": "4411:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4437:63:7",
																	"nodeType": "YulAssignment",
																	"src": "4437:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4472:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "4472:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4483:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "4483:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4468:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "4468:3:7"
																				},
																				"nativeSrc": "4468:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "4468:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4492:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "4492:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4447:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "4447:20:7"
																		},
																		"nativeSrc": "4447:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4447:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4437:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "4437:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4520:118:7",
															"nodeType": "YulBlock",
															"src": "4520:118:7",
															"statements": [
																{
																	"nativeSrc": "4535:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4535:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4549:2:7",
																		"nodeType": "YulLiteral",
																		"src": "4549:2:7",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4539:6:7",
																			"nodeType": "YulTypedName",
																			"src": "4539:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4565:63:7",
																	"nodeType": "YulAssignment",
																	"src": "4565:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4600:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "4600:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4611:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "4611:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4596:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "4596:3:7"
																				},
																				"nativeSrc": "4596:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "4596:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4620:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "4620:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4575:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "4575:20:7"
																		},
																		"nativeSrc": "4575:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4575:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "4565:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "4565:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "4026:619:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4080:9:7",
														"nodeType": "YulTypedName",
														"src": "4080:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4091:7:7",
														"nodeType": "YulTypedName",
														"src": "4091:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4103:6:7",
														"nodeType": "YulTypedName",
														"src": "4103:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4111:6:7",
														"nodeType": "YulTypedName",
														"src": "4111:6:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "4119:6:7",
														"nodeType": "YulTypedName",
														"src": "4119:6:7",
														"type": ""
													}
												],
												"src": "4026:619:7"
											},
											{
												"body": {
													"nativeSrc": "4716:53:7",
													"nodeType": "YulBlock",
													"src": "4716:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4733:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "4733:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4756:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "4756:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "4738:17:7",
																			"nodeType": "YulIdentifier",
																			"src": "4738:17:7"
																		},
																		"nativeSrc": "4738:24:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4738:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4726:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4726:6:7"
																},
																"nativeSrc": "4726:37:7",
																"nodeType": "YulFunctionCall",
																"src": "4726:37:7"
															},
															"nativeSrc": "4726:37:7",
															"nodeType": "YulExpressionStatement",
															"src": "4726:37:7"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "4651:118:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4704:5:7",
														"nodeType": "YulTypedName",
														"src": "4704:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4711:3:7",
														"nodeType": "YulTypedName",
														"src": "4711:3:7",
														"type": ""
													}
												],
												"src": "4651:118:7"
											},
											{
												"body": {
													"nativeSrc": "4873:124:7",
													"nodeType": "YulBlock",
													"src": "4873:124:7",
													"statements": [
														{
															"nativeSrc": "4883:26:7",
															"nodeType": "YulAssignment",
															"src": "4883:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4895:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "4895:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4906:2:7",
																		"nodeType": "YulLiteral",
																		"src": "4906:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4891:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4891:3:7"
																},
																"nativeSrc": "4891:18:7",
																"nodeType": "YulFunctionCall",
																"src": "4891:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4883:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "4883:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4963:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "4963:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4976:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "4976:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4987:1:7",
																				"nodeType": "YulLiteral",
																				"src": "4987:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4972:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "4972:3:7"
																		},
																		"nativeSrc": "4972:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4972:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "4919:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "4919:43:7"
																},
																"nativeSrc": "4919:71:7",
																"nodeType": "YulFunctionCall",
																"src": "4919:71:7"
															},
															"nativeSrc": "4919:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "4919:71:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "4775:222:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4845:9:7",
														"nodeType": "YulTypedName",
														"src": "4845:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4857:6:7",
														"nodeType": "YulTypedName",
														"src": "4857:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4868:4:7",
														"nodeType": "YulTypedName",
														"src": "4868:4:7",
														"type": ""
													}
												],
												"src": "4775:222:7"
											},
											{
												"body": {
													"nativeSrc": "5046:43:7",
													"nodeType": "YulBlock",
													"src": "5046:43:7",
													"statements": [
														{
															"nativeSrc": "5056:27:7",
															"nodeType": "YulAssignment",
															"src": "5056:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5071:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "5071:5:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5078:4:7",
																		"nodeType": "YulLiteral",
																		"src": "5078:4:7",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "5067:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5067:3:7"
																},
																"nativeSrc": "5067:16:7",
																"nodeType": "YulFunctionCall",
																"src": "5067:16:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "5056:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "5056:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nativeSrc": "5003:86:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5028:5:7",
														"nodeType": "YulTypedName",
														"src": "5028:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "5038:7:7",
														"nodeType": "YulTypedName",
														"src": "5038:7:7",
														"type": ""
													}
												],
												"src": "5003:86:7"
											},
											{
												"body": {
													"nativeSrc": "5156:51:7",
													"nodeType": "YulBlock",
													"src": "5156:51:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5173:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "5173:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5194:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "5194:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nativeSrc": "5178:15:7",
																			"nodeType": "YulIdentifier",
																			"src": "5178:15:7"
																		},
																		"nativeSrc": "5178:22:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5178:22:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5166:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5166:6:7"
																},
																"nativeSrc": "5166:35:7",
																"nodeType": "YulFunctionCall",
																"src": "5166:35:7"
															},
															"nativeSrc": "5166:35:7",
															"nodeType": "YulExpressionStatement",
															"src": "5166:35:7"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nativeSrc": "5095:112:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5144:5:7",
														"nodeType": "YulTypedName",
														"src": "5144:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5151:3:7",
														"nodeType": "YulTypedName",
														"src": "5151:3:7",
														"type": ""
													}
												],
												"src": "5095:112:7"
											},
											{
												"body": {
													"nativeSrc": "5307:120:7",
													"nodeType": "YulBlock",
													"src": "5307:120:7",
													"statements": [
														{
															"nativeSrc": "5317:26:7",
															"nodeType": "YulAssignment",
															"src": "5317:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5329:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "5329:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5340:2:7",
																		"nodeType": "YulLiteral",
																		"src": "5340:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5325:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5325:3:7"
																},
																"nativeSrc": "5325:18:7",
																"nodeType": "YulFunctionCall",
																"src": "5325:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5317:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "5317:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5393:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "5393:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5406:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "5406:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5417:1:7",
																				"nodeType": "YulLiteral",
																				"src": "5417:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5402:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5402:3:7"
																		},
																		"nativeSrc": "5402:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5402:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nativeSrc": "5353:39:7",
																	"nodeType": "YulIdentifier",
																	"src": "5353:39:7"
																},
																"nativeSrc": "5353:67:7",
																"nodeType": "YulFunctionCall",
																"src": "5353:67:7"
															},
															"nativeSrc": "5353:67:7",
															"nodeType": "YulExpressionStatement",
															"src": "5353:67:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "5213:214:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5279:9:7",
														"nodeType": "YulTypedName",
														"src": "5279:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5291:6:7",
														"nodeType": "YulTypedName",
														"src": "5291:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5302:4:7",
														"nodeType": "YulTypedName",
														"src": "5302:4:7",
														"type": ""
													}
												],
												"src": "5213:214:7"
											},
											{
												"body": {
													"nativeSrc": "5499:263:7",
													"nodeType": "YulBlock",
													"src": "5499:263:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "5545:83:7",
																"nodeType": "YulBlock",
																"src": "5545:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5547:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "5547:77:7"
																			},
																			"nativeSrc": "5547:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "5547:79:7"
																		},
																		"nativeSrc": "5547:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "5547:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5520:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "5520:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5529:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "5529:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5516:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5516:3:7"
																		},
																		"nativeSrc": "5516:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5516:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5541:2:7",
																		"nodeType": "YulLiteral",
																		"src": "5541:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5512:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5512:3:7"
																},
																"nativeSrc": "5512:32:7",
																"nodeType": "YulFunctionCall",
																"src": "5512:32:7"
															},
															"nativeSrc": "5509:119:7",
															"nodeType": "YulIf",
															"src": "5509:119:7"
														},
														{
															"nativeSrc": "5638:117:7",
															"nodeType": "YulBlock",
															"src": "5638:117:7",
															"statements": [
																{
																	"nativeSrc": "5653:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5653:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5667:1:7",
																		"nodeType": "YulLiteral",
																		"src": "5667:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5657:6:7",
																			"nodeType": "YulTypedName",
																			"src": "5657:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5682:63:7",
																	"nodeType": "YulAssignment",
																	"src": "5682:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5717:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "5717:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5728:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "5728:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5713:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "5713:3:7"
																				},
																				"nativeSrc": "5713:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "5713:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5737:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "5737:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "5692:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "5692:20:7"
																		},
																		"nativeSrc": "5692:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5692:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5682:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "5682:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "5433:329:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5469:9:7",
														"nodeType": "YulTypedName",
														"src": "5469:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5480:7:7",
														"nodeType": "YulTypedName",
														"src": "5480:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5492:6:7",
														"nodeType": "YulTypedName",
														"src": "5492:6:7",
														"type": ""
													}
												],
												"src": "5433:329:7"
											},
											{
												"body": {
													"nativeSrc": "5851:391:7",
													"nodeType": "YulBlock",
													"src": "5851:391:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "5897:83:7",
																"nodeType": "YulBlock",
																"src": "5897:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5899:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "5899:77:7"
																			},
																			"nativeSrc": "5899:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "5899:79:7"
																		},
																		"nativeSrc": "5899:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "5899:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5872:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "5872:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5881:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "5881:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5868:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5868:3:7"
																		},
																		"nativeSrc": "5868:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5868:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5893:2:7",
																		"nodeType": "YulLiteral",
																		"src": "5893:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5864:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5864:3:7"
																},
																"nativeSrc": "5864:32:7",
																"nodeType": "YulFunctionCall",
																"src": "5864:32:7"
															},
															"nativeSrc": "5861:119:7",
															"nodeType": "YulIf",
															"src": "5861:119:7"
														},
														{
															"nativeSrc": "5990:117:7",
															"nodeType": "YulBlock",
															"src": "5990:117:7",
															"statements": [
																{
																	"nativeSrc": "6005:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6005:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6019:1:7",
																		"nodeType": "YulLiteral",
																		"src": "6019:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6009:6:7",
																			"nodeType": "YulTypedName",
																			"src": "6009:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6034:63:7",
																	"nodeType": "YulAssignment",
																	"src": "6034:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6069:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "6069:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6080:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "6080:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6065:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "6065:3:7"
																				},
																				"nativeSrc": "6065:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "6065:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6089:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "6089:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "6044:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "6044:20:7"
																		},
																		"nativeSrc": "6044:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6044:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "6034:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "6034:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "6117:118:7",
															"nodeType": "YulBlock",
															"src": "6117:118:7",
															"statements": [
																{
																	"nativeSrc": "6132:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6132:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6146:2:7",
																		"nodeType": "YulLiteral",
																		"src": "6146:2:7",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6136:6:7",
																			"nodeType": "YulTypedName",
																			"src": "6136:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6162:63:7",
																	"nodeType": "YulAssignment",
																	"src": "6162:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6197:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "6197:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6208:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "6208:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6193:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "6193:3:7"
																				},
																				"nativeSrc": "6193:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "6193:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6217:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "6217:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "6172:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "6172:20:7"
																		},
																		"nativeSrc": "6172:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6172:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "6162:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "6162:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "5768:474:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5813:9:7",
														"nodeType": "YulTypedName",
														"src": "5813:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5824:7:7",
														"nodeType": "YulTypedName",
														"src": "5824:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5836:6:7",
														"nodeType": "YulTypedName",
														"src": "5836:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5844:6:7",
														"nodeType": "YulTypedName",
														"src": "5844:6:7",
														"type": ""
													}
												],
												"src": "5768:474:7"
											},
											{
												"body": {
													"nativeSrc": "6276:152:7",
													"nodeType": "YulBlock",
													"src": "6276:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6293:1:7",
																		"nodeType": "YulLiteral",
																		"src": "6293:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6296:77:7",
																		"nodeType": "YulLiteral",
																		"src": "6296:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6286:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6286:6:7"
																},
																"nativeSrc": "6286:88:7",
																"nodeType": "YulFunctionCall",
																"src": "6286:88:7"
															},
															"nativeSrc": "6286:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "6286:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6390:1:7",
																		"nodeType": "YulLiteral",
																		"src": "6390:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6393:4:7",
																		"nodeType": "YulLiteral",
																		"src": "6393:4:7",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6383:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6383:6:7"
																},
																"nativeSrc": "6383:15:7",
																"nodeType": "YulFunctionCall",
																"src": "6383:15:7"
															},
															"nativeSrc": "6383:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "6383:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6414:1:7",
																		"nodeType": "YulLiteral",
																		"src": "6414:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6417:4:7",
																		"nodeType": "YulLiteral",
																		"src": "6417:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "6407:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6407:6:7"
																},
																"nativeSrc": "6407:15:7",
																"nodeType": "YulFunctionCall",
																"src": "6407:15:7"
															},
															"nativeSrc": "6407:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "6407:15:7"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "6248:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "6248:180:7"
											},
											{
												"body": {
													"nativeSrc": "6485:269:7",
													"nodeType": "YulBlock",
													"src": "6485:269:7",
													"statements": [
														{
															"nativeSrc": "6495:22:7",
															"nodeType": "YulAssignment",
															"src": "6495:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "6509:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "6509:4:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6515:1:7",
																		"nodeType": "YulLiteral",
																		"src": "6515:1:7",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "6505:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "6505:3:7"
																},
																"nativeSrc": "6505:12:7",
																"nodeType": "YulFunctionCall",
																"src": "6505:12:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "6495:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6495:6:7"
																}
															]
														},
														{
															"nativeSrc": "6526:38:7",
															"nodeType": "YulVariableDeclaration",
															"src": "6526:38:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "6556:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "6556:4:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6562:1:7",
																		"nodeType": "YulLiteral",
																		"src": "6562:1:7",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "6552:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "6552:3:7"
																},
																"nativeSrc": "6552:12:7",
																"nodeType": "YulFunctionCall",
																"src": "6552:12:7"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "6530:18:7",
																	"nodeType": "YulTypedName",
																	"src": "6530:18:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6603:51:7",
																"nodeType": "YulBlock",
																"src": "6603:51:7",
																"statements": [
																	{
																		"nativeSrc": "6617:27:7",
																		"nodeType": "YulAssignment",
																		"src": "6617:27:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "6631:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "6631:6:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6639:4:7",
																					"nodeType": "YulLiteral",
																					"src": "6639:4:7",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "6627:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "6627:3:7"
																			},
																			"nativeSrc": "6627:17:7",
																			"nodeType": "YulFunctionCall",
																			"src": "6627:17:7"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "6617:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "6617:6:7"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "6583:18:7",
																		"nodeType": "YulIdentifier",
																		"src": "6583:18:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "6576:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6576:6:7"
																},
																"nativeSrc": "6576:26:7",
																"nodeType": "YulFunctionCall",
																"src": "6576:26:7"
															},
															"nativeSrc": "6573:81:7",
															"nodeType": "YulIf",
															"src": "6573:81:7"
														},
														{
															"body": {
																"nativeSrc": "6706:42:7",
																"nodeType": "YulBlock",
																"src": "6706:42:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "6720:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "6720:16:7"
																			},
																			"nativeSrc": "6720:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "6720:18:7"
																		},
																		"nativeSrc": "6720:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "6720:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "6670:18:7",
																		"nodeType": "YulIdentifier",
																		"src": "6670:18:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "6693:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "6693:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6701:2:7",
																				"nodeType": "YulLiteral",
																				"src": "6701:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "6690:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "6690:2:7"
																		},
																		"nativeSrc": "6690:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6690:14:7"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "6667:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "6667:2:7"
																},
																"nativeSrc": "6667:38:7",
																"nodeType": "YulFunctionCall",
																"src": "6667:38:7"
															},
															"nativeSrc": "6664:84:7",
															"nodeType": "YulIf",
															"src": "6664:84:7"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "6434:320:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "6469:4:7",
														"nodeType": "YulTypedName",
														"src": "6469:4:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "6478:6:7",
														"nodeType": "YulTypedName",
														"src": "6478:6:7",
														"type": ""
													}
												],
												"src": "6434:320:7"
											},
											{
												"body": {
													"nativeSrc": "6866:61:7",
													"nodeType": "YulBlock",
													"src": "6866:61:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "6888:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "6888:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6896:1:7",
																				"nodeType": "YulLiteral",
																				"src": "6896:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6884:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "6884:3:7"
																		},
																		"nativeSrc": "6884:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6884:14:7"
																	},
																	{
																		"hexValue": "546f6b656e7320617265206c6f636b6564",
																		"kind": "string",
																		"nativeSrc": "6900:19:7",
																		"nodeType": "YulLiteral",
																		"src": "6900:19:7",
																		"type": "",
																		"value": "Tokens are locked"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6877:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6877:6:7"
																},
																"nativeSrc": "6877:43:7",
																"nodeType": "YulFunctionCall",
																"src": "6877:43:7"
															},
															"nativeSrc": "6877:43:7",
															"nodeType": "YulExpressionStatement",
															"src": "6877:43:7"
														}
													]
												},
												"name": "store_literal_in_memory_ef6b37cd0f982d2bb7242be4a25d6ba1cc9450d578c0a8ad1cd18136757f29cc",
												"nativeSrc": "6760:167:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "6858:6:7",
														"nodeType": "YulTypedName",
														"src": "6858:6:7",
														"type": ""
													}
												],
												"src": "6760:167:7"
											},
											{
												"body": {
													"nativeSrc": "7079:220:7",
													"nodeType": "YulBlock",
													"src": "7079:220:7",
													"statements": [
														{
															"nativeSrc": "7089:74:7",
															"nodeType": "YulAssignment",
															"src": "7089:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7155:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "7155:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7160:2:7",
																		"nodeType": "YulLiteral",
																		"src": "7160:2:7",
																		"type": "",
																		"value": "17"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "7096:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "7096:58:7"
																},
																"nativeSrc": "7096:67:7",
																"nodeType": "YulFunctionCall",
																"src": "7096:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "7089:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "7089:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7261:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "7261:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_ef6b37cd0f982d2bb7242be4a25d6ba1cc9450d578c0a8ad1cd18136757f29cc",
																	"nativeSrc": "7172:88:7",
																	"nodeType": "YulIdentifier",
																	"src": "7172:88:7"
																},
																"nativeSrc": "7172:93:7",
																"nodeType": "YulFunctionCall",
																"src": "7172:93:7"
															},
															"nativeSrc": "7172:93:7",
															"nodeType": "YulExpressionStatement",
															"src": "7172:93:7"
														},
														{
															"nativeSrc": "7274:19:7",
															"nodeType": "YulAssignment",
															"src": "7274:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7285:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "7285:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7290:2:7",
																		"nodeType": "YulLiteral",
																		"src": "7290:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7281:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "7281:3:7"
																},
																"nativeSrc": "7281:12:7",
																"nodeType": "YulFunctionCall",
																"src": "7281:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "7274:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "7274:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_ef6b37cd0f982d2bb7242be4a25d6ba1cc9450d578c0a8ad1cd18136757f29cc_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "6933:366:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "7067:3:7",
														"nodeType": "YulTypedName",
														"src": "7067:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "7075:3:7",
														"nodeType": "YulTypedName",
														"src": "7075:3:7",
														"type": ""
													}
												],
												"src": "6933:366:7"
											},
											{
												"body": {
													"nativeSrc": "7476:248:7",
													"nodeType": "YulBlock",
													"src": "7476:248:7",
													"statements": [
														{
															"nativeSrc": "7486:26:7",
															"nodeType": "YulAssignment",
															"src": "7486:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7498:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "7498:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7509:2:7",
																		"nodeType": "YulLiteral",
																		"src": "7509:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7494:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "7494:3:7"
																},
																"nativeSrc": "7494:18:7",
																"nodeType": "YulFunctionCall",
																"src": "7494:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7486:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "7486:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7533:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "7533:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7544:1:7",
																				"nodeType": "YulLiteral",
																				"src": "7544:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7529:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "7529:3:7"
																		},
																		"nativeSrc": "7529:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7529:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "7552:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "7552:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7558:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "7558:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7548:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "7548:3:7"
																		},
																		"nativeSrc": "7548:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7548:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7522:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "7522:6:7"
																},
																"nativeSrc": "7522:47:7",
																"nodeType": "YulFunctionCall",
																"src": "7522:47:7"
															},
															"nativeSrc": "7522:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "7522:47:7"
														},
														{
															"nativeSrc": "7578:139:7",
															"nodeType": "YulAssignment",
															"src": "7578:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "7712:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "7712:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_ef6b37cd0f982d2bb7242be4a25d6ba1cc9450d578c0a8ad1cd18136757f29cc_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "7586:124:7",
																	"nodeType": "YulIdentifier",
																	"src": "7586:124:7"
																},
																"nativeSrc": "7586:131:7",
																"nodeType": "YulFunctionCall",
																"src": "7586:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7578:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "7578:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ef6b37cd0f982d2bb7242be4a25d6ba1cc9450d578c0a8ad1cd18136757f29cc__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "7305:419:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7456:9:7",
														"nodeType": "YulTypedName",
														"src": "7456:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7471:4:7",
														"nodeType": "YulTypedName",
														"src": "7471:4:7",
														"type": ""
													}
												],
												"src": "7305:419:7"
											},
											{
												"body": {
													"nativeSrc": "7884:288:7",
													"nodeType": "YulBlock",
													"src": "7884:288:7",
													"statements": [
														{
															"nativeSrc": "7894:26:7",
															"nodeType": "YulAssignment",
															"src": "7894:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7906:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "7906:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7917:2:7",
																		"nodeType": "YulLiteral",
																		"src": "7917:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7902:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "7902:3:7"
																},
																"nativeSrc": "7902:18:7",
																"nodeType": "YulFunctionCall",
																"src": "7902:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7894:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "7894:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "7974:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "7974:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7987:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "7987:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7998:1:7",
																				"nodeType": "YulLiteral",
																				"src": "7998:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7983:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "7983:3:7"
																		},
																		"nativeSrc": "7983:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7983:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "7930:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "7930:43:7"
																},
																"nativeSrc": "7930:71:7",
																"nodeType": "YulFunctionCall",
																"src": "7930:71:7"
															},
															"nativeSrc": "7930:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "7930:71:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "8055:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "8055:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8068:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "8068:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8079:2:7",
																				"nodeType": "YulLiteral",
																				"src": "8079:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8064:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "8064:3:7"
																		},
																		"nativeSrc": "8064:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8064:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "8011:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "8011:43:7"
																},
																"nativeSrc": "8011:72:7",
																"nodeType": "YulFunctionCall",
																"src": "8011:72:7"
															},
															"nativeSrc": "8011:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "8011:72:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "8137:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "8137:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8150:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "8150:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8161:2:7",
																				"nodeType": "YulLiteral",
																				"src": "8161:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8146:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "8146:3:7"
																		},
																		"nativeSrc": "8146:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8146:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "8093:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "8093:43:7"
																},
																"nativeSrc": "8093:72:7",
																"nodeType": "YulFunctionCall",
																"src": "8093:72:7"
															},
															"nativeSrc": "8093:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "8093:72:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "7730:442:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7840:9:7",
														"nodeType": "YulTypedName",
														"src": "7840:9:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "7852:6:7",
														"nodeType": "YulTypedName",
														"src": "7852:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "7860:6:7",
														"nodeType": "YulTypedName",
														"src": "7860:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7868:6:7",
														"nodeType": "YulTypedName",
														"src": "7868:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7879:4:7",
														"nodeType": "YulTypedName",
														"src": "7879:4:7",
														"type": ""
													}
												],
												"src": "7730:442:7"
											},
											{
												"body": {
													"nativeSrc": "8206:152:7",
													"nodeType": "YulBlock",
													"src": "8206:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8223:1:7",
																		"nodeType": "YulLiteral",
																		"src": "8223:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8226:77:7",
																		"nodeType": "YulLiteral",
																		"src": "8226:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8216:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "8216:6:7"
																},
																"nativeSrc": "8216:88:7",
																"nodeType": "YulFunctionCall",
																"src": "8216:88:7"
															},
															"nativeSrc": "8216:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "8216:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8320:1:7",
																		"nodeType": "YulLiteral",
																		"src": "8320:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8323:4:7",
																		"nodeType": "YulLiteral",
																		"src": "8323:4:7",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8313:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "8313:6:7"
																},
																"nativeSrc": "8313:15:7",
																"nodeType": "YulFunctionCall",
																"src": "8313:15:7"
															},
															"nativeSrc": "8313:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "8313:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8344:1:7",
																		"nodeType": "YulLiteral",
																		"src": "8344:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8347:4:7",
																		"nodeType": "YulLiteral",
																		"src": "8347:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "8337:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "8337:6:7"
																},
																"nativeSrc": "8337:15:7",
																"nodeType": "YulFunctionCall",
																"src": "8337:15:7"
															},
															"nativeSrc": "8337:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "8337:15:7"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "8178:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "8178:180:7"
											},
											{
												"body": {
													"nativeSrc": "8408:147:7",
													"nodeType": "YulBlock",
													"src": "8408:147:7",
													"statements": [
														{
															"nativeSrc": "8418:25:7",
															"nodeType": "YulAssignment",
															"src": "8418:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8441:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "8441:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "8423:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "8423:17:7"
																},
																"nativeSrc": "8423:20:7",
																"nodeType": "YulFunctionCall",
																"src": "8423:20:7"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "8418:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "8418:1:7"
																}
															]
														},
														{
															"nativeSrc": "8452:25:7",
															"nodeType": "YulAssignment",
															"src": "8452:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "8475:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "8475:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "8457:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "8457:17:7"
																},
																"nativeSrc": "8457:20:7",
																"nodeType": "YulFunctionCall",
																"src": "8457:20:7"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "8452:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "8452:1:7"
																}
															]
														},
														{
															"nativeSrc": "8486:16:7",
															"nodeType": "YulAssignment",
															"src": "8486:16:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8497:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "8497:1:7"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "8500:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "8500:1:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8493:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "8493:3:7"
																},
																"nativeSrc": "8493:9:7",
																"nodeType": "YulFunctionCall",
																"src": "8493:9:7"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "8486:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "8486:3:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8526:22:7",
																"nodeType": "YulBlock",
																"src": "8526:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "8528:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "8528:16:7"
																			},
																			"nativeSrc": "8528:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "8528:18:7"
																		},
																		"nativeSrc": "8528:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "8528:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8518:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "8518:1:7"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "8521:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "8521:3:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "8515:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "8515:2:7"
																},
																"nativeSrc": "8515:10:7",
																"nodeType": "YulFunctionCall",
																"src": "8515:10:7"
															},
															"nativeSrc": "8512:36:7",
															"nodeType": "YulIf",
															"src": "8512:36:7"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "8364:191:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "8395:1:7",
														"nodeType": "YulTypedName",
														"src": "8395:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "8398:1:7",
														"nodeType": "YulTypedName",
														"src": "8398:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "8404:3:7",
														"nodeType": "YulTypedName",
														"src": "8404:3:7",
														"type": ""
													}
												],
												"src": "8364:191:7"
											}
										]
									},
									"contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function store_literal_in_memory_ef6b37cd0f982d2bb7242be4a25d6ba1cc9450d578c0a8ad1cd18136757f29cc(memPtr) {\n\n        mstore(add(memPtr, 0), \"Tokens are locked\")\n\n    }\n\n    function abi_encode_t_stringliteral_ef6b37cd0f982d2bb7242be4a25d6ba1cc9450d578c0a8ad1cd18136757f29cc_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 17)\n        store_literal_in_memory_ef6b37cd0f982d2bb7242be4a25d6ba1cc9450d578c0a8ad1cd18136757f29cc(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ef6b37cd0f982d2bb7242be4a25d6ba1cc9450d578c0a8ad1cd18136757f29cc__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ef6b37cd0f982d2bb7242be4a25d6ba1cc9450d578c0a8ad1cd18136757f29cc_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n}\n",
									"id": 7,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x135 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x42966C68 GT PUSH2 0xB6 JUMPI DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x7A JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x317 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x335 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x353 JUMPI DUP1 PUSH4 0xCD3293DE EQ PUSH2 0x383 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x3A1 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x3D1 JUMPI PUSH2 0x135 JUMP JUMPDEST DUP1 PUSH4 0x42966C68 EQ PUSH2 0x285 JUMPI DUP1 PUSH4 0x59D7BD71 EQ PUSH2 0x2A1 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x2BF JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x2EF JUMPI DUP1 PUSH4 0x8AC27F5F EQ PUSH2 0x2F9 JUMPI PUSH2 0x135 JUMP JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0xFD JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1DF JUMPI DUP1 PUSH4 0x2D3E474A EQ PUSH2 0x20F JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x22D JUMPI DUP1 PUSH4 0x3829B0DC EQ PUSH2 0x24B JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x269 JUMPI PUSH2 0x135 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x139 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x157 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x187 JUMPI DUP1 PUSH4 0x1F4E1504 EQ PUSH2 0x1A5 JUMPI DUP1 PUSH4 0x221322D5 EQ PUSH2 0x1AF JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x141 PUSH2 0x3ED JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14E SWAP2 SWAP1 PUSH2 0x117C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x171 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x16C SWAP2 SWAP1 PUSH2 0x122D JUMP JUMPDEST PUSH2 0x47D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x17E SWAP2 SWAP1 PUSH2 0x1285 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x18F PUSH2 0x49F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x19C SWAP2 SWAP1 PUSH2 0x12AD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1AD PUSH2 0x4A8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1C9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1C4 SWAP2 SWAP1 PUSH2 0x12C6 JUMP JUMPDEST PUSH2 0x4B2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D6 SWAP2 SWAP1 PUSH2 0x12AD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1F4 SWAP2 SWAP1 PUSH2 0x12F1 JUMP JUMPDEST PUSH2 0x4C7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x206 SWAP2 SWAP1 PUSH2 0x1285 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x217 PUSH2 0x55C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x224 SWAP2 SWAP1 PUSH2 0x1350 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x235 PUSH2 0x581 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x242 SWAP2 SWAP1 PUSH2 0x1384 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x253 PUSH2 0x589 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x260 SWAP2 SWAP1 PUSH2 0x1350 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x283 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x27E SWAP2 SWAP1 PUSH2 0x122D JUMP JUMPDEST PUSH2 0x5AE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x29F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x29A SWAP2 SWAP1 PUSH2 0x139D JUMP JUMPDEST PUSH2 0x5C4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2A9 PUSH2 0x5D9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B6 SWAP2 SWAP1 PUSH2 0x1350 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2D9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2D4 SWAP2 SWAP1 PUSH2 0x12C6 JUMP JUMPDEST PUSH2 0x5FE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2E6 SWAP2 SWAP1 PUSH2 0x12AD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2F7 PUSH2 0x643 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x301 PUSH2 0x656 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x30E SWAP2 SWAP1 PUSH2 0x1350 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x31F PUSH2 0x67B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x32C SWAP2 SWAP1 PUSH2 0x1350 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x33D PUSH2 0x6A3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x34A SWAP2 SWAP1 PUSH2 0x117C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x36D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x368 SWAP2 SWAP1 PUSH2 0x122D JUMP JUMPDEST PUSH2 0x733 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x37A SWAP2 SWAP1 PUSH2 0x1285 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x38B PUSH2 0x7C6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x398 SWAP2 SWAP1 PUSH2 0x1350 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3BB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3B6 SWAP2 SWAP1 PUSH2 0x13C8 JUMP JUMPDEST PUSH2 0x7EB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3C8 SWAP2 SWAP1 PUSH2 0x12AD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3EB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3E6 SWAP2 SWAP1 PUSH2 0x12C6 JUMP JUMPDEST PUSH2 0x86D JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x3FC SWAP1 PUSH2 0x1433 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x428 SWAP1 PUSH2 0x1433 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x473 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x44A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x473 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x456 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x487 PUSH2 0x8F1 JUMP JUMPDEST SWAP1 POP PUSH2 0x494 DUP2 DUP6 DUP6 PUSH2 0x8F8 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x4B0 PUSH2 0x90A JUMP JUMPDEST JUMP JUMPDEST PUSH1 0xB PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH1 0xB PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD TIMESTAMP LT ISZERO PUSH2 0x548 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x53F SWAP1 PUSH2 0x14AD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x553 DUP5 DUP5 DUP5 PUSH2 0x991 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x9 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x7 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x5B6 PUSH2 0x90A JUMP JUMPDEST PUSH2 0x5C0 DUP3 DUP3 PUSH2 0x9BF JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x5CC PUSH2 0x90A JUMP JUMPDEST PUSH2 0x5D6 CALLER DUP3 PUSH2 0xA3E JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0xA PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x64B PUSH2 0x90A JUMP JUMPDEST PUSH2 0x654 PUSH0 PUSH2 0xABD JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x6B2 SWAP1 PUSH2 0x1433 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x6DE SWAP1 PUSH2 0x1433 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x729 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x700 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x729 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x70C JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0xB PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD TIMESTAMP LT ISZERO PUSH2 0x7B4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7AB SWAP1 PUSH2 0x14AD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x7BE DUP4 DUP4 PUSH2 0xB80 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x8 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x875 PUSH2 0x90A JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x8E5 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8DC SWAP2 SWAP1 PUSH2 0x1350 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x8EE DUP2 PUSH2 0xABD JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x905 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0xBA2 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x912 PUSH2 0x8F1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x930 PUSH2 0x67B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x98F JUMPI PUSH2 0x953 PUSH2 0x8F1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x986 SWAP2 SWAP1 PUSH2 0x1350 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x99B PUSH2 0x8F1 JUMP JUMPDEST SWAP1 POP PUSH2 0x9A8 DUP6 DUP3 DUP6 PUSH2 0xD71 JUMP JUMPDEST PUSH2 0x9B3 DUP6 DUP6 DUP6 PUSH2 0xE03 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA2F JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA26 SWAP2 SWAP1 PUSH2 0x1350 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA3A PUSH0 DUP4 DUP4 PUSH2 0xEF3 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xAAE JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAA5 SWAP2 SWAP1 PUSH2 0x1350 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xAB9 DUP3 PUSH0 DUP4 PUSH2 0xEF3 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xB8A PUSH2 0x8F1 JUMP JUMPDEST SWAP1 POP PUSH2 0xB97 DUP2 DUP6 DUP6 PUSH2 0xE03 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xC12 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC09 SWAP2 SWAP1 PUSH2 0x1350 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xC82 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC79 SWAP2 SWAP1 PUSH2 0x1350 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0xD6B JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0xD62 SWAP2 SWAP1 PUSH2 0x12AD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xD7C DUP5 DUP5 PUSH2 0x7EB JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0xDFD JUMPI DUP2 DUP2 LT ISZERO PUSH2 0xDEE JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDE5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x14CB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xDFC DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0xBA2 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xE73 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE6A SWAP2 SWAP1 PUSH2 0x1350 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xEE3 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEDA SWAP2 SWAP1 PUSH2 0x1350 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xEEE DUP4 DUP4 DUP4 PUSH2 0xEF3 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xF43 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xF37 SWAP2 SWAP1 PUSH2 0x152D JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1011 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0xFCC JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFC3 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x14CB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1058 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x10A2 JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x10FF SWAP2 SWAP1 PUSH2 0x12AD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x114E DUP3 PUSH2 0x110C JUMP JUMPDEST PUSH2 0x1158 DUP2 DUP6 PUSH2 0x1116 JUMP JUMPDEST SWAP4 POP PUSH2 0x1168 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1126 JUMP JUMPDEST PUSH2 0x1171 DUP2 PUSH2 0x1134 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1194 DUP2 DUP5 PUSH2 0x1144 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x11C9 DUP3 PUSH2 0x11A0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x11D9 DUP2 PUSH2 0x11BF JUMP JUMPDEST DUP2 EQ PUSH2 0x11E3 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x11F4 DUP2 PUSH2 0x11D0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x120C DUP2 PUSH2 0x11FA JUMP JUMPDEST DUP2 EQ PUSH2 0x1216 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1227 DUP2 PUSH2 0x1203 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1243 JUMPI PUSH2 0x1242 PUSH2 0x119C JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1250 DUP6 DUP3 DUP7 ADD PUSH2 0x11E6 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1261 DUP6 DUP3 DUP7 ADD PUSH2 0x1219 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x127F DUP2 PUSH2 0x126B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1298 PUSH0 DUP4 ADD DUP5 PUSH2 0x1276 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x12A7 DUP2 PUSH2 0x11FA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x12C0 PUSH0 DUP4 ADD DUP5 PUSH2 0x129E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x12DB JUMPI PUSH2 0x12DA PUSH2 0x119C JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x12E8 DUP5 DUP3 DUP6 ADD PUSH2 0x11E6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1308 JUMPI PUSH2 0x1307 PUSH2 0x119C JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1315 DUP7 DUP3 DUP8 ADD PUSH2 0x11E6 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1326 DUP7 DUP3 DUP8 ADD PUSH2 0x11E6 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1337 DUP7 DUP3 DUP8 ADD PUSH2 0x1219 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0x134A DUP2 PUSH2 0x11BF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1363 PUSH0 DUP4 ADD DUP5 PUSH2 0x1341 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x137E DUP2 PUSH2 0x1369 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1397 PUSH0 DUP4 ADD DUP5 PUSH2 0x1375 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x13B2 JUMPI PUSH2 0x13B1 PUSH2 0x119C JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x13BF DUP5 DUP3 DUP6 ADD PUSH2 0x1219 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x13DE JUMPI PUSH2 0x13DD PUSH2 0x119C JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x13EB DUP6 DUP3 DUP7 ADD PUSH2 0x11E6 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x13FC DUP6 DUP3 DUP7 ADD PUSH2 0x11E6 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x144A JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x145D JUMPI PUSH2 0x145C PUSH2 0x1406 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x546F6B656E7320617265206C6F636B6564000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1497 PUSH1 0x11 DUP4 PUSH2 0x1116 JUMP JUMPDEST SWAP2 POP PUSH2 0x14A2 DUP3 PUSH2 0x1463 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x14C4 DUP2 PUSH2 0x148B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x14DE PUSH0 DUP4 ADD DUP7 PUSH2 0x1341 JUMP JUMPDEST PUSH2 0x14EB PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x129E JUMP JUMPDEST PUSH2 0x14F8 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x129E JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1537 DUP3 PUSH2 0x11FA JUMP JUMPDEST SWAP2 POP PUSH2 0x1542 DUP4 PUSH2 0x11FA JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x155A JUMPI PUSH2 0x1559 PUSH2 0x1500 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCD MOD 0x2E 0x27 0x25 0x4D POP SAR 0xB6 DUP3 0xD5 DUP1 CREATE PUSH17 0x91F6D39F2FA3CA55DF2B6CAADA0F6B665A MOD PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "167:2858:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1779:89:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3998:186;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2849:97;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2918:105:6;;;:::i;:::-;;469:47;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2250:232;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;358:24;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2707:82:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;298:26:6;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2553:93;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2738:89;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;388:34;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3004:116:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2293:101:0;;;:::i;:::-;;268:24:6;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1638:85:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1981:93:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1966:210:6;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;330:22;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3551:140:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2543:215:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1779:89:2;1824:13;1856:5;1849:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1779:89;:::o;3998:186::-;4071:4;4087:13;4103:12;:10;:12::i;:::-;4087:28;;4125:31;4134:5;4141:7;4150:5;4125:8;:31::i;:::-;4173:4;4166:11;;;3998:186;;;;:::o;2849:97::-;2901:7;2927:12;;2920:19;;2849:97;:::o;2918:105:6:-;1531:13:0;:11;:13::i;:::-;2918:105:6:o;469:47::-;;;;;;;;;;;;;;;;;:::o;2250:232::-;2339:4;2382:12;:18;2395:4;2382:18;;;;;;;;;;;;;;;;2363:15;:37;;2355:67;;;;;;;;;;;;:::i;:::-;;;;;;;;;2439:36;2458:4;2464:2;2468:6;2439:18;:36::i;:::-;2432:43;;2250:232;;;;;:::o;358:24::-;;;;;;;;;;;;;:::o;2707:82:2:-;2756:5;2780:2;2773:9;;2707:82;:::o;298:26:6:-;;;;;;;;;;;;;:::o;2553:93::-;1531:13:0;:11;:13::i;:::-;2622:17:6::1;2628:2;2632:6;2622:5;:17::i;:::-;2553:93:::0;;:::o;2738:89::-;1531:13:0;:11;:13::i;:::-;2795:25:6::1;2801:10;2813:6;2795:5;:25::i;:::-;2738:89:::0;:::o;388:34::-;;;;;;;;;;;;;:::o;3004:116:2:-;3069:7;3095:9;:18;3105:7;3095:18;;;;;;;;;;;;;;;;3088:25;;3004:116;;;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;268:24:6:-;;;;;;;;;;;;;:::o;1638:85:0:-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;1981:93:2:-;2028:13;2060:7;2053:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1981:93;:::o;1966:210:6:-;2037:4;2080:12;:24;2093:10;2080:24;;;;;;;;;;;;;;;;2061:15;:43;;2053:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;2143:26;2158:2;2162:6;2143:14;:26::i;:::-;2136:33;;1966:210;;;;:::o;330:22::-;;;;;;;;;;;;;:::o;3551:140:2:-;3631:7;3657:11;:18;3669:5;3657:18;;;;;;;;;;;;;;;:27;3676:7;3657:27;;;;;;;;;;;;;;;;3650:34;;3551:140;;;;:::o;2543:215:0:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;656:96:5:-;709:7;735:10;728:17;;656:96;:::o;8726:128:2:-;8810:37;8819:5;8826:7;8835:5;8842:4;8810:8;:37::i;:::-;8726:128;;;:::o;1796:162:0:-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;4776:244:2:-;4863:4;4879:15;4897:12;:10;:12::i;:::-;4879:30;;4919:37;4935:4;4941:7;4950:5;4919:15;:37::i;:::-;4966:26;4976:4;4982:2;4986:5;4966:9;:26::i;:::-;5009:4;5002:11;;;4776:244;;;;;:::o;7458:208::-;7547:1;7528:21;;:7;:21;;;7524:91;;7601:1;7572:32;;;;;;;;;;;:::i;:::-;;;;;;;;7524:91;7624:35;7640:1;7644:7;7653:5;7624:7;:35::i;:::-;7458:208;;:::o;7984:206::-;8073:1;8054:21;;:7;:21;;;8050:89;;8125:1;8098:30;;;;;;;;;;;:::i;:::-;;;;;;;;8050:89;8148:35;8156:7;8173:1;8177:5;8148:7;:35::i;:::-;7984:206;;:::o;2912:187:0:-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;3315:178:2:-;3384:4;3400:13;3416:12;:10;:12::i;:::-;3400:28;;3438:27;3448:5;3455:2;3459:5;3438:9;:27::i;:::-;3482:4;3475:11;;;3315:178;;;;:::o;9701:432::-;9830:1;9813:19;;:5;:19;;;9809:89;;9884:1;9855:32;;;;;;;;;;;:::i;:::-;;;;;;;;9809:89;9930:1;9911:21;;:7;:21;;;9907:90;;9983:1;9955:31;;;;;;;;;;;:::i;:::-;;;;;;;;9907:90;10036:5;10006:11;:18;10018:5;10006:18;;;;;;;;;;;;;;;:27;10025:7;10006:27;;;;;;;;;;;;;;;:35;;;;10055:9;10051:76;;;10101:7;10085:31;;10094:5;10085:31;;;10110:5;10085:31;;;;;;:::i;:::-;;;;;;;;10051:76;9701:432;;;;:::o;10415:477::-;10514:24;10541:25;10551:5;10558:7;10541:9;:25::i;:::-;10514:52;;10600:17;10580:16;:37;10576:310;;10656:5;10637:16;:24;10633:130;;;10715:7;10724:16;10742:5;10688:60;;;;;;;;;;;;;:::i;:::-;;;;;;;;10633:130;10804:57;10813:5;10820:7;10848:5;10829:16;:24;10855:5;10804:8;:57::i;:::-;10576:310;10504:388;10415:477;;;:::o;5393:300::-;5492:1;5476:18;;:4;:18;;;5472:86;;5544:1;5517:30;;;;;;;;;;;:::i;:::-;;;;;;;;5472:86;5585:1;5571:16;;:2;:16;;;5567:86;;5639:1;5610:32;;;;;;;;;;;:::i;:::-;;;;;;;;5567:86;5662:24;5670:4;5676:2;5680:5;5662:7;:24::i;:::-;5393:300;;;:::o;6008:1107::-;6113:1;6097:18;;:4;:18;;;6093:540;;6249:5;6233:12;;:21;;;;;;;:::i;:::-;;;;;;;;6093:540;;;6285:19;6307:9;:15;6317:4;6307:15;;;;;;;;;;;;;;;;6285:37;;6354:5;6340:11;:19;6336:115;;;6411:4;6417:11;6430:5;6386:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6336:115;6603:5;6589:11;:19;6571:9;:15;6581:4;6571:15;;;;;;;;;;;;;;;:37;;;;6271:362;6093:540;6661:1;6647:16;;:2;:16;;;6643:425;;6826:5;6810:12;;:21;;;;;;;;;;;6643:425;;;7038:5;7021:9;:13;7031:2;7021:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6643:425;7098:2;7083:25;;7092:4;7083:25;;;7102:5;7083:25;;;;;;:::i;:::-;;;;;;;;6008:1107;;;:::o;7:99:7:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:139::-;376:6;371:3;366;360:23;417:1;408:6;403:3;399:16;392:27;287:139;;;:::o;432:102::-;473:6;524:2;520:7;515:2;508:5;504:14;500:28;490:38;;432:102;;;:::o;540:377::-;628:3;656:39;689:5;656:39;:::i;:::-;711:71;775:6;770:3;711:71;:::i;:::-;704:78;;791:65;849:6;844:3;837:4;830:5;826:16;791:65;:::i;:::-;881:29;903:6;881:29;:::i;:::-;876:3;872:39;865:46;;632:285;540:377;;;;:::o;923:313::-;1036:4;1074:2;1063:9;1059:18;1051:26;;1123:9;1117:4;1113:20;1109:1;1098:9;1094:17;1087:47;1151:78;1224:4;1215:6;1151:78;:::i;:::-;1143:86;;923:313;;;;:::o;1323:117::-;1432:1;1429;1422:12;1569:126;1606:7;1646:42;1639:5;1635:54;1624:65;;1569:126;;;:::o;1701:96::-;1738:7;1767:24;1785:5;1767:24;:::i;:::-;1756:35;;1701:96;;;:::o;1803:122::-;1876:24;1894:5;1876:24;:::i;:::-;1869:5;1866:35;1856:63;;1915:1;1912;1905:12;1856:63;1803:122;:::o;1931:139::-;1977:5;2015:6;2002:20;1993:29;;2031:33;2058:5;2031:33;:::i;:::-;1931:139;;;;:::o;2076:77::-;2113:7;2142:5;2131:16;;2076:77;;;:::o;2159:122::-;2232:24;2250:5;2232:24;:::i;:::-;2225:5;2222:35;2212:63;;2271:1;2268;2261:12;2212:63;2159:122;:::o;2287:139::-;2333:5;2371:6;2358:20;2349:29;;2387:33;2414:5;2387:33;:::i;:::-;2287:139;;;;:::o;2432:474::-;2500:6;2508;2557:2;2545:9;2536:7;2532:23;2528:32;2525:119;;;2563:79;;:::i;:::-;2525:119;2683:1;2708:53;2753:7;2744:6;2733:9;2729:22;2708:53;:::i;:::-;2698:63;;2654:117;2810:2;2836:53;2881:7;2872:6;2861:9;2857:22;2836:53;:::i;:::-;2826:63;;2781:118;2432:474;;;;;:::o;2912:90::-;2946:7;2989:5;2982:13;2975:21;2964:32;;2912:90;;;:::o;3008:109::-;3089:21;3104:5;3089:21;:::i;:::-;3084:3;3077:34;3008:109;;:::o;3123:210::-;3210:4;3248:2;3237:9;3233:18;3225:26;;3261:65;3323:1;3312:9;3308:17;3299:6;3261:65;:::i;:::-;3123:210;;;;:::o;3339:118::-;3426:24;3444:5;3426:24;:::i;:::-;3421:3;3414:37;3339:118;;:::o;3463:222::-;3556:4;3594:2;3583:9;3579:18;3571:26;;3607:71;3675:1;3664:9;3660:17;3651:6;3607:71;:::i;:::-;3463:222;;;;:::o;3691:329::-;3750:6;3799:2;3787:9;3778:7;3774:23;3770:32;3767:119;;;3805:79;;:::i;:::-;3767:119;3925:1;3950:53;3995:7;3986:6;3975:9;3971:22;3950:53;:::i;:::-;3940:63;;3896:117;3691:329;;;;:::o;4026:619::-;4103:6;4111;4119;4168:2;4156:9;4147:7;4143:23;4139:32;4136:119;;;4174:79;;:::i;:::-;4136:119;4294:1;4319:53;4364:7;4355:6;4344:9;4340:22;4319:53;:::i;:::-;4309:63;;4265:117;4421:2;4447:53;4492:7;4483:6;4472:9;4468:22;4447:53;:::i;:::-;4437:63;;4392:118;4549:2;4575:53;4620:7;4611:6;4600:9;4596:22;4575:53;:::i;:::-;4565:63;;4520:118;4026:619;;;;;:::o;4651:118::-;4738:24;4756:5;4738:24;:::i;:::-;4733:3;4726:37;4651:118;;:::o;4775:222::-;4868:4;4906:2;4895:9;4891:18;4883:26;;4919:71;4987:1;4976:9;4972:17;4963:6;4919:71;:::i;:::-;4775:222;;;;:::o;5003:86::-;5038:7;5078:4;5071:5;5067:16;5056:27;;5003:86;;;:::o;5095:112::-;5178:22;5194:5;5178:22;:::i;:::-;5173:3;5166:35;5095:112;;:::o;5213:214::-;5302:4;5340:2;5329:9;5325:18;5317:26;;5353:67;5417:1;5406:9;5402:17;5393:6;5353:67;:::i;:::-;5213:214;;;;:::o;5433:329::-;5492:6;5541:2;5529:9;5520:7;5516:23;5512:32;5509:119;;;5547:79;;:::i;:::-;5509:119;5667:1;5692:53;5737:7;5728:6;5717:9;5713:22;5692:53;:::i;:::-;5682:63;;5638:117;5433:329;;;;:::o;5768:474::-;5836:6;5844;5893:2;5881:9;5872:7;5868:23;5864:32;5861:119;;;5899:79;;:::i;:::-;5861:119;6019:1;6044:53;6089:7;6080:6;6069:9;6065:22;6044:53;:::i;:::-;6034:63;;5990:117;6146:2;6172:53;6217:7;6208:6;6197:9;6193:22;6172:53;:::i;:::-;6162:63;;6117:118;5768:474;;;;;:::o;6248:180::-;6296:77;6293:1;6286:88;6393:4;6390:1;6383:15;6417:4;6414:1;6407:15;6434:320;6478:6;6515:1;6509:4;6505:12;6495:22;;6562:1;6556:4;6552:12;6583:18;6573:81;;6639:4;6631:6;6627:17;6617:27;;6573:81;6701:2;6693:6;6690:14;6670:18;6667:38;6664:84;;6720:18;;:::i;:::-;6664:84;6485:269;6434:320;;;:::o;6760:167::-;6900:19;6896:1;6888:6;6884:14;6877:43;6760:167;:::o;6933:366::-;7075:3;7096:67;7160:2;7155:3;7096:67;:::i;:::-;7089:74;;7172:93;7261:3;7172:93;:::i;:::-;7290:2;7285:3;7281:12;7274:19;;6933:366;;;:::o;7305:419::-;7471:4;7509:2;7498:9;7494:18;7486:26;;7558:9;7552:4;7548:20;7544:1;7533:9;7529:17;7522:47;7586:131;7712:4;7586:131;:::i;:::-;7578:139;;7305:419;;;:::o;7730:442::-;7879:4;7917:2;7906:9;7902:18;7894:26;;7930:71;7998:1;7987:9;7983:17;7974:6;7930:71;:::i;:::-;8011:72;8079:2;8068:9;8064:18;8055:6;8011:72;:::i;:::-;8093;8161:2;8150:9;8146:18;8137:6;8093:72;:::i;:::-;7730:442;;;;;;:::o;8178:180::-;8226:77;8223:1;8216:88;8323:4;8320:1;8313:15;8347:4;8344:1;8337:15;8364:191;8404:3;8423:20;8441:1;8423:20;:::i;:::-;8418:25;;8457:20;8475:1;8457:20;:::i;:::-;8452:25;;8500:1;8497;8493:9;8486:16;;8521:3;8518:1;8515:10;8512:36;;;8528:18;;:::i;:::-;8512:36;8364:191;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1105200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2896",
								"burn(uint256)": "infinite",
								"communityIncentives()": "2553",
								"decimals()": "405",
								"investors()": "2619",
								"lockupExpiry(address)": "2914",
								"marketing()": "2553",
								"mint(address,uint256)": "infinite",
								"name()": "infinite",
								"owner()": "2537",
								"projectTeam()": "2597",
								"renounceOwnership()": "infinite",
								"reserve()": "2596",
								"symbol()": "infinite",
								"totalSupply()": "2500",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "infinite",
								"upgradeContract()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 167,
									"end": 3025,
									"name": "PUSH",
									"source": 6,
									"value": "80"
								},
								{
									"begin": 167,
									"end": 3025,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 167,
									"end": 3025,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 523,
									"end": 1896,
									"name": "CALLVALUE",
									"source": 6
								},
								{
									"begin": 523,
									"end": 1896,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 523,
									"end": 1896,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 523,
									"end": 1896,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 523,
									"end": 1896,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 523,
									"end": 1896,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 523,
									"end": 1896,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 523,
									"end": 1896,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 523,
									"end": 1896,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 523,
									"end": 1896,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 523,
									"end": 1896,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 523,
									"end": 1896,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 523,
									"end": 1896,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 523,
									"end": 1896,
									"name": "PUSHSIZE",
									"source": 6
								},
								{
									"begin": 523,
									"end": 1896,
									"name": "CODESIZE",
									"source": 6
								},
								{
									"begin": 523,
									"end": 1896,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 523,
									"end": 1896,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 523,
									"end": 1896,
									"name": "PUSHSIZE",
									"source": 6
								},
								{
									"begin": 523,
									"end": 1896,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 523,
									"end": 1896,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 523,
									"end": 1896,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 523,
									"end": 1896,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 523,
									"end": 1896,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 523,
									"end": 1896,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 523,
									"end": 1896,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 523,
									"end": 1896,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 523,
									"end": 1896,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 523,
									"end": 1896,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 523,
									"end": 1896,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 523,
									"end": 1896,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 523,
									"end": 1896,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 523,
									"end": 1896,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 523,
									"end": 1896,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 523,
									"end": 1896,
									"name": "tag",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 523,
									"end": 1896,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 808,
									"end": 820,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 2,
									"value": "1E"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 2,
									"value": "496E646570656E64656E74204361706974616C2046756E6420546F6B656E0000"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 2,
									"value": "4943465400000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1675,
									"end": 1680,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1667,
									"end": 1672,
									"name": "PUSH",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 1667,
									"end": 1680,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "tag",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1700,
									"end": 1707,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1690,
									"end": 1697,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 1690,
									"end": 1707,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "tag",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1297,
									"end": 1298,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1285,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 1322,
									"end": 1353,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1225,
									"end": 1412,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 864,
									"end": 865,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 840,
									"end": 866,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 840,
									"end": 866,
									"modifierDepth": 2,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 840,
									"end": 852,
									"modifierDepth": 2,
									"name": "DUP8",
									"source": 6
								},
								{
									"begin": 840,
									"end": 866,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 840,
									"end": 866,
									"modifierDepth": 2,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 840,
									"end": 866,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 832,
									"end": 892,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "18"
								},
								{
									"begin": 832,
									"end": 892,
									"modifierDepth": 2,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 832,
									"end": 892,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 832,
									"end": 892,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 832,
									"end": 892,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 832,
									"end": 892,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 832,
									"end": 892,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 832,
									"end": 892,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 832,
									"end": 892,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 832,
									"end": 892,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "19"
								},
								{
									"begin": 832,
									"end": 892,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 832,
									"end": 892,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 832,
									"end": 892,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 832,
									"end": 892,
									"modifierDepth": 2,
									"name": "tag",
									"source": 6,
									"value": "19"
								},
								{
									"begin": 832,
									"end": 892,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 832,
									"end": 892,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 832,
									"end": 892,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 832,
									"end": 892,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 832,
									"end": 892,
									"modifierDepth": 2,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 832,
									"end": 892,
									"modifierDepth": 2,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 832,
									"end": 892,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 832,
									"end": 892,
									"modifierDepth": 2,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 832,
									"end": 892,
									"modifierDepth": 2,
									"name": "tag",
									"source": 6,
									"value": "18"
								},
								{
									"begin": 832,
									"end": 892,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 960,
									"end": 970,
									"modifierDepth": 2,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 948,
									"end": 957,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "6"
								},
								{
									"begin": 948,
									"end": 957,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 948,
									"end": 970,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "100"
								},
								{
									"begin": 948,
									"end": 970,
									"modifierDepth": 2,
									"name": "EXP",
									"source": 6
								},
								{
									"begin": 948,
									"end": 970,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 948,
									"end": 970,
									"modifierDepth": 2,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 948,
									"end": 970,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 948,
									"end": 970,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 948,
									"end": 970,
									"modifierDepth": 2,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 948,
									"end": 970,
									"modifierDepth": 2,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 948,
									"end": 970,
									"modifierDepth": 2,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 948,
									"end": 970,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 948,
									"end": 970,
									"modifierDepth": 2,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 948,
									"end": 970,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 948,
									"end": 970,
									"modifierDepth": 2,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 948,
									"end": 970,
									"modifierDepth": 2,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 948,
									"end": 970,
									"modifierDepth": 2,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 948,
									"end": 970,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 948,
									"end": 970,
									"modifierDepth": 2,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 948,
									"end": 970,
									"modifierDepth": 2,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 994,
									"end": 1006,
									"modifierDepth": 2,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 980,
									"end": 991,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "7"
								},
								{
									"begin": 980,
									"end": 991,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 980,
									"end": 1006,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "100"
								},
								{
									"begin": 980,
									"end": 1006,
									"modifierDepth": 2,
									"name": "EXP",
									"source": 6
								},
								{
									"begin": 980,
									"end": 1006,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 980,
									"end": 1006,
									"modifierDepth": 2,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 980,
									"end": 1006,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 980,
									"end": 1006,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 980,
									"end": 1006,
									"modifierDepth": 2,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 980,
									"end": 1006,
									"modifierDepth": 2,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 980,
									"end": 1006,
									"modifierDepth": 2,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 980,
									"end": 1006,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 980,
									"end": 1006,
									"modifierDepth": 2,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 980,
									"end": 1006,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 980,
									"end": 1006,
									"modifierDepth": 2,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 980,
									"end": 1006,
									"modifierDepth": 2,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 980,
									"end": 1006,
									"modifierDepth": 2,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 980,
									"end": 1006,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 980,
									"end": 1006,
									"modifierDepth": 2,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 980,
									"end": 1006,
									"modifierDepth": 2,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1026,
									"end": 1034,
									"modifierDepth": 2,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 1016,
									"end": 1023,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "8"
								},
								{
									"begin": 1016,
									"end": 1023,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1016,
									"end": 1034,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "100"
								},
								{
									"begin": 1016,
									"end": 1034,
									"modifierDepth": 2,
									"name": "EXP",
									"source": 6
								},
								{
									"begin": 1016,
									"end": 1034,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1016,
									"end": 1034,
									"modifierDepth": 2,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 1016,
									"end": 1034,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1016,
									"end": 1034,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1016,
									"end": 1034,
									"modifierDepth": 2,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 1016,
									"end": 1034,
									"modifierDepth": 2,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 1016,
									"end": 1034,
									"modifierDepth": 2,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1016,
									"end": 1034,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1016,
									"end": 1034,
									"modifierDepth": 2,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 1016,
									"end": 1034,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1016,
									"end": 1034,
									"modifierDepth": 2,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1016,
									"end": 1034,
									"modifierDepth": 2,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 1016,
									"end": 1034,
									"modifierDepth": 2,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 1016,
									"end": 1034,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1016,
									"end": 1034,
									"modifierDepth": 2,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 1016,
									"end": 1034,
									"modifierDepth": 2,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1056,
									"end": 1066,
									"modifierDepth": 2,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1044,
									"end": 1053,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "9"
								},
								{
									"begin": 1044,
									"end": 1053,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1044,
									"end": 1066,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "100"
								},
								{
									"begin": 1044,
									"end": 1066,
									"modifierDepth": 2,
									"name": "EXP",
									"source": 6
								},
								{
									"begin": 1044,
									"end": 1066,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1044,
									"end": 1066,
									"modifierDepth": 2,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 1044,
									"end": 1066,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1044,
									"end": 1066,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1044,
									"end": 1066,
									"modifierDepth": 2,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 1044,
									"end": 1066,
									"modifierDepth": 2,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 1044,
									"end": 1066,
									"modifierDepth": 2,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1044,
									"end": 1066,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1044,
									"end": 1066,
									"modifierDepth": 2,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 1044,
									"end": 1066,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1044,
									"end": 1066,
									"modifierDepth": 2,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1044,
									"end": 1066,
									"modifierDepth": 2,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 1044,
									"end": 1066,
									"modifierDepth": 2,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 1044,
									"end": 1066,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1044,
									"end": 1066,
									"modifierDepth": 2,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 1044,
									"end": 1066,
									"modifierDepth": 2,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1098,
									"end": 1118,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1076,
									"end": 1095,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "A"
								},
								{
									"begin": 1076,
									"end": 1095,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1076,
									"end": 1118,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "100"
								},
								{
									"begin": 1076,
									"end": 1118,
									"modifierDepth": 2,
									"name": "EXP",
									"source": 6
								},
								{
									"begin": 1076,
									"end": 1118,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1076,
									"end": 1118,
									"modifierDepth": 2,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 1076,
									"end": 1118,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1076,
									"end": 1118,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1076,
									"end": 1118,
									"modifierDepth": 2,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 1076,
									"end": 1118,
									"modifierDepth": 2,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 1076,
									"end": 1118,
									"modifierDepth": 2,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1076,
									"end": 1118,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1076,
									"end": 1118,
									"modifierDepth": 2,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 1076,
									"end": 1118,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1076,
									"end": 1118,
									"modifierDepth": 2,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1076,
									"end": 1118,
									"modifierDepth": 2,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 1076,
									"end": 1118,
									"modifierDepth": 2,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 1076,
									"end": 1118,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1076,
									"end": 1118,
									"modifierDepth": 2,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 1076,
									"end": 1118,
									"modifierDepth": 2,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1184,
									"end": 1207,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1233,
									"end": 1236,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "64"
								},
								{
									"begin": 1227,
									"end": 1229,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "3C"
								},
								{
									"begin": 1211,
									"end": 1224,
									"modifierDepth": 2,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 1211,
									"end": 1229,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "21"
								},
								{
									"begin": 1211,
									"end": 1229,
									"modifierDepth": 2,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1211,
									"end": 1229,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1211,
									"end": 1229,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "22"
								},
								{
									"begin": 1211,
									"end": 1229,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1211,
									"end": 1229,
									"modifierDepth": 2,
									"name": "tag",
									"source": 6,
									"value": "21"
								},
								{
									"begin": 1211,
									"end": 1229,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1210,
									"end": 1236,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "23"
								},
								{
									"begin": 1210,
									"end": 1236,
									"modifierDepth": 2,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1210,
									"end": 1236,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1210,
									"end": 1236,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 1210,
									"end": 1236,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1210,
									"end": 1236,
									"modifierDepth": 2,
									"name": "tag",
									"source": 6,
									"value": "23"
								},
								{
									"begin": 1210,
									"end": 1236,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1184,
									"end": 1236,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1184,
									"end": 1236,
									"modifierDepth": 2,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1246,
									"end": 1271,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1297,
									"end": 1300,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "64"
								},
								{
									"begin": 1291,
									"end": 1293,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "14"
								},
								{
									"begin": 1275,
									"end": 1288,
									"modifierDepth": 2,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 1275,
									"end": 1293,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "25"
								},
								{
									"begin": 1275,
									"end": 1293,
									"modifierDepth": 2,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1275,
									"end": 1293,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1275,
									"end": 1293,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "22"
								},
								{
									"begin": 1275,
									"end": 1293,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1275,
									"end": 1293,
									"modifierDepth": 2,
									"name": "tag",
									"source": 6,
									"value": "25"
								},
								{
									"begin": 1275,
									"end": 1293,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1274,
									"end": 1300,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "26"
								},
								{
									"begin": 1274,
									"end": 1300,
									"modifierDepth": 2,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1274,
									"end": 1300,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1274,
									"end": 1300,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 1274,
									"end": 1300,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1274,
									"end": 1300,
									"modifierDepth": 2,
									"name": "tag",
									"source": 6,
									"value": "26"
								},
								{
									"begin": 1274,
									"end": 1300,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1246,
									"end": 1300,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1246,
									"end": 1300,
									"modifierDepth": 2,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1310,
									"end": 1331,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1357,
									"end": 1360,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "64"
								},
								{
									"begin": 1351,
									"end": 1353,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "A"
								},
								{
									"begin": 1335,
									"end": 1348,
									"modifierDepth": 2,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 1335,
									"end": 1353,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "27"
								},
								{
									"begin": 1335,
									"end": 1353,
									"modifierDepth": 2,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1335,
									"end": 1353,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1335,
									"end": 1353,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "22"
								},
								{
									"begin": 1335,
									"end": 1353,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1335,
									"end": 1353,
									"modifierDepth": 2,
									"name": "tag",
									"source": 6,
									"value": "27"
								},
								{
									"begin": 1335,
									"end": 1353,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1334,
									"end": 1360,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "28"
								},
								{
									"begin": 1334,
									"end": 1360,
									"modifierDepth": 2,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1334,
									"end": 1360,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1334,
									"end": 1360,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 1334,
									"end": 1360,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1334,
									"end": 1360,
									"modifierDepth": 2,
									"name": "tag",
									"source": 6,
									"value": "28"
								},
								{
									"begin": 1334,
									"end": 1360,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1310,
									"end": 1360,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1310,
									"end": 1360,
									"modifierDepth": 2,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1370,
									"end": 1393,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1418,
									"end": 1421,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "64"
								},
								{
									"begin": 1413,
									"end": 1414,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "5"
								},
								{
									"begin": 1397,
									"end": 1410,
									"modifierDepth": 2,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 1397,
									"end": 1414,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "29"
								},
								{
									"begin": 1397,
									"end": 1414,
									"modifierDepth": 2,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1397,
									"end": 1414,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1397,
									"end": 1414,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "22"
								},
								{
									"begin": 1397,
									"end": 1414,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1397,
									"end": 1414,
									"modifierDepth": 2,
									"name": "tag",
									"source": 6,
									"value": "29"
								},
								{
									"begin": 1397,
									"end": 1414,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1396,
									"end": 1421,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "30"
								},
								{
									"begin": 1396,
									"end": 1421,
									"modifierDepth": 2,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1396,
									"end": 1421,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1396,
									"end": 1421,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 1396,
									"end": 1421,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1396,
									"end": 1421,
									"modifierDepth": 2,
									"name": "tag",
									"source": 6,
									"value": "30"
								},
								{
									"begin": 1396,
									"end": 1421,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1370,
									"end": 1421,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1370,
									"end": 1421,
									"modifierDepth": 2,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1431,
									"end": 1464,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1489,
									"end": 1492,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "64"
								},
								{
									"begin": 1484,
									"end": 1485,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "5"
								},
								{
									"begin": 1468,
									"end": 1481,
									"modifierDepth": 2,
									"name": "DUP8",
									"source": 6
								},
								{
									"begin": 1468,
									"end": 1485,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "31"
								},
								{
									"begin": 1468,
									"end": 1485,
									"modifierDepth": 2,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1468,
									"end": 1485,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1468,
									"end": 1485,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "22"
								},
								{
									"begin": 1468,
									"end": 1485,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1468,
									"end": 1485,
									"modifierDepth": 2,
									"name": "tag",
									"source": 6,
									"value": "31"
								},
								{
									"begin": 1468,
									"end": 1485,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1467,
									"end": 1492,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "32"
								},
								{
									"begin": 1467,
									"end": 1492,
									"modifierDepth": 2,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1467,
									"end": 1492,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1467,
									"end": 1492,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 1467,
									"end": 1492,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1467,
									"end": 1492,
									"modifierDepth": 2,
									"name": "tag",
									"source": 6,
									"value": "32"
								},
								{
									"begin": 1467,
									"end": 1492,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1431,
									"end": 1492,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1431,
									"end": 1492,
									"modifierDepth": 2,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1542,
									"end": 1576,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "33"
								},
								{
									"begin": 1548,
									"end": 1558,
									"modifierDepth": 2,
									"name": "DUP12",
									"source": 6
								},
								{
									"begin": 1560,
									"end": 1575,
									"modifierDepth": 2,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 1542,
									"end": 1547,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "34"
								},
								{
									"begin": 1542,
									"end": 1547,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1542,
									"end": 1547,
									"modifierDepth": 2,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 1542,
									"end": 1576,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1542,
									"end": 1576,
									"modifierDepth": 2,
									"name": "SHR",
									"source": 6
								},
								{
									"begin": 1542,
									"end": 1576,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1542,
									"end": 1576,
									"modifierDepth": 2,
									"name": "tag",
									"source": 6,
									"value": "33"
								},
								{
									"begin": 1542,
									"end": 1576,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1586,
									"end": 1624,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "35"
								},
								{
									"begin": 1592,
									"end": 1604,
									"modifierDepth": 2,
									"name": "DUP11",
									"source": 6
								},
								{
									"begin": 1606,
									"end": 1623,
									"modifierDepth": 2,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 1586,
									"end": 1591,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "34"
								},
								{
									"begin": 1586,
									"end": 1591,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1586,
									"end": 1591,
									"modifierDepth": 2,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 1586,
									"end": 1624,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1586,
									"end": 1624,
									"modifierDepth": 2,
									"name": "SHR",
									"source": 6
								},
								{
									"begin": 1586,
									"end": 1624,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1586,
									"end": 1624,
									"modifierDepth": 2,
									"name": "tag",
									"source": 6,
									"value": "35"
								},
								{
									"begin": 1586,
									"end": 1624,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1634,
									"end": 1664,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "36"
								},
								{
									"begin": 1640,
									"end": 1648,
									"modifierDepth": 2,
									"name": "DUP10",
									"source": 6
								},
								{
									"begin": 1650,
									"end": 1663,
									"modifierDepth": 2,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 1634,
									"end": 1639,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "34"
								},
								{
									"begin": 1634,
									"end": 1639,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1634,
									"end": 1639,
									"modifierDepth": 2,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 1634,
									"end": 1664,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1634,
									"end": 1664,
									"modifierDepth": 2,
									"name": "SHR",
									"source": 6
								},
								{
									"begin": 1634,
									"end": 1664,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1634,
									"end": 1664,
									"modifierDepth": 2,
									"name": "tag",
									"source": 6,
									"value": "36"
								},
								{
									"begin": 1634,
									"end": 1664,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1674,
									"end": 1708,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "37"
								},
								{
									"begin": 1680,
									"end": 1690,
									"modifierDepth": 2,
									"name": "DUP9",
									"source": 6
								},
								{
									"begin": 1692,
									"end": 1707,
									"modifierDepth": 2,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 1674,
									"end": 1679,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "34"
								},
								{
									"begin": 1674,
									"end": 1679,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1674,
									"end": 1679,
									"modifierDepth": 2,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 1674,
									"end": 1708,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1674,
									"end": 1708,
									"modifierDepth": 2,
									"name": "SHR",
									"source": 6
								},
								{
									"begin": 1674,
									"end": 1708,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1674,
									"end": 1708,
									"modifierDepth": 2,
									"name": "tag",
									"source": 6,
									"value": "37"
								},
								{
									"begin": 1674,
									"end": 1708,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1718,
									"end": 1772,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "38"
								},
								{
									"begin": 1724,
									"end": 1744,
									"modifierDepth": 2,
									"name": "DUP8",
									"source": 6
								},
								{
									"begin": 1746,
									"end": 1771,
									"modifierDepth": 2,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1718,
									"end": 1723,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "34"
								},
								{
									"begin": 1718,
									"end": 1723,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1718,
									"end": 1723,
									"modifierDepth": 2,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 1718,
									"end": 1772,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1718,
									"end": 1772,
									"modifierDepth": 2,
									"name": "SHR",
									"source": 6
								},
								{
									"begin": 1718,
									"end": 1772,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1718,
									"end": 1772,
									"modifierDepth": 2,
									"name": "tag",
									"source": 6,
									"value": "38"
								},
								{
									"begin": 1718,
									"end": 1772,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1881,
									"end": 1889,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "1E13380"
								},
								{
									"begin": 1863,
									"end": 1878,
									"modifierDepth": 2,
									"name": "TIMESTAMP",
									"source": 6
								},
								{
									"begin": 1863,
									"end": 1889,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "39"
								},
								{
									"begin": 1863,
									"end": 1889,
									"modifierDepth": 2,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1863,
									"end": 1889,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1863,
									"end": 1889,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1863,
									"end": 1889,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1863,
									"end": 1889,
									"modifierDepth": 2,
									"name": "tag",
									"source": 6,
									"value": "39"
								},
								{
									"begin": 1863,
									"end": 1889,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1834,
									"end": 1846,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "B"
								},
								{
									"begin": 1834,
									"end": 1860,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1847,
									"end": 1859,
									"modifierDepth": 2,
									"name": "DUP13",
									"source": 6
								},
								{
									"begin": 1834,
									"end": 1860,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1834,
									"end": 1860,
									"modifierDepth": 2,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1834,
									"end": 1860,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1834,
									"end": 1860,
									"modifierDepth": 2,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1834,
									"end": 1860,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1834,
									"end": 1860,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1834,
									"end": 1860,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1834,
									"end": 1860,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1834,
									"end": 1860,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1834,
									"end": 1860,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1834,
									"end": 1860,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1834,
									"end": 1860,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1834,
									"end": 1860,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1834,
									"end": 1860,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1834,
									"end": 1860,
									"modifierDepth": 2,
									"name": "KECCAK256",
									"source": 6
								},
								{
									"begin": 1834,
									"end": 1889,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1834,
									"end": 1889,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1834,
									"end": 1889,
									"modifierDepth": 2,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 1834,
									"end": 1889,
									"modifierDepth": 2,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 822,
									"end": 1896,
									"modifierDepth": 2,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 822,
									"end": 1896,
									"modifierDepth": 2,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 822,
									"end": 1896,
									"modifierDepth": 2,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 822,
									"end": 1896,
									"modifierDepth": 2,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 822,
									"end": 1896,
									"modifierDepth": 2,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 523,
									"end": 1896,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 523,
									"end": 1896,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 523,
									"end": 1896,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 523,
									"end": 1896,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 523,
									"end": 1896,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 523,
									"end": 1896,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 523,
									"end": 1896,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 167,
									"end": 3025,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "41"
								},
								{
									"begin": 167,
									"end": 3025,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3029,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3083,
									"end": 3091,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3073,
									"end": 3081,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 7458,
									"end": 7666,
									"name": "tag",
									"source": 2,
									"value": "34"
								},
								{
									"begin": 7458,
									"end": 7666,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7547,
									"end": 7548,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7528,
									"end": 7549,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7528,
									"end": 7549,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7528,
									"end": 7535,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 7528,
									"end": 7549,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7528,
									"end": 7549,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7528,
									"end": 7549,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 7524,
									"end": 7615,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "44"
								},
								{
									"begin": 7524,
									"end": 7615,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 7601,
									"end": 7602,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "PUSH",
									"source": 2,
									"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "45"
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "14"
								},
								{
									"begin": 7572,
									"end": 7604,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "tag",
									"source": 2,
									"value": "45"
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 7524,
									"end": 7615,
									"name": "tag",
									"source": 2,
									"value": "44"
								},
								{
									"begin": 7524,
									"end": 7615,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7624,
									"end": 7659,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "46"
								},
								{
									"begin": 7640,
									"end": 7641,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7644,
									"end": 7651,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 7653,
									"end": 7658,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 7624,
									"end": 7631,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "47"
								},
								{
									"begin": 7624,
									"end": 7631,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 7624,
									"end": 7631,
									"name": "SHL",
									"source": 2
								},
								{
									"begin": 7624,
									"end": 7659,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 7624,
									"end": 7659,
									"name": "SHR",
									"source": 2
								},
								{
									"begin": 7624,
									"end": 7659,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 7624,
									"end": 7659,
									"name": "tag",
									"source": 2,
									"value": "46"
								},
								{
									"begin": 7624,
									"end": 7659,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7458,
									"end": 7666,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7458,
									"end": 7666,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7458,
									"end": 7666,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6008,
									"end": 7115,
									"name": "tag",
									"source": 2,
									"value": "47"
								},
								{
									"begin": 6008,
									"end": 7115,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6113,
									"end": 6114,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6097,
									"end": 6115,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6097,
									"end": 6115,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6097,
									"end": 6101,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 6097,
									"end": 6115,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6097,
									"end": 6115,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6097,
									"end": 6115,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "49"
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 6249,
									"end": 6254,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 6233,
									"end": 6245,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 6233,
									"end": 6245,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "50"
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 6233,
									"end": 6254,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "tag",
									"source": 2,
									"value": "50"
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "51"
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "tag",
									"source": 2,
									"value": "49"
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6285,
									"end": 6304,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6307,
									"end": 6316,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6317,
									"end": 6321,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "KECCAK256",
									"source": 2
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 6285,
									"end": 6322,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6285,
									"end": 6322,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6354,
									"end": 6359,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6340,
									"end": 6351,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6340,
									"end": 6359,
									"name": "LT",
									"source": 2
								},
								{
									"begin": 6336,
									"end": 6451,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 6336,
									"end": 6451,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "52"
								},
								{
									"begin": 6336,
									"end": 6451,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 6411,
									"end": 6415,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 6417,
									"end": 6428,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6430,
									"end": 6435,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "PUSH",
									"source": 2,
									"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "53"
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "SWAP4",
									"source": 2
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "54"
								},
								{
									"begin": 6386,
									"end": 6436,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "tag",
									"source": 2,
									"value": "53"
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 6336,
									"end": 6451,
									"name": "tag",
									"source": 2,
									"value": "52"
								},
								{
									"begin": 6336,
									"end": 6451,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6603,
									"end": 6608,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6589,
									"end": 6600,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6589,
									"end": 6608,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 6571,
									"end": 6580,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 6581,
									"end": 6585,
									"name": "DUP7",
									"source": 2
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "KECCAK256",
									"source": 2
								},
								{
									"begin": 6571,
									"end": 6608,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6571,
									"end": 6608,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6571,
									"end": 6608,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 6571,
									"end": 6608,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6271,
									"end": 6633,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "tag",
									"source": 2,
									"value": "51"
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6661,
									"end": 6662,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6647,
									"end": 6663,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6647,
									"end": 6663,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6647,
									"end": 6649,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6647,
									"end": 6663,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6647,
									"end": 6663,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6647,
									"end": 6663,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "55"
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 6826,
									"end": 6831,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 6810,
									"end": 6822,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 6810,
									"end": 6822,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "56"
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "tag",
									"source": 2,
									"value": "55"
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7038,
									"end": 7043,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7030,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 7031,
									"end": 7033,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "KECCAK256",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "tag",
									"source": 2,
									"value": "56"
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7098,
									"end": 7100,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7092,
									"end": 7096,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "PUSH",
									"source": 2,
									"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
								},
								{
									"begin": 7102,
									"end": 7107,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "57"
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "58"
								},
								{
									"begin": 7083,
									"end": 7108,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "tag",
									"source": 2,
									"value": "57"
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "LOG3",
									"source": 2
								},
								{
									"begin": 6008,
									"end": 7115,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6008,
									"end": 7115,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6008,
									"end": 7115,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6008,
									"end": 7115,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 7,
									"value": "60"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 7,
									"value": "62"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 7,
									"value": "63"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "101"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "62"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 7,
									"value": "101"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 7,
									"value": "64"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "103"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "63"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 7,
									"value": "103"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "104"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 7,
									"value": "104"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 7,
									"value": "65"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "106"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "64"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 7,
									"value": "106"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 845,
									"end": 922,
									"name": "tag",
									"source": 7,
									"value": "66"
								},
								{
									"begin": 845,
									"end": 922,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 882,
									"end": 889,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 911,
									"end": 916,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 900,
									"end": 916,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 900,
									"end": 916,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 845,
									"end": 922,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 845,
									"end": 922,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 845,
									"end": 922,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 845,
									"end": 922,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 928,
									"end": 1050,
									"name": "tag",
									"source": 7,
									"value": "67"
								},
								{
									"begin": 928,
									"end": 1050,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1001,
									"end": 1025,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "109"
								},
								{
									"begin": 1019,
									"end": 1024,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1001,
									"end": 1025,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "66"
								},
								{
									"begin": 1001,
									"end": 1025,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1001,
									"end": 1025,
									"name": "tag",
									"source": 7,
									"value": "109"
								},
								{
									"begin": 1001,
									"end": 1025,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 994,
									"end": 999,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 991,
									"end": 1026,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 981,
									"end": 1044,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "110"
								},
								{
									"begin": 981,
									"end": 1044,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1040,
									"end": 1041,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1037,
									"end": 1038,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1030,
									"end": 1042,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 981,
									"end": 1044,
									"name": "tag",
									"source": 7,
									"value": "110"
								},
								{
									"begin": 981,
									"end": 1044,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 928,
									"end": 1050,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 928,
									"end": 1050,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "tag",
									"source": 7,
									"value": "68"
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1113,
									"end": 1118,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1144,
									"end": 1150,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1138,
									"end": 1151,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 1129,
									"end": 1151,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1129,
									"end": 1151,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1160,
									"end": 1193,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "112"
								},
								{
									"begin": 1187,
									"end": 1192,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1160,
									"end": 1193,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "67"
								},
								{
									"begin": 1160,
									"end": 1193,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1160,
									"end": 1193,
									"name": "tag",
									"source": 7,
									"value": "112"
								},
								{
									"begin": 1160,
									"end": 1193,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1056,
									"end": 1199,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1205,
									"end": 2496,
									"name": "tag",
									"source": 7,
									"value": "3"
								},
								{
									"begin": 1205,
									"end": 2496,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1329,
									"end": 1335,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1337,
									"end": 1343,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1345,
									"end": 1351,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1353,
									"end": 1359,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1361,
									"end": 1367,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1369,
									"end": 1375,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1377,
									"end": 1383,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1426,
									"end": 1429,
									"name": "PUSH",
									"source": 7,
									"value": "E0"
								},
								{
									"begin": 1414,
									"end": 1423,
									"name": "DUP9",
									"source": 7
								},
								{
									"begin": 1405,
									"end": 1412,
									"name": "DUP11",
									"source": 7
								},
								{
									"begin": 1401,
									"end": 1424,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 1397,
									"end": 1430,
									"name": "SLT",
									"source": 7
								},
								{
									"begin": 1394,
									"end": 1514,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 1394,
									"end": 1514,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "114"
								},
								{
									"begin": 1394,
									"end": 1514,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1433,
									"end": 1512,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "115"
								},
								{
									"begin": 1433,
									"end": 1512,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "60"
								},
								{
									"begin": 1433,
									"end": 1512,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1433,
									"end": 1512,
									"name": "tag",
									"source": 7,
									"value": "115"
								},
								{
									"begin": 1433,
									"end": 1512,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1394,
									"end": 1514,
									"name": "tag",
									"source": 7,
									"value": "114"
								},
								{
									"begin": 1394,
									"end": 1514,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1553,
									"end": 1554,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1578,
									"end": 1642,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "116"
								},
								{
									"begin": 1634,
									"end": 1641,
									"name": "DUP11",
									"source": 7
								},
								{
									"begin": 1625,
									"end": 1631,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1614,
									"end": 1623,
									"name": "DUP12",
									"source": 7
								},
								{
									"begin": 1610,
									"end": 1632,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1578,
									"end": 1642,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "65"
								},
								{
									"begin": 1578,
									"end": 1642,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1578,
									"end": 1642,
									"name": "tag",
									"source": 7,
									"value": "116"
								},
								{
									"begin": 1578,
									"end": 1642,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1568,
									"end": 1642,
									"name": "SWAP8",
									"source": 7
								},
								{
									"begin": 1568,
									"end": 1642,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1524,
									"end": 1652,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1691,
									"end": 1693,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1717,
									"end": 1781,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "117"
								},
								{
									"begin": 1773,
									"end": 1780,
									"name": "DUP11",
									"source": 7
								},
								{
									"begin": 1764,
									"end": 1770,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1753,
									"end": 1762,
									"name": "DUP12",
									"source": 7
								},
								{
									"begin": 1749,
									"end": 1771,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1717,
									"end": 1781,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "65"
								},
								{
									"begin": 1717,
									"end": 1781,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1717,
									"end": 1781,
									"name": "tag",
									"source": 7,
									"value": "117"
								},
								{
									"begin": 1717,
									"end": 1781,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1707,
									"end": 1781,
									"name": "SWAP7",
									"source": 7
								},
								{
									"begin": 1707,
									"end": 1781,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1662,
									"end": 1791,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1830,
									"end": 1832,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1856,
									"end": 1920,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "118"
								},
								{
									"begin": 1912,
									"end": 1919,
									"name": "DUP11",
									"source": 7
								},
								{
									"begin": 1903,
									"end": 1909,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1892,
									"end": 1901,
									"name": "DUP12",
									"source": 7
								},
								{
									"begin": 1888,
									"end": 1910,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1856,
									"end": 1920,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "65"
								},
								{
									"begin": 1856,
									"end": 1920,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1856,
									"end": 1920,
									"name": "tag",
									"source": 7,
									"value": "118"
								},
								{
									"begin": 1856,
									"end": 1920,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1846,
									"end": 1920,
									"name": "SWAP6",
									"source": 7
								},
								{
									"begin": 1846,
									"end": 1920,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1801,
									"end": 1930,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1969,
									"end": 1971,
									"name": "PUSH",
									"source": 7,
									"value": "60"
								},
								{
									"begin": 1995,
									"end": 2059,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "119"
								},
								{
									"begin": 2051,
									"end": 2058,
									"name": "DUP11",
									"source": 7
								},
								{
									"begin": 2042,
									"end": 2048,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2031,
									"end": 2040,
									"name": "DUP12",
									"source": 7
								},
								{
									"begin": 2027,
									"end": 2049,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1995,
									"end": 2059,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "65"
								},
								{
									"begin": 1995,
									"end": 2059,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1995,
									"end": 2059,
									"name": "tag",
									"source": 7,
									"value": "119"
								},
								{
									"begin": 1995,
									"end": 2059,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1985,
									"end": 2059,
									"name": "SWAP5",
									"source": 7
								},
								{
									"begin": 1985,
									"end": 2059,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1940,
									"end": 2069,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2108,
									"end": 2111,
									"name": "PUSH",
									"source": 7,
									"value": "80"
								},
								{
									"begin": 2135,
									"end": 2199,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "120"
								},
								{
									"begin": 2191,
									"end": 2198,
									"name": "DUP11",
									"source": 7
								},
								{
									"begin": 2182,
									"end": 2188,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2171,
									"end": 2180,
									"name": "DUP12",
									"source": 7
								},
								{
									"begin": 2167,
									"end": 2189,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2135,
									"end": 2199,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "65"
								},
								{
									"begin": 2135,
									"end": 2199,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2135,
									"end": 2199,
									"name": "tag",
									"source": 7,
									"value": "120"
								},
								{
									"begin": 2135,
									"end": 2199,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2125,
									"end": 2199,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 2125,
									"end": 2199,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2079,
									"end": 2209,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2248,
									"end": 2251,
									"name": "PUSH",
									"source": 7,
									"value": "A0"
								},
								{
									"begin": 2275,
									"end": 2339,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "121"
								},
								{
									"begin": 2331,
									"end": 2338,
									"name": "DUP11",
									"source": 7
								},
								{
									"begin": 2322,
									"end": 2328,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2311,
									"end": 2320,
									"name": "DUP12",
									"source": 7
								},
								{
									"begin": 2307,
									"end": 2329,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2275,
									"end": 2339,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "65"
								},
								{
									"begin": 2275,
									"end": 2339,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2275,
									"end": 2339,
									"name": "tag",
									"source": 7,
									"value": "121"
								},
								{
									"begin": 2275,
									"end": 2339,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2265,
									"end": 2339,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 2265,
									"end": 2339,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2219,
									"end": 2349,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2388,
									"end": 2391,
									"name": "PUSH",
									"source": 7,
									"value": "C0"
								},
								{
									"begin": 2415,
									"end": 2479,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "122"
								},
								{
									"begin": 2471,
									"end": 2478,
									"name": "DUP11",
									"source": 7
								},
								{
									"begin": 2462,
									"end": 2468,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2451,
									"end": 2460,
									"name": "DUP12",
									"source": 7
								},
								{
									"begin": 2447,
									"end": 2469,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2415,
									"end": 2479,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "68"
								},
								{
									"begin": 2415,
									"end": 2479,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2415,
									"end": 2479,
									"name": "tag",
									"source": 7,
									"value": "122"
								},
								{
									"begin": 2415,
									"end": 2479,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2405,
									"end": 2479,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 2405,
									"end": 2479,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2359,
									"end": 2489,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1205,
									"end": 2496,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 1205,
									"end": 2496,
									"name": "SWAP6",
									"source": 7
								},
								{
									"begin": 1205,
									"end": 2496,
									"name": "SWAP9",
									"source": 7
								},
								{
									"begin": 1205,
									"end": 2496,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1205,
									"end": 2496,
									"name": "SWAP5",
									"source": 7
								},
								{
									"begin": 1205,
									"end": 2496,
									"name": "SWAP8",
									"source": 7
								},
								{
									"begin": 1205,
									"end": 2496,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1205,
									"end": 2496,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 1205,
									"end": 2496,
									"name": "SWAP6",
									"source": 7
								},
								{
									"begin": 1205,
									"end": 2496,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1205,
									"end": 2496,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2502,
									"end": 2601,
									"name": "tag",
									"source": 7,
									"value": "69"
								},
								{
									"begin": 2502,
									"end": 2601,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2554,
									"end": 2560,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2588,
									"end": 2593,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2582,
									"end": 2594,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 2572,
									"end": 2594,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2572,
									"end": 2594,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2502,
									"end": 2601,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 2502,
									"end": 2601,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2502,
									"end": 2601,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2502,
									"end": 2601,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2607,
									"end": 2787,
									"name": "tag",
									"source": 7,
									"value": "70"
								},
								{
									"begin": 2607,
									"end": 2787,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2655,
									"end": 2732,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2652,
									"end": 2653,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2645,
									"end": 2733,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 2752,
									"end": 2756,
									"name": "PUSH",
									"source": 7,
									"value": "41"
								},
								{
									"begin": 2749,
									"end": 2750,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 2742,
									"end": 2757,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 2776,
									"end": 2780,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 2773,
									"end": 2774,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2766,
									"end": 2781,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 2793,
									"end": 2973,
									"name": "tag",
									"source": 7,
									"value": "71"
								},
								{
									"begin": 2793,
									"end": 2973,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2841,
									"end": 2918,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2838,
									"end": 2839,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2831,
									"end": 2919,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 2938,
									"end": 2942,
									"name": "PUSH",
									"source": 7,
									"value": "22"
								},
								{
									"begin": 2935,
									"end": 2936,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 2928,
									"end": 2943,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 2962,
									"end": 2966,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 2959,
									"end": 2960,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2952,
									"end": 2967,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 2979,
									"end": 3299,
									"name": "tag",
									"source": 7,
									"value": "72"
								},
								{
									"begin": 2979,
									"end": 3299,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3023,
									"end": 3029,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3060,
									"end": 3061,
									"name": "PUSH",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 3054,
									"end": 3058,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3050,
									"end": 3062,
									"name": "DIV",
									"source": 7
								},
								{
									"begin": 3040,
									"end": 3062,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3040,
									"end": 3062,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3107,
									"end": 3108,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 3101,
									"end": 3105,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3097,
									"end": 3109,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 3128,
									"end": 3146,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 3118,
									"end": 3199,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "127"
								},
								{
									"begin": 3118,
									"end": 3199,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 3184,
									"end": 3188,
									"name": "PUSH",
									"source": 7,
									"value": "7F"
								},
								{
									"begin": 3176,
									"end": 3182,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3172,
									"end": 3189,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 3162,
									"end": 3189,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 3162,
									"end": 3189,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3118,
									"end": 3199,
									"name": "tag",
									"source": 7,
									"value": "127"
								},
								{
									"begin": 3118,
									"end": 3199,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3246,
									"end": 3248,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 3238,
									"end": 3244,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3235,
									"end": 3249,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 3215,
									"end": 3233,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3212,
									"end": 3250,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 3209,
									"end": 3293,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "128"
								},
								{
									"begin": 3209,
									"end": 3293,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 3265,
									"end": 3283,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "129"
								},
								{
									"begin": 3265,
									"end": 3283,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "71"
								},
								{
									"begin": 3265,
									"end": 3283,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3265,
									"end": 3283,
									"name": "tag",
									"source": 7,
									"value": "129"
								},
								{
									"begin": 3265,
									"end": 3283,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3209,
									"end": 3293,
									"name": "tag",
									"source": 7,
									"value": "128"
								},
								{
									"begin": 3209,
									"end": 3293,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3030,
									"end": 3299,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2979,
									"end": 3299,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 2979,
									"end": 3299,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2979,
									"end": 3299,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2979,
									"end": 3299,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3305,
									"end": 3446,
									"name": "tag",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 3305,
									"end": 3446,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3354,
									"end": 3358,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3377,
									"end": 3380,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3369,
									"end": 3380,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3369,
									"end": 3380,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3400,
									"end": 3403,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3397,
									"end": 3398,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3390,
									"end": 3404,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 3434,
									"end": 3438,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 3431,
									"end": 3432,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3421,
									"end": 3439,
									"name": "KECCAK256",
									"source": 7
								},
								{
									"begin": 3413,
									"end": 3439,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3413,
									"end": 3439,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3305,
									"end": 3446,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 3305,
									"end": 3446,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3305,
									"end": 3446,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3305,
									"end": 3446,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3452,
									"end": 3545,
									"name": "tag",
									"source": 7,
									"value": "74"
								},
								{
									"begin": 3452,
									"end": 3545,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3489,
									"end": 3495,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3536,
									"end": 3538,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 3531,
									"end": 3533,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 3524,
									"end": 3529,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 3520,
									"end": 3534,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 3516,
									"end": 3539,
									"name": "DIV",
									"source": 7
								},
								{
									"begin": 3506,
									"end": 3539,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3506,
									"end": 3539,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3452,
									"end": 3545,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 3452,
									"end": 3545,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3452,
									"end": 3545,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3452,
									"end": 3545,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3551,
									"end": 3658,
									"name": "tag",
									"source": 7,
									"value": "75"
								},
								{
									"begin": 3551,
									"end": 3658,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3595,
									"end": 3603,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3645,
									"end": 3650,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3639,
									"end": 3643,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3635,
									"end": 3651,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 3614,
									"end": 3651,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3614,
									"end": 3651,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3551,
									"end": 3658,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 3551,
									"end": 3658,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 3551,
									"end": 3658,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3551,
									"end": 3658,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3551,
									"end": 3658,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3664,
									"end": 4057,
									"name": "tag",
									"source": 7,
									"value": "76"
								},
								{
									"begin": 3664,
									"end": 4057,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3733,
									"end": 3739,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3783,
									"end": 3784,
									"name": "PUSH",
									"source": 7,
									"value": "8"
								},
								{
									"begin": 3771,
									"end": 3781,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 3767,
									"end": 3785,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 3806,
									"end": 3903,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "134"
								},
								{
									"begin": 3836,
									"end": 3902,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3825,
									"end": 3834,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3806,
									"end": 3903,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "75"
								},
								{
									"begin": 3806,
									"end": 3903,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3806,
									"end": 3903,
									"name": "tag",
									"source": 7,
									"value": "134"
								},
								{
									"begin": 3806,
									"end": 3903,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3924,
									"end": 3963,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "135"
								},
								{
									"begin": 3954,
									"end": 3962,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 3943,
									"end": 3952,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 3924,
									"end": 3963,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "75"
								},
								{
									"begin": 3924,
									"end": 3963,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3924,
									"end": 3963,
									"name": "tag",
									"source": 7,
									"value": "135"
								},
								{
									"begin": 3924,
									"end": 3963,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3912,
									"end": 3963,
									"name": "SWAP6",
									"source": 7
								},
								{
									"begin": 3912,
									"end": 3963,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3996,
									"end": 4000,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 3992,
									"end": 4001,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 3985,
									"end": 3990,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 3981,
									"end": 4002,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 3972,
									"end": 4002,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 3972,
									"end": 4002,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4045,
									"end": 4049,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 4035,
									"end": 4043,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 4031,
									"end": 4050,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 4024,
									"end": 4029,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 4021,
									"end": 4051,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 4011,
									"end": 4051,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 4011,
									"end": 4051,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3740,
									"end": 4057,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3740,
									"end": 4057,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3664,
									"end": 4057,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 3664,
									"end": 4057,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 3664,
									"end": 4057,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3664,
									"end": 4057,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3664,
									"end": 4057,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3664,
									"end": 4057,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4063,
									"end": 4123,
									"name": "tag",
									"source": 7,
									"value": "77"
								},
								{
									"begin": 4063,
									"end": 4123,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4091,
									"end": 4094,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 4112,
									"end": 4117,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 4105,
									"end": 4117,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 4105,
									"end": 4117,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4063,
									"end": 4123,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 4063,
									"end": 4123,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 4063,
									"end": 4123,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4063,
									"end": 4123,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4129,
									"end": 4271,
									"name": "tag",
									"source": 7,
									"value": "78"
								},
								{
									"begin": 4129,
									"end": 4271,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4179,
									"end": 4188,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 4212,
									"end": 4265,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "138"
								},
								{
									"begin": 4230,
									"end": 4264,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "139"
								},
								{
									"begin": 4239,
									"end": 4263,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "140"
								},
								{
									"begin": 4257,
									"end": 4262,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 4239,
									"end": 4263,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "66"
								},
								{
									"begin": 4239,
									"end": 4263,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4239,
									"end": 4263,
									"name": "tag",
									"source": 7,
									"value": "140"
								},
								{
									"begin": 4239,
									"end": 4263,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4230,
									"end": 4264,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "77"
								},
								{
									"begin": 4230,
									"end": 4264,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4230,
									"end": 4264,
									"name": "tag",
									"source": 7,
									"value": "139"
								},
								{
									"begin": 4230,
									"end": 4264,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4212,
									"end": 4265,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "66"
								},
								{
									"begin": 4212,
									"end": 4265,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4212,
									"end": 4265,
									"name": "tag",
									"source": 7,
									"value": "138"
								},
								{
									"begin": 4212,
									"end": 4265,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4199,
									"end": 4265,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 4199,
									"end": 4265,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4129,
									"end": 4271,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 4129,
									"end": 4271,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 4129,
									"end": 4271,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4129,
									"end": 4271,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4277,
									"end": 4352,
									"name": "tag",
									"source": 7,
									"value": "79"
								},
								{
									"begin": 4277,
									"end": 4352,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4320,
									"end": 4323,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 4341,
									"end": 4346,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 4334,
									"end": 4346,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 4334,
									"end": 4346,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4277,
									"end": 4352,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 4277,
									"end": 4352,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 4277,
									"end": 4352,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4277,
									"end": 4352,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4358,
									"end": 4627,
									"name": "tag",
									"source": 7,
									"value": "80"
								},
								{
									"begin": 4358,
									"end": 4627,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4468,
									"end": 4507,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "143"
								},
								{
									"begin": 4499,
									"end": 4506,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 4468,
									"end": 4507,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "78"
								},
								{
									"begin": 4468,
									"end": 4507,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4468,
									"end": 4507,
									"name": "tag",
									"source": 7,
									"value": "143"
								},
								{
									"begin": 4468,
									"end": 4507,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4529,
									"end": 4620,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "144"
								},
								{
									"begin": 4578,
									"end": 4619,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "145"
								},
								{
									"begin": 4602,
									"end": 4618,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4578,
									"end": 4619,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "79"
								},
								{
									"begin": 4578,
									"end": 4619,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4578,
									"end": 4619,
									"name": "tag",
									"source": 7,
									"value": "145"
								},
								{
									"begin": 4578,
									"end": 4619,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4570,
									"end": 4576,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 4563,
									"end": 4567,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 4557,
									"end": 4568,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": 4529,
									"end": 4620,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "76"
								},
								{
									"begin": 4529,
									"end": 4620,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4529,
									"end": 4620,
									"name": "tag",
									"source": 7,
									"value": "144"
								},
								{
									"begin": 4529,
									"end": 4620,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4523,
									"end": 4527,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4516,
									"end": 4621,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 4434,
									"end": 4627,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4358,
									"end": 4627,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4358,
									"end": 4627,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4358,
									"end": 4627,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4358,
									"end": 4627,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4633,
									"end": 4706,
									"name": "tag",
									"source": 7,
									"value": "81"
								},
								{
									"begin": 4633,
									"end": 4706,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4678,
									"end": 4681,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 4633,
									"end": 4706,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 4633,
									"end": 4706,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4712,
									"end": 4901,
									"name": "tag",
									"source": 7,
									"value": "82"
								},
								{
									"begin": 4712,
									"end": 4901,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4789,
									"end": 4821,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "148"
								},
								{
									"begin": 4789,
									"end": 4821,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "81"
								},
								{
									"begin": 4789,
									"end": 4821,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4789,
									"end": 4821,
									"name": "tag",
									"source": 7,
									"value": "148"
								},
								{
									"begin": 4789,
									"end": 4821,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4830,
									"end": 4895,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "149"
								},
								{
									"begin": 4888,
									"end": 4894,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 4880,
									"end": 4886,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 4874,
									"end": 4878,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 4830,
									"end": 4895,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "80"
								},
								{
									"begin": 4830,
									"end": 4895,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4830,
									"end": 4895,
									"name": "tag",
									"source": 7,
									"value": "149"
								},
								{
									"begin": 4830,
									"end": 4895,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4765,
									"end": 4901,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4712,
									"end": 4901,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4712,
									"end": 4901,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4712,
									"end": 4901,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4907,
									"end": 5093,
									"name": "tag",
									"source": 7,
									"value": "83"
								},
								{
									"begin": 4907,
									"end": 5093,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4967,
									"end": 5087,
									"name": "tag",
									"source": 7,
									"value": "151"
								},
								{
									"begin": 4967,
									"end": 5087,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4984,
									"end": 4987,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 4977,
									"end": 4982,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 4974,
									"end": 4988,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 4967,
									"end": 5087,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 4967,
									"end": 5087,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "153"
								},
								{
									"begin": 4967,
									"end": 5087,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 5038,
									"end": 5077,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "154"
								},
								{
									"begin": 5075,
									"end": 5076,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 5068,
									"end": 5073,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 5038,
									"end": 5077,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "82"
								},
								{
									"begin": 5038,
									"end": 5077,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5038,
									"end": 5077,
									"name": "tag",
									"source": 7,
									"value": "154"
								},
								{
									"begin": 5038,
									"end": 5077,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5011,
									"end": 5012,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 5004,
									"end": 5009,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 5000,
									"end": 5013,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 4991,
									"end": 5013,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 4991,
									"end": 5013,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4967,
									"end": 5087,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "151"
								},
								{
									"begin": 4967,
									"end": 5087,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4967,
									"end": 5087,
									"name": "tag",
									"source": 7,
									"value": "153"
								},
								{
									"begin": 4967,
									"end": 5087,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4907,
									"end": 5093,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4907,
									"end": 5093,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4907,
									"end": 5093,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5099,
									"end": 5642,
									"name": "tag",
									"source": 7,
									"value": "84"
								},
								{
									"begin": 5099,
									"end": 5642,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5200,
									"end": 5202,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 5195,
									"end": 5198,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 5192,
									"end": 5203,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 5189,
									"end": 5635,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 5189,
									"end": 5635,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "156"
								},
								{
									"begin": 5189,
									"end": 5635,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 5234,
									"end": 5272,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "157"
								},
								{
									"begin": 5266,
									"end": 5271,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 5234,
									"end": 5272,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 5234,
									"end": 5272,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5234,
									"end": 5272,
									"name": "tag",
									"source": 7,
									"value": "157"
								},
								{
									"begin": 5234,
									"end": 5272,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5318,
									"end": 5347,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "158"
								},
								{
									"begin": 5336,
									"end": 5346,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 5318,
									"end": 5347,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "74"
								},
								{
									"begin": 5318,
									"end": 5347,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5318,
									"end": 5347,
									"name": "tag",
									"source": 7,
									"value": "158"
								},
								{
									"begin": 5318,
									"end": 5347,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5308,
									"end": 5316,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 5304,
									"end": 5348,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 5501,
									"end": 5503,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 5489,
									"end": 5499,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 5486,
									"end": 5504,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 5483,
									"end": 5532,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 5483,
									"end": 5532,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "159"
								},
								{
									"begin": 5483,
									"end": 5532,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 5522,
									"end": 5530,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 5507,
									"end": 5530,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 5507,
									"end": 5530,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5483,
									"end": 5532,
									"name": "tag",
									"source": 7,
									"value": "159"
								},
								{
									"begin": 5483,
									"end": 5532,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5545,
									"end": 5625,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "160"
								},
								{
									"begin": 5601,
									"end": 5623,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "161"
								},
								{
									"begin": 5619,
									"end": 5622,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 5601,
									"end": 5623,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "74"
								},
								{
									"begin": 5601,
									"end": 5623,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5601,
									"end": 5623,
									"name": "tag",
									"source": 7,
									"value": "161"
								},
								{
									"begin": 5601,
									"end": 5623,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5591,
									"end": 5599,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 5587,
									"end": 5624,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 5574,
									"end": 5585,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 5545,
									"end": 5625,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "83"
								},
								{
									"begin": 5545,
									"end": 5625,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5545,
									"end": 5625,
									"name": "tag",
									"source": 7,
									"value": "160"
								},
								{
									"begin": 5545,
									"end": 5625,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5204,
									"end": 5635,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5204,
									"end": 5635,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5189,
									"end": 5635,
									"name": "tag",
									"source": 7,
									"value": "156"
								},
								{
									"begin": 5189,
									"end": 5635,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5099,
									"end": 5642,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5099,
									"end": 5642,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5099,
									"end": 5642,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5099,
									"end": 5642,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5648,
									"end": 5765,
									"name": "tag",
									"source": 7,
									"value": "85"
								},
								{
									"begin": 5648,
									"end": 5765,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5702,
									"end": 5710,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 5752,
									"end": 5757,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 5746,
									"end": 5750,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 5742,
									"end": 5758,
									"name": "SHR",
									"source": 7
								},
								{
									"begin": 5721,
									"end": 5758,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 5721,
									"end": 5758,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5648,
									"end": 5765,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 5648,
									"end": 5765,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 5648,
									"end": 5765,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5648,
									"end": 5765,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5648,
									"end": 5765,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5771,
									"end": 5940,
									"name": "tag",
									"source": 7,
									"value": "86"
								},
								{
									"begin": 5771,
									"end": 5940,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5815,
									"end": 5821,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 5848,
									"end": 5899,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "164"
								},
								{
									"begin": 5896,
									"end": 5897,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 5892,
									"end": 5898,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 5884,
									"end": 5889,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 5881,
									"end": 5882,
									"name": "PUSH",
									"source": 7,
									"value": "8"
								},
								{
									"begin": 5877,
									"end": 5890,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 5848,
									"end": 5899,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "85"
								},
								{
									"begin": 5848,
									"end": 5899,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5848,
									"end": 5899,
									"name": "tag",
									"source": 7,
									"value": "164"
								},
								{
									"begin": 5848,
									"end": 5899,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5844,
									"end": 5900,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 5929,
									"end": 5933,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 5923,
									"end": 5927,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 5919,
									"end": 5934,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 5909,
									"end": 5934,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 5909,
									"end": 5934,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5822,
									"end": 5940,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5771,
									"end": 5940,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 5771,
									"end": 5940,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 5771,
									"end": 5940,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5771,
									"end": 5940,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5771,
									"end": 5940,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5945,
									"end": 6240,
									"name": "tag",
									"source": 7,
									"value": "87"
								},
								{
									"begin": 5945,
									"end": 6240,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6021,
									"end": 6025,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 6167,
									"end": 6196,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "166"
								},
								{
									"begin": 6192,
									"end": 6195,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 6186,
									"end": 6190,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 6167,
									"end": 6196,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "86"
								},
								{
									"begin": 6167,
									"end": 6196,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6167,
									"end": 6196,
									"name": "tag",
									"source": 7,
									"value": "166"
								},
								{
									"begin": 6167,
									"end": 6196,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6159,
									"end": 6196,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 6159,
									"end": 6196,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6229,
									"end": 6232,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 6226,
									"end": 6227,
									"name": "PUSH",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 6222,
									"end": 6233,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 6216,
									"end": 6220,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 6213,
									"end": 6234,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 6205,
									"end": 6234,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 6205,
									"end": 6234,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5945,
									"end": 6240,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 5945,
									"end": 6240,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 5945,
									"end": 6240,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5945,
									"end": 6240,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5945,
									"end": 6240,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6245,
									"end": 7640,
									"name": "tag",
									"source": 7,
									"value": "9"
								},
								{
									"begin": 6245,
									"end": 7640,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6362,
									"end": 6399,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "168"
								},
								{
									"begin": 6395,
									"end": 6398,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 6362,
									"end": 6399,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "69"
								},
								{
									"begin": 6362,
									"end": 6399,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6362,
									"end": 6399,
									"name": "tag",
									"source": 7,
									"value": "168"
								},
								{
									"begin": 6362,
									"end": 6399,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6464,
									"end": 6482,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6456,
									"end": 6462,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 6453,
									"end": 6483,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 6450,
									"end": 6506,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 6450,
									"end": 6506,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "169"
								},
								{
									"begin": 6450,
									"end": 6506,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 6486,
									"end": 6504,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "170"
								},
								{
									"begin": 6486,
									"end": 6504,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "70"
								},
								{
									"begin": 6486,
									"end": 6504,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6486,
									"end": 6504,
									"name": "tag",
									"source": 7,
									"value": "170"
								},
								{
									"begin": 6486,
									"end": 6504,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6450,
									"end": 6506,
									"name": "tag",
									"source": 7,
									"value": "169"
								},
								{
									"begin": 6450,
									"end": 6506,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6530,
									"end": 6568,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "171"
								},
								{
									"begin": 6562,
									"end": 6566,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 6556,
									"end": 6567,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": 6530,
									"end": 6568,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "72"
								},
								{
									"begin": 6530,
									"end": 6568,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6530,
									"end": 6568,
									"name": "tag",
									"source": 7,
									"value": "171"
								},
								{
									"begin": 6530,
									"end": 6568,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6615,
									"end": 6682,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "172"
								},
								{
									"begin": 6675,
									"end": 6681,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 6667,
									"end": 6673,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 6661,
									"end": 6665,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 6615,
									"end": 6682,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "84"
								},
								{
									"begin": 6615,
									"end": 6682,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6615,
									"end": 6682,
									"name": "tag",
									"source": 7,
									"value": "172"
								},
								{
									"begin": 6615,
									"end": 6682,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6709,
									"end": 6710,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 6733,
									"end": 6737,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 6720,
									"end": 6737,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 6720,
									"end": 6737,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6765,
									"end": 6767,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 6757,
									"end": 6763,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 6754,
									"end": 6768,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 6782,
									"end": 6783,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 6777,
									"end": 7395,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 6777,
									"end": 7395,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 6777,
									"end": 7395,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "174"
								},
								{
									"begin": 6777,
									"end": 7395,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 7439,
									"end": 7440,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 7456,
									"end": 7462,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 7453,
									"end": 7530,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 7453,
									"end": 7530,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "175"
								},
								{
									"begin": 7453,
									"end": 7530,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 7505,
									"end": 7514,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 7500,
									"end": 7503,
									"name": "DUP8",
									"source": 7
								},
								{
									"begin": 7496,
									"end": 7515,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 7490,
									"end": 7516,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 7481,
									"end": 7516,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 7481,
									"end": 7516,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7453,
									"end": 7530,
									"name": "tag",
									"source": 7,
									"value": "175"
								},
								{
									"begin": 7453,
									"end": 7530,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7556,
									"end": 7623,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "176"
								},
								{
									"begin": 7616,
									"end": 7622,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 7609,
									"end": 7614,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 7556,
									"end": 7623,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "87"
								},
								{
									"begin": 7556,
									"end": 7623,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7556,
									"end": 7623,
									"name": "tag",
									"source": 7,
									"value": "176"
								},
								{
									"begin": 7556,
									"end": 7623,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7550,
									"end": 7554,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 7543,
									"end": 7624,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 7412,
									"end": 7634,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6747,
									"end": 7634,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "173"
								},
								{
									"begin": 6747,
									"end": 7634,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6777,
									"end": 7395,
									"name": "tag",
									"source": 7,
									"value": "174"
								},
								{
									"begin": 6777,
									"end": 7395,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6829,
									"end": 6833,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 6825,
									"end": 6834,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 6817,
									"end": 6823,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 6813,
									"end": 6835,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 6863,
									"end": 6900,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "177"
								},
								{
									"begin": 6895,
									"end": 6899,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 6863,
									"end": 6900,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 6863,
									"end": 6900,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6863,
									"end": 6900,
									"name": "tag",
									"source": 7,
									"value": "177"
								},
								{
									"begin": 6863,
									"end": 6900,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6922,
									"end": 6923,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 6936,
									"end": 7144,
									"name": "tag",
									"source": 7,
									"value": "178"
								},
								{
									"begin": 6936,
									"end": 7144,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6950,
									"end": 6957,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 6947,
									"end": 6948,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 6944,
									"end": 6958,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 6936,
									"end": 7144,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 6936,
									"end": 7144,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "180"
								},
								{
									"begin": 6936,
									"end": 7144,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 7029,
									"end": 7038,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 7024,
									"end": 7027,
									"name": "DUP10",
									"source": 7
								},
								{
									"begin": 7020,
									"end": 7039,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 7014,
									"end": 7040,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 7006,
									"end": 7012,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 6999,
									"end": 7041,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 7080,
									"end": 7081,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 7072,
									"end": 7078,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 7068,
									"end": 7082,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 7058,
									"end": 7082,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 7058,
									"end": 7082,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7127,
									"end": 7129,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 7116,
									"end": 7125,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 7112,
									"end": 7130,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 7099,
									"end": 7130,
									"name": "SWAP5",
									"source": 7
								},
								{
									"begin": 7099,
									"end": 7130,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6973,
									"end": 6977,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 6970,
									"end": 6971,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 6966,
									"end": 6978,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 6961,
									"end": 6978,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 6961,
									"end": 6978,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6936,
									"end": 7144,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "178"
								},
								{
									"begin": 6936,
									"end": 7144,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6936,
									"end": 7144,
									"name": "tag",
									"source": 7,
									"value": "180"
								},
								{
									"begin": 6936,
									"end": 7144,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7172,
									"end": 7178,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 7163,
									"end": 7170,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 7160,
									"end": 7179,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 7157,
									"end": 7336,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 7157,
									"end": 7336,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "181"
								},
								{
									"begin": 7157,
									"end": 7336,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 7230,
									"end": 7239,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 7225,
									"end": 7228,
									"name": "DUP10",
									"source": 7
								},
								{
									"begin": 7221,
									"end": 7240,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 7215,
									"end": 7241,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 7273,
									"end": 7321,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "182"
								},
								{
									"begin": 7315,
									"end": 7319,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 7307,
									"end": 7313,
									"name": "DUP10",
									"source": 7
								},
								{
									"begin": 7303,
									"end": 7320,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 7292,
									"end": 7301,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 7273,
									"end": 7321,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "86"
								},
								{
									"begin": 7273,
									"end": 7321,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7273,
									"end": 7321,
									"name": "tag",
									"source": 7,
									"value": "182"
								},
								{
									"begin": 7273,
									"end": 7321,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7265,
									"end": 7271,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 7258,
									"end": 7322,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 7180,
									"end": 7336,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7157,
									"end": 7336,
									"name": "tag",
									"source": 7,
									"value": "181"
								},
								{
									"begin": 7157,
									"end": 7336,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7382,
									"end": 7383,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 7378,
									"end": 7379,
									"name": "PUSH",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 7370,
									"end": 7376,
									"name": "DUP9",
									"source": 7
								},
								{
									"begin": 7366,
									"end": 7380,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 7362,
									"end": 7384,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 7356,
									"end": 7360,
									"name": "DUP9",
									"source": 7
								},
								{
									"begin": 7349,
									"end": 7385,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 6784,
									"end": 7395,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6784,
									"end": 7395,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6784,
									"end": 7395,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6747,
									"end": 7634,
									"name": "tag",
									"source": 7,
									"value": "173"
								},
								{
									"begin": 6747,
									"end": 7634,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6747,
									"end": 7634,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6337,
									"end": 7640,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6337,
									"end": 7640,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6337,
									"end": 7640,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6245,
									"end": 7640,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6245,
									"end": 7640,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6245,
									"end": 7640,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7646,
									"end": 7764,
									"name": "tag",
									"source": 7,
									"value": "88"
								},
								{
									"begin": 7646,
									"end": 7764,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7733,
									"end": 7757,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "184"
								},
								{
									"begin": 7751,
									"end": 7756,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 7733,
									"end": 7757,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "63"
								},
								{
									"begin": 7733,
									"end": 7757,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7733,
									"end": 7757,
									"name": "tag",
									"source": 7,
									"value": "184"
								},
								{
									"begin": 7733,
									"end": 7757,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7728,
									"end": 7731,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 7721,
									"end": 7758,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 7646,
									"end": 7764,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7646,
									"end": 7764,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7646,
									"end": 7764,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7770,
									"end": 7992,
									"name": "tag",
									"source": 7,
									"value": "14"
								},
								{
									"begin": 7770,
									"end": 7992,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7863,
									"end": 7867,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 7901,
									"end": 7903,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 7890,
									"end": 7899,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 7886,
									"end": 7904,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 7878,
									"end": 7904,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 7878,
									"end": 7904,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7914,
									"end": 7985,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "186"
								},
								{
									"begin": 7982,
									"end": 7983,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 7971,
									"end": 7980,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 7967,
									"end": 7984,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 7958,
									"end": 7964,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 7914,
									"end": 7985,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "88"
								},
								{
									"begin": 7914,
									"end": 7985,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7914,
									"end": 7985,
									"name": "tag",
									"source": 7,
									"value": "186"
								},
								{
									"begin": 7914,
									"end": 7985,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7770,
									"end": 7992,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 7770,
									"end": 7992,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 7770,
									"end": 7992,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7770,
									"end": 7992,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7770,
									"end": 7992,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7998,
									"end": 8167,
									"name": "tag",
									"source": 7,
									"value": "89"
								},
								{
									"begin": 7998,
									"end": 8167,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8082,
									"end": 8093,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 8116,
									"end": 8122,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 8111,
									"end": 8114,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 8104,
									"end": 8123,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 8156,
									"end": 8160,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 8151,
									"end": 8154,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 8147,
									"end": 8161,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 8132,
									"end": 8161,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 8132,
									"end": 8161,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7998,
									"end": 8167,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 7998,
									"end": 8167,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 7998,
									"end": 8167,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7998,
									"end": 8167,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7998,
									"end": 8167,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 8173,
									"end": 8344,
									"name": "tag",
									"source": 7,
									"value": "90"
								},
								{
									"begin": 8173,
									"end": 8344,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8313,
									"end": 8336,
									"name": "PUSH",
									"source": 7,
									"value": "496E76616C6964206F776E657220616464726573730000000000000000000000"
								},
								{
									"begin": 8309,
									"end": 8310,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 8301,
									"end": 8307,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 8297,
									"end": 8311,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 8290,
									"end": 8337,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 8173,
									"end": 8344,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8173,
									"end": 8344,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 8350,
									"end": 8716,
									"name": "tag",
									"source": 7,
									"value": "91"
								},
								{
									"begin": 8350,
									"end": 8716,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8492,
									"end": 8495,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 8513,
									"end": 8580,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "190"
								},
								{
									"begin": 8577,
									"end": 8579,
									"name": "PUSH",
									"source": 7,
									"value": "15"
								},
								{
									"begin": 8572,
									"end": 8575,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 8513,
									"end": 8580,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "89"
								},
								{
									"begin": 8513,
									"end": 8580,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 8513,
									"end": 8580,
									"name": "tag",
									"source": 7,
									"value": "190"
								},
								{
									"begin": 8513,
									"end": 8580,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8506,
									"end": 8580,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 8506,
									"end": 8580,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8589,
									"end": 8682,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "191"
								},
								{
									"begin": 8678,
									"end": 8681,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 8589,
									"end": 8682,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "90"
								},
								{
									"begin": 8589,
									"end": 8682,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 8589,
									"end": 8682,
									"name": "tag",
									"source": 7,
									"value": "191"
								},
								{
									"begin": 8589,
									"end": 8682,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8707,
									"end": 8709,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 8702,
									"end": 8705,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 8698,
									"end": 8710,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 8691,
									"end": 8710,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 8691,
									"end": 8710,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8350,
									"end": 8716,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 8350,
									"end": 8716,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 8350,
									"end": 8716,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8350,
									"end": 8716,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 8722,
									"end": 9141,
									"name": "tag",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 8722,
									"end": 9141,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8888,
									"end": 8892,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 8926,
									"end": 8928,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 8915,
									"end": 8924,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 8911,
									"end": 8929,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 8903,
									"end": 8929,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 8903,
									"end": 8929,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8975,
									"end": 8984,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 8969,
									"end": 8973,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 8965,
									"end": 8985,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 8961,
									"end": 8962,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 8950,
									"end": 8959,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 8946,
									"end": 8963,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 8939,
									"end": 8986,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 9003,
									"end": 9134,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "193"
								},
								{
									"begin": 9129,
									"end": 9133,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 9003,
									"end": 9134,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "91"
								},
								{
									"begin": 9003,
									"end": 9134,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 9003,
									"end": 9134,
									"name": "tag",
									"source": 7,
									"value": "193"
								},
								{
									"begin": 9003,
									"end": 9134,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8995,
									"end": 9134,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 8995,
									"end": 9134,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8722,
									"end": 9141,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 8722,
									"end": 9141,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 8722,
									"end": 9141,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8722,
									"end": 9141,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 9147,
									"end": 9327,
									"name": "tag",
									"source": 7,
									"value": "92"
								},
								{
									"begin": 9147,
									"end": 9327,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 9195,
									"end": 9272,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 9192,
									"end": 9193,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 9185,
									"end": 9273,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 9292,
									"end": 9296,
									"name": "PUSH",
									"source": 7,
									"value": "11"
								},
								{
									"begin": 9289,
									"end": 9290,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 9282,
									"end": 9297,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 9316,
									"end": 9320,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 9313,
									"end": 9314,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 9306,
									"end": 9321,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 9333,
									"end": 9743,
									"name": "tag",
									"source": 7,
									"value": "22"
								},
								{
									"begin": 9333,
									"end": 9743,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 9373,
									"end": 9380,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 9396,
									"end": 9416,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "196"
								},
								{
									"begin": 9414,
									"end": 9415,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 9396,
									"end": 9416,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "66"
								},
								{
									"begin": 9396,
									"end": 9416,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 9396,
									"end": 9416,
									"name": "tag",
									"source": 7,
									"value": "196"
								},
								{
									"begin": 9396,
									"end": 9416,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 9391,
									"end": 9416,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 9391,
									"end": 9416,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 9430,
									"end": 9450,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "197"
								},
								{
									"begin": 9448,
									"end": 9449,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 9430,
									"end": 9450,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "66"
								},
								{
									"begin": 9430,
									"end": 9450,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 9430,
									"end": 9450,
									"name": "tag",
									"source": 7,
									"value": "197"
								},
								{
									"begin": 9430,
									"end": 9450,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 9425,
									"end": 9450,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 9425,
									"end": 9450,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 9485,
									"end": 9486,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 9482,
									"end": 9483,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 9478,
									"end": 9487,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 9507,
									"end": 9537,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "198"
								},
								{
									"begin": 9525,
									"end": 9536,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 9507,
									"end": 9537,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "66"
								},
								{
									"begin": 9507,
									"end": 9537,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 9507,
									"end": 9537,
									"name": "tag",
									"source": 7,
									"value": "198"
								},
								{
									"begin": 9507,
									"end": 9537,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 9496,
									"end": 9537,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 9496,
									"end": 9537,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 9686,
									"end": 9687,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 9677,
									"end": 9684,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 9673,
									"end": 9688,
									"name": "DIV",
									"source": 7
								},
								{
									"begin": 9670,
									"end": 9671,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 9667,
									"end": 9689,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 9647,
									"end": 9648,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 9640,
									"end": 9649,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 9620,
									"end": 9703,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 9597,
									"end": 9736,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "199"
								},
								{
									"begin": 9597,
									"end": 9736,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 9716,
									"end": 9734,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "200"
								},
								{
									"begin": 9716,
									"end": 9734,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "92"
								},
								{
									"begin": 9716,
									"end": 9734,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 9716,
									"end": 9734,
									"name": "tag",
									"source": 7,
									"value": "200"
								},
								{
									"begin": 9716,
									"end": 9734,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 9597,
									"end": 9736,
									"name": "tag",
									"source": 7,
									"value": "199"
								},
								{
									"begin": 9597,
									"end": 9736,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 9381,
									"end": 9743,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 9333,
									"end": 9743,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 9333,
									"end": 9743,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 9333,
									"end": 9743,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 9333,
									"end": 9743,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 9333,
									"end": 9743,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 9749,
									"end": 9929,
									"name": "tag",
									"source": 7,
									"value": "93"
								},
								{
									"begin": 9749,
									"end": 9929,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 9797,
									"end": 9874,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 9794,
									"end": 9795,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 9787,
									"end": 9875,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 9894,
									"end": 9898,
									"name": "PUSH",
									"source": 7,
									"value": "12"
								},
								{
									"begin": 9891,
									"end": 9892,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 9884,
									"end": 9899,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 9918,
									"end": 9922,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 9915,
									"end": 9916,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 9908,
									"end": 9923,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 9935,
									"end": 10120,
									"name": "tag",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 9935,
									"end": 10120,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 9975,
									"end": 9976,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 9992,
									"end": 10012,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "203"
								},
								{
									"begin": 10010,
									"end": 10011,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 9992,
									"end": 10012,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "66"
								},
								{
									"begin": 9992,
									"end": 10012,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 9992,
									"end": 10012,
									"name": "tag",
									"source": 7,
									"value": "203"
								},
								{
									"begin": 9992,
									"end": 10012,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 9987,
									"end": 10012,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 9987,
									"end": 10012,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 10026,
									"end": 10046,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "204"
								},
								{
									"begin": 10044,
									"end": 10045,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 10026,
									"end": 10046,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "66"
								},
								{
									"begin": 10026,
									"end": 10046,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 10026,
									"end": 10046,
									"name": "tag",
									"source": 7,
									"value": "204"
								},
								{
									"begin": 10026,
									"end": 10046,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 10021,
									"end": 10046,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 10021,
									"end": 10046,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 10065,
									"end": 10066,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 10055,
									"end": 10090,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "205"
								},
								{
									"begin": 10055,
									"end": 10090,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 10070,
									"end": 10088,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "206"
								},
								{
									"begin": 10070,
									"end": 10088,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "93"
								},
								{
									"begin": 10070,
									"end": 10088,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 10070,
									"end": 10088,
									"name": "tag",
									"source": 7,
									"value": "206"
								},
								{
									"begin": 10070,
									"end": 10088,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 10055,
									"end": 10090,
									"name": "tag",
									"source": 7,
									"value": "205"
								},
								{
									"begin": 10055,
									"end": 10090,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 10112,
									"end": 10113,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 10109,
									"end": 10110,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 10105,
									"end": 10114,
									"name": "DIV",
									"source": 7
								},
								{
									"begin": 10100,
									"end": 10114,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 10100,
									"end": 10114,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 9935,
									"end": 10120,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 9935,
									"end": 10120,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 9935,
									"end": 10120,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 9935,
									"end": 10120,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 9935,
									"end": 10120,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 10126,
									"end": 10317,
									"name": "tag",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 10126,
									"end": 10317,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 10166,
									"end": 10169,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 10185,
									"end": 10205,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "208"
								},
								{
									"begin": 10203,
									"end": 10204,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 10185,
									"end": 10205,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "66"
								},
								{
									"begin": 10185,
									"end": 10205,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 10185,
									"end": 10205,
									"name": "tag",
									"source": 7,
									"value": "208"
								},
								{
									"begin": 10185,
									"end": 10205,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 10180,
									"end": 10205,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 10180,
									"end": 10205,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 10219,
									"end": 10239,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "209"
								},
								{
									"begin": 10237,
									"end": 10238,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 10219,
									"end": 10239,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "66"
								},
								{
									"begin": 10219,
									"end": 10239,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 10219,
									"end": 10239,
									"name": "tag",
									"source": 7,
									"value": "209"
								},
								{
									"begin": 10219,
									"end": 10239,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 10214,
									"end": 10239,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 10214,
									"end": 10239,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 10262,
									"end": 10263,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 10259,
									"end": 10260,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 10255,
									"end": 10264,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 10248,
									"end": 10264,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 10248,
									"end": 10264,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 10283,
									"end": 10286,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 10280,
									"end": 10281,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 10277,
									"end": 10287,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 10274,
									"end": 10310,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 10274,
									"end": 10310,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "210"
								},
								{
									"begin": 10274,
									"end": 10310,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 10290,
									"end": 10308,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "211"
								},
								{
									"begin": 10290,
									"end": 10308,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "92"
								},
								{
									"begin": 10290,
									"end": 10308,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 10290,
									"end": 10308,
									"name": "tag",
									"source": 7,
									"value": "211"
								},
								{
									"begin": 10290,
									"end": 10308,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 10274,
									"end": 10310,
									"name": "tag",
									"source": 7,
									"value": "210"
								},
								{
									"begin": 10274,
									"end": 10310,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 10126,
									"end": 10317,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 10126,
									"end": 10317,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 10126,
									"end": 10317,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 10126,
									"end": 10317,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 10126,
									"end": 10317,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 10323,
									"end": 10441,
									"name": "tag",
									"source": 7,
									"value": "94"
								},
								{
									"begin": 10323,
									"end": 10441,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 10410,
									"end": 10434,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "213"
								},
								{
									"begin": 10428,
									"end": 10433,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 10410,
									"end": 10434,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "66"
								},
								{
									"begin": 10410,
									"end": 10434,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 10410,
									"end": 10434,
									"name": "tag",
									"source": 7,
									"value": "213"
								},
								{
									"begin": 10410,
									"end": 10434,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 10405,
									"end": 10408,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 10398,
									"end": 10435,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 10323,
									"end": 10441,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 10323,
									"end": 10441,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 10323,
									"end": 10441,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 10447,
									"end": 10889,
									"name": "tag",
									"source": 7,
									"value": "54"
								},
								{
									"begin": 10447,
									"end": 10889,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 10596,
									"end": 10600,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 10634,
									"end": 10636,
									"name": "PUSH",
									"source": 7,
									"value": "60"
								},
								{
									"begin": 10623,
									"end": 10632,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 10619,
									"end": 10637,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 10611,
									"end": 10637,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 10611,
									"end": 10637,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 10647,
									"end": 10718,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "215"
								},
								{
									"begin": 10715,
									"end": 10716,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 10704,
									"end": 10713,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 10700,
									"end": 10717,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 10691,
									"end": 10697,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 10647,
									"end": 10718,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "88"
								},
								{
									"begin": 10647,
									"end": 10718,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 10647,
									"end": 10718,
									"name": "tag",
									"source": 7,
									"value": "215"
								},
								{
									"begin": 10647,
									"end": 10718,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 10728,
									"end": 10800,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "216"
								},
								{
									"begin": 10796,
									"end": 10798,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 10785,
									"end": 10794,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 10781,
									"end": 10799,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 10772,
									"end": 10778,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 10728,
									"end": 10800,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "94"
								},
								{
									"begin": 10728,
									"end": 10800,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 10728,
									"end": 10800,
									"name": "tag",
									"source": 7,
									"value": "216"
								},
								{
									"begin": 10728,
									"end": 10800,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 10810,
									"end": 10882,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "217"
								},
								{
									"begin": 10878,
									"end": 10880,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 10867,
									"end": 10876,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 10863,
									"end": 10881,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 10854,
									"end": 10860,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 10810,
									"end": 10882,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "94"
								},
								{
									"begin": 10810,
									"end": 10882,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 10810,
									"end": 10882,
									"name": "tag",
									"source": 7,
									"value": "217"
								},
								{
									"begin": 10810,
									"end": 10882,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 10447,
									"end": 10889,
									"name": "SWAP5",
									"source": 7
								},
								{
									"begin": 10447,
									"end": 10889,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 10447,
									"end": 10889,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 10447,
									"end": 10889,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 10447,
									"end": 10889,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 10447,
									"end": 10889,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 10447,
									"end": 10889,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 10895,
									"end": 11117,
									"name": "tag",
									"source": 7,
									"value": "58"
								},
								{
									"begin": 10895,
									"end": 11117,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 10988,
									"end": 10992,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 11026,
									"end": 11028,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 11015,
									"end": 11024,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 11011,
									"end": 11029,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 11003,
									"end": 11029,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 11003,
									"end": 11029,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 11039,
									"end": 11110,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "219"
								},
								{
									"begin": 11107,
									"end": 11108,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 11096,
									"end": 11105,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 11092,
									"end": 11109,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 11083,
									"end": 11089,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 11039,
									"end": 11110,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "94"
								},
								{
									"begin": 11039,
									"end": 11110,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 11039,
									"end": 11110,
									"name": "tag",
									"source": 7,
									"value": "219"
								},
								{
									"begin": 11039,
									"end": 11110,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 10895,
									"end": 11117,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 10895,
									"end": 11117,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 10895,
									"end": 11117,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 10895,
									"end": 11117,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 10895,
									"end": 11117,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 167,
									"end": 3025,
									"name": "tag",
									"source": 6,
									"value": "41"
								},
								{
									"begin": 167,
									"end": 3025,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 167,
									"end": 3025,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 167,
									"end": 3025,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 167,
									"end": 3025,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 167,
									"end": 3025,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 167,
									"end": 3025,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 167,
									"end": 3025,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 167,
									"end": 3025,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220cd062e27254d501db682d580f07091f6d39f2fa3ca55df2b6caada0f6b665a0664736f6c634300081a0033",
									".code": [
										{
											"begin": 167,
											"end": 3025,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 167,
											"end": 3025,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 167,
											"end": 3025,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 167,
											"end": 3025,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 167,
											"end": 3025,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 167,
											"end": 3025,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 167,
											"end": 3025,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 167,
											"end": 3025,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 167,
											"end": 3025,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 167,
											"end": 3025,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 167,
											"end": 3025,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 167,
											"end": 3025,
											"name": "tag",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 167,
											"end": 3025,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 167,
											"end": 3025,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 167,
											"end": 3025,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 167,
											"end": 3025,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 167,
											"end": 3025,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 167,
											"end": 3025,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 167,
											"end": 3025,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 167,
											"end": 3025,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 167,
											"end": 3025,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 167,
											"end": 3025,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 167,
											"end": 3025,
											"name": "SHR",
											"source": 6
										},
										{
											"begin": 167,
											"end": 3025,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 167,
											"end": 3025,
											"name": "PUSH",
											"source": 6,
											"value": "42966C68"
										},
										{
											"begin": 167,
											"end": 3025,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 167,
											"end": 3025,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 167,
											"end": 3025,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 167,
											"end": 3025,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 167,
											"end": 3025,
											"name": "PUSH",
											"source": 6,
											"value": "8DA5CB5B"
										},
										{
											"begin": 167,
											"end": 3025,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 167,
											"end": 3025,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 167,
											"end": 3025,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 167,
											"end": 3025,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 167,
											"end": 3025,
											"name": "PUSH",
											"source": 6,
											"value": "8DA5CB5B"
										},
										{
											"begin": 167,
											"end": 3025,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 167,
											"end": 3025,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "18"
										},
										{
											"begin": 167,
											"end": 3025,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 167,
											"end": 3025,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 167,
											"end": 3025,
											"name": "PUSH",
											"source": 6,
											"value": "95D89B41"
										},
										{
											"begin": 167,
											"end": 3025,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 167,
											"end": 3025,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "19"
										},
										{
											"begin": 167,
											"end": 3025,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 167,
											"end": 3025,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 167,
											"end": 3025,
											"name": "PUSH",
											"source": 6,
											"value": "A9059CBB"
										},
										{
											"begin": 167,
											"end": 3025,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 167,
											"end": 3025,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 167,
											"end": 3025,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 167,
											"end": 3025,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 167,
											"end": 3025,
											"name": "PUSH",
											"source": 6,
											"value": "CD3293DE"
										},
										{
											"begin": 167,
											"end": 3025,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 167,
											"end": 3025,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "21"
										},
										{
											"begin": 167,
											"end": 3025,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 167,
											"end": 3025,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 167,
											"end": 3025,
											"name": "PUSH",
											"source": 6,
											"value": "DD62ED3E"
										},
										{
											"begin": 167,
											"end": 3025,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 167,
											"end": 3025,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 167,
											"end": 3025,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 167,
											"end": 3025,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 167,
											"end": 3025,
											"name": "PUSH",
											"source": 6,
											"value": "F2FDE38B"
										},
										{
											"begin": 167,
											"end": 3025,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 167,
											"end": 3025,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "23"
										},
										{
											"begin": 167,
											"end": 3025,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 167,
											"end": 3025,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 167,
											"end": 3025,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 167,
											"end": 3025,
											"name": "tag",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 167,
											"end": 3025,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 167,
											"end": 3025,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 167,
											"end": 3025,
											"name": "PUSH",
											"source": 6,
											"value": "42966C68"
										},
										{
											"begin": 167,
											"end": 3025,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 167,
											"end": 3025,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "13"
										},
										{
											"begin": 167,
											"end": 3025,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 167,
											"end": 3025,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 167,
											"end": 3025,
											"name": "PUSH",
											"source": 6,
											"value": "59D7BD71"
										},
										{
											"begin": 167,
											"end": 3025,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 167,
											"end": 3025,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 167,
											"end": 3025,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 167,
											"end": 3025,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 167,
											"end": 3025,
											"name": "PUSH",
											"source": 6,
											"value": "70A08231"
										},
										{
											"begin": 167,
											"end": 3025,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 167,
											"end": 3025,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "15"
										},
										{
											"begin": 167,
											"end": 3025,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 167,
											"end": 3025,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 167,
											"end": 3025,
											"name": "PUSH",
											"source": 6,
											"value": "715018A6"
										},
										{
											"begin": 167,
											"end": 3025,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 167,
											"end": 3025,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "16"
										},
										{
											"begin": 167,
											"end": 3025,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 167,
											"end": 3025,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 167,
											"end": 3025,
											"name": "PUSH",
											"source": 6,
											"value": "8AC27F5F"
										},
										{
											"begin": 167,
											"end": 3025,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 167,
											"end": 3025,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "17"
										},
										{
											"begin": 167,
											"end": 3025,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 167,
											"end": 3025,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 167,
											"end": 3025,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 167,
											"end": 3025,
											"name": "tag",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 167,
											"end": 3025,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 167,
											"end": 3025,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 167,
											"end": 3025,
											"name": "PUSH",
											"source": 6,
											"value": "23B872DD"
										},
										{
											"begin": 167,
											"end": 3025,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 167,
											"end": 3025,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 167,
											"end": 3025,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 167,
											"end": 3025,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 167,
											"end": 3025,
											"name": "PUSH",
											"source": 6,
											"value": "23B872DD"
										},
										{
											"begin": 167,
											"end": 3025,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 167,
											"end": 3025,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 167,
											"end": 3025,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 167,
											"end": 3025,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 167,
											"end": 3025,
											"name": "PUSH",
											"source": 6,
											"value": "2D3E474A"
										},
										{
											"begin": 167,
											"end": 3025,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 167,
											"end": 3025,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 167,
											"end": 3025,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 167,
											"end": 3025,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 167,
											"end": 3025,
											"name": "PUSH",
											"source": 6,
											"value": "313CE567"
										},
										{
											"begin": 167,
											"end": 3025,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 167,
											"end": 3025,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 167,
											"end": 3025,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 167,
											"end": 3025,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 167,
											"end": 3025,
											"name": "PUSH",
											"source": 6,
											"value": "3829B0DC"
										},
										{
											"begin": 167,
											"end": 3025,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 167,
											"end": 3025,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 167,
											"end": 3025,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 167,
											"end": 3025,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 167,
											"end": 3025,
											"name": "PUSH",
											"source": 6,
											"value": "40C10F19"
										},
										{
											"begin": 167,
											"end": 3025,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 167,
											"end": 3025,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 167,
											"end": 3025,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 167,
											"end": 3025,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 167,
											"end": 3025,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 167,
											"end": 3025,
											"name": "tag",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 167,
											"end": 3025,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 167,
											"end": 3025,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 167,
											"end": 3025,
											"name": "PUSH",
											"source": 6,
											"value": "6FDDE03"
										},
										{
											"begin": 167,
											"end": 3025,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 167,
											"end": 3025,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 167,
											"end": 3025,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 167,
											"end": 3025,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 167,
											"end": 3025,
											"name": "PUSH",
											"source": 6,
											"value": "95EA7B3"
										},
										{
											"begin": 167,
											"end": 3025,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 167,
											"end": 3025,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 167,
											"end": 3025,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 167,
											"end": 3025,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 167,
											"end": 3025,
											"name": "PUSH",
											"source": 6,
											"value": "18160DDD"
										},
										{
											"begin": 167,
											"end": 3025,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 167,
											"end": 3025,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 167,
											"end": 3025,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 167,
											"end": 3025,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 167,
											"end": 3025,
											"name": "PUSH",
											"source": 6,
											"value": "1F4E1504"
										},
										{
											"begin": 167,
											"end": 3025,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 167,
											"end": 3025,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 167,
											"end": 3025,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 167,
											"end": 3025,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 167,
											"end": 3025,
											"name": "PUSH",
											"source": 6,
											"value": "221322D5"
										},
										{
											"begin": 167,
											"end": 3025,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 167,
											"end": 3025,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 167,
											"end": 3025,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 167,
											"end": 3025,
											"name": "tag",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 167,
											"end": 3025,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 167,
											"end": 3025,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 167,
											"end": 3025,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 167,
											"end": 3025,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 1779,
											"end": 1868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "tag",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 1779,
											"end": 1868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "tag",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 3998,
											"end": 4184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 3998,
											"end": 4184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 3998,
											"end": 4184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 2849,
											"end": 2946,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "tag",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2849,
											"end": 2946,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "tag",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2918,
											"end": 3023,
											"name": "tag",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 2918,
											"end": 3023,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2918,
											"end": 3023,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "41"
										},
										{
											"begin": 2918,
											"end": 3023,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "42"
										},
										{
											"begin": 2918,
											"end": 3023,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2918,
											"end": 3023,
											"name": "tag",
											"source": 6,
											"value": "41"
										},
										{
											"begin": 2918,
											"end": 3023,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2918,
											"end": 3023,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 469,
											"end": 516,
											"name": "tag",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 469,
											"end": 516,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 469,
											"end": 516,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "43"
										},
										{
											"begin": 469,
											"end": 516,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 469,
											"end": 516,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 469,
											"end": 516,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 469,
											"end": 516,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 469,
											"end": 516,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 469,
											"end": 516,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 469,
											"end": 516,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 469,
											"end": 516,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 469,
											"end": 516,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 469,
											"end": 516,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 469,
											"end": 516,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "45"
										},
										{
											"begin": 469,
											"end": 516,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 469,
											"end": 516,
											"name": "tag",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 469,
											"end": 516,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 469,
											"end": 516,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "46"
										},
										{
											"begin": 469,
											"end": 516,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 469,
											"end": 516,
											"name": "tag",
											"source": 6,
											"value": "43"
										},
										{
											"begin": 469,
											"end": 516,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 469,
											"end": 516,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 469,
											"end": 516,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 469,
											"end": 516,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "47"
										},
										{
											"begin": 469,
											"end": 516,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 469,
											"end": 516,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 469,
											"end": 516,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 469,
											"end": 516,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 469,
											"end": 516,
											"name": "tag",
											"source": 6,
											"value": "47"
										},
										{
											"begin": 469,
											"end": 516,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 469,
											"end": 516,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 469,
											"end": 516,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 469,
											"end": 516,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 469,
											"end": 516,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 469,
											"end": 516,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 469,
											"end": 516,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 469,
											"end": 516,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 2250,
											"end": 2482,
											"name": "tag",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 2250,
											"end": 2482,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2250,
											"end": 2482,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "48"
										},
										{
											"begin": 2250,
											"end": 2482,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2250,
											"end": 2482,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2250,
											"end": 2482,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 2250,
											"end": 2482,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2250,
											"end": 2482,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2250,
											"end": 2482,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2250,
											"end": 2482,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2250,
											"end": 2482,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "49"
										},
										{
											"begin": 2250,
											"end": 2482,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2250,
											"end": 2482,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2250,
											"end": 2482,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "50"
										},
										{
											"begin": 2250,
											"end": 2482,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2250,
											"end": 2482,
											"name": "tag",
											"source": 6,
											"value": "49"
										},
										{
											"begin": 2250,
											"end": 2482,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2250,
											"end": 2482,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "51"
										},
										{
											"begin": 2250,
											"end": 2482,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2250,
											"end": 2482,
											"name": "tag",
											"source": 6,
											"value": "48"
										},
										{
											"begin": 2250,
											"end": 2482,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2250,
											"end": 2482,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2250,
											"end": 2482,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2250,
											"end": 2482,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "52"
										},
										{
											"begin": 2250,
											"end": 2482,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2250,
											"end": 2482,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2250,
											"end": 2482,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "36"
										},
										{
											"begin": 2250,
											"end": 2482,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2250,
											"end": 2482,
											"name": "tag",
											"source": 6,
											"value": "52"
										},
										{
											"begin": 2250,
											"end": 2482,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2250,
											"end": 2482,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2250,
											"end": 2482,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2250,
											"end": 2482,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2250,
											"end": 2482,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2250,
											"end": 2482,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2250,
											"end": 2482,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2250,
											"end": 2482,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 358,
											"end": 382,
											"name": "tag",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 358,
											"end": 382,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 358,
											"end": 382,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "53"
										},
										{
											"begin": 358,
											"end": 382,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "54"
										},
										{
											"begin": 358,
											"end": 382,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 358,
											"end": 382,
											"name": "tag",
											"source": 6,
											"value": "53"
										},
										{
											"begin": 358,
											"end": 382,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 358,
											"end": 382,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 358,
											"end": 382,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 358,
											"end": 382,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "55"
										},
										{
											"begin": 358,
											"end": 382,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 358,
											"end": 382,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 358,
											"end": 382,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "56"
										},
										{
											"begin": 358,
											"end": 382,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 358,
											"end": 382,
											"name": "tag",
											"source": 6,
											"value": "55"
										},
										{
											"begin": 358,
											"end": 382,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 358,
											"end": 382,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 358,
											"end": 382,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 358,
											"end": 382,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 358,
											"end": 382,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 358,
											"end": 382,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 358,
											"end": 382,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 358,
											"end": 382,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "tag",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 2707,
											"end": 2789,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "tag",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2707,
											"end": 2789,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "tag",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 298,
											"end": 324,
											"name": "tag",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 298,
											"end": 324,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 298,
											"end": 324,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "61"
										},
										{
											"begin": 298,
											"end": 324,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "62"
										},
										{
											"begin": 298,
											"end": 324,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 298,
											"end": 324,
											"name": "tag",
											"source": 6,
											"value": "61"
										},
										{
											"begin": 298,
											"end": 324,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 298,
											"end": 324,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 298,
											"end": 324,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 298,
											"end": 324,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "63"
										},
										{
											"begin": 298,
											"end": 324,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 298,
											"end": 324,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 298,
											"end": 324,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "56"
										},
										{
											"begin": 298,
											"end": 324,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 298,
											"end": 324,
											"name": "tag",
											"source": 6,
											"value": "63"
										},
										{
											"begin": 298,
											"end": 324,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 298,
											"end": 324,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 298,
											"end": 324,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 298,
											"end": 324,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 298,
											"end": 324,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 298,
											"end": 324,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 298,
											"end": 324,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 298,
											"end": 324,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 2553,
											"end": 2646,
											"name": "tag",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 2553,
											"end": 2646,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2553,
											"end": 2646,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 2553,
											"end": 2646,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2553,
											"end": 2646,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2553,
											"end": 2646,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 2553,
											"end": 2646,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2553,
											"end": 2646,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2553,
											"end": 2646,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2553,
											"end": 2646,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2553,
											"end": 2646,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "65"
										},
										{
											"begin": 2553,
											"end": 2646,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2553,
											"end": 2646,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2553,
											"end": 2646,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "33"
										},
										{
											"begin": 2553,
											"end": 2646,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2553,
											"end": 2646,
											"name": "tag",
											"source": 6,
											"value": "65"
										},
										{
											"begin": 2553,
											"end": 2646,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2553,
											"end": 2646,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "66"
										},
										{
											"begin": 2553,
											"end": 2646,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2553,
											"end": 2646,
											"name": "tag",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 2553,
											"end": 2646,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2553,
											"end": 2646,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 2738,
											"end": 2827,
											"name": "tag",
											"source": 6,
											"value": "13"
										},
										{
											"begin": 2738,
											"end": 2827,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2738,
											"end": 2827,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "67"
										},
										{
											"begin": 2738,
											"end": 2827,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2738,
											"end": 2827,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2738,
											"end": 2827,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 2738,
											"end": 2827,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2738,
											"end": 2827,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2738,
											"end": 2827,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2738,
											"end": 2827,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2738,
											"end": 2827,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "68"
										},
										{
											"begin": 2738,
											"end": 2827,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2738,
											"end": 2827,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2738,
											"end": 2827,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "69"
										},
										{
											"begin": 2738,
											"end": 2827,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2738,
											"end": 2827,
											"name": "tag",
											"source": 6,
											"value": "68"
										},
										{
											"begin": 2738,
											"end": 2827,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2738,
											"end": 2827,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "70"
										},
										{
											"begin": 2738,
											"end": 2827,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2738,
											"end": 2827,
											"name": "tag",
											"source": 6,
											"value": "67"
										},
										{
											"begin": 2738,
											"end": 2827,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2738,
											"end": 2827,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 388,
											"end": 422,
											"name": "tag",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 388,
											"end": 422,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 388,
											"end": 422,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "71"
										},
										{
											"begin": 388,
											"end": 422,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "72"
										},
										{
											"begin": 388,
											"end": 422,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 388,
											"end": 422,
											"name": "tag",
											"source": 6,
											"value": "71"
										},
										{
											"begin": 388,
											"end": 422,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 388,
											"end": 422,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 388,
											"end": 422,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 388,
											"end": 422,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "73"
										},
										{
											"begin": 388,
											"end": 422,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 388,
											"end": 422,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 388,
											"end": 422,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "56"
										},
										{
											"begin": 388,
											"end": 422,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 388,
											"end": 422,
											"name": "tag",
											"source": 6,
											"value": "73"
										},
										{
											"begin": 388,
											"end": 422,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 388,
											"end": 422,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 388,
											"end": 422,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 388,
											"end": 422,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 388,
											"end": 422,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 388,
											"end": 422,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 388,
											"end": 422,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 388,
											"end": 422,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 3004,
											"end": 3120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 3004,
											"end": 3120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3004,
											"end": 3120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 268,
											"end": 292,
											"name": "tag",
											"source": 6,
											"value": "17"
										},
										{
											"begin": 268,
											"end": 292,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 268,
											"end": 292,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 268,
											"end": 292,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "81"
										},
										{
											"begin": 268,
											"end": 292,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 268,
											"end": 292,
											"name": "tag",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 268,
											"end": 292,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 268,
											"end": 292,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 268,
											"end": 292,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 268,
											"end": 292,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "82"
										},
										{
											"begin": 268,
											"end": 292,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 268,
											"end": 292,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 268,
											"end": 292,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "56"
										},
										{
											"begin": 268,
											"end": 292,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 268,
											"end": 292,
											"name": "tag",
											"source": 6,
											"value": "82"
										},
										{
											"begin": 268,
											"end": 292,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 268,
											"end": 292,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 268,
											"end": 292,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 268,
											"end": 292,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 268,
											"end": 292,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 268,
											"end": 292,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 268,
											"end": 292,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 268,
											"end": 292,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "tag",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 1981,
											"end": 2074,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "tag",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 1981,
											"end": 2074,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "tag",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1966,
											"end": 2176,
											"name": "tag",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1966,
											"end": 2176,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1966,
											"end": 2176,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "89"
										},
										{
											"begin": 1966,
											"end": 2176,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1966,
											"end": 2176,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1966,
											"end": 2176,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 1966,
											"end": 2176,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1966,
											"end": 2176,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1966,
											"end": 2176,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1966,
											"end": 2176,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1966,
											"end": 2176,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "90"
										},
										{
											"begin": 1966,
											"end": 2176,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1966,
											"end": 2176,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1966,
											"end": 2176,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "33"
										},
										{
											"begin": 1966,
											"end": 2176,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1966,
											"end": 2176,
											"name": "tag",
											"source": 6,
											"value": "90"
										},
										{
											"begin": 1966,
											"end": 2176,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1966,
											"end": 2176,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "91"
										},
										{
											"begin": 1966,
											"end": 2176,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1966,
											"end": 2176,
											"name": "tag",
											"source": 6,
											"value": "89"
										},
										{
											"begin": 1966,
											"end": 2176,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1966,
											"end": 2176,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1966,
											"end": 2176,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1966,
											"end": 2176,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "92"
										},
										{
											"begin": 1966,
											"end": 2176,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1966,
											"end": 2176,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1966,
											"end": 2176,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "36"
										},
										{
											"begin": 1966,
											"end": 2176,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1966,
											"end": 2176,
											"name": "tag",
											"source": 6,
											"value": "92"
										},
										{
											"begin": 1966,
											"end": 2176,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1966,
											"end": 2176,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1966,
											"end": 2176,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1966,
											"end": 2176,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1966,
											"end": 2176,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1966,
											"end": 2176,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1966,
											"end": 2176,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1966,
											"end": 2176,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 330,
											"end": 352,
											"name": "tag",
											"source": 6,
											"value": "21"
										},
										{
											"begin": 330,
											"end": 352,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 330,
											"end": 352,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "93"
										},
										{
											"begin": 330,
											"end": 352,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "94"
										},
										{
											"begin": 330,
											"end": 352,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 330,
											"end": 352,
											"name": "tag",
											"source": 6,
											"value": "93"
										},
										{
											"begin": 330,
											"end": 352,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 330,
											"end": 352,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 330,
											"end": 352,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 330,
											"end": 352,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "95"
										},
										{
											"begin": 330,
											"end": 352,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 330,
											"end": 352,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 330,
											"end": 352,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "56"
										},
										{
											"begin": 330,
											"end": 352,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 330,
											"end": 352,
											"name": "tag",
											"source": 6,
											"value": "95"
										},
										{
											"begin": 330,
											"end": 352,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 330,
											"end": 352,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 330,
											"end": 352,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 330,
											"end": 352,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 330,
											"end": 352,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 330,
											"end": 352,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 330,
											"end": 352,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 330,
											"end": 352,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 3551,
											"end": 3691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 3551,
											"end": 3691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3551,
											"end": 3691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "tag",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1824,
											"end": 1837,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 1856,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 1849,
											"end": 1861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 1849,
											"end": 1861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "108"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "108"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 2,
											"value": "110"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "110"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 2,
											"value": "108"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4071,
											"end": 4075,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4087,
											"end": 4100,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4103,
											"end": 4115,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 4103,
											"end": 4113,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "113"
										},
										{
											"begin": 4103,
											"end": 4115,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4103,
											"end": 4115,
											"name": "tag",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 4103,
											"end": 4115,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4087,
											"end": 4115,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4087,
											"end": 4115,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4125,
											"end": 4156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "114"
										},
										{
											"begin": 4134,
											"end": 4139,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4141,
											"end": 4148,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4150,
											"end": 4155,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4125,
											"end": 4133,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "115"
										},
										{
											"begin": 4125,
											"end": 4156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4125,
											"end": 4156,
											"name": "tag",
											"source": 2,
											"value": "114"
										},
										{
											"begin": 4125,
											"end": 4156,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4173,
											"end": 4177,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 4166,
											"end": 4177,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4166,
											"end": 4177,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4166,
											"end": 4177,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "tag",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2901,
											"end": 2908,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2927,
											"end": 2939,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2927,
											"end": 2939,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2920,
											"end": 2939,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2920,
											"end": 2939,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2918,
											"end": 3023,
											"name": "tag",
											"source": 6,
											"value": "42"
										},
										{
											"begin": 2918,
											"end": 3023,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2918,
											"end": 3023,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 469,
											"end": 516,
											"name": "tag",
											"source": 6,
											"value": "46"
										},
										{
											"begin": 469,
											"end": 516,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 469,
											"end": 516,
											"name": "PUSH",
											"source": 6,
											"value": "B"
										},
										{
											"begin": 469,
											"end": 516,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 469,
											"end": 516,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 469,
											"end": 516,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 469,
											"end": 516,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 469,
											"end": 516,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 469,
											"end": 516,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 469,
											"end": 516,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 469,
											"end": 516,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 469,
											"end": 516,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 469,
											"end": 516,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 469,
											"end": 516,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 469,
											"end": 516,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 469,
											"end": 516,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 469,
											"end": 516,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 469,
											"end": 516,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 469,
											"end": 516,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2250,
											"end": 2482,
											"name": "tag",
											"source": 6,
											"value": "51"
										},
										{
											"begin": 2250,
											"end": 2482,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2339,
											"end": 2343,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2382,
											"end": 2394,
											"name": "PUSH",
											"source": 6,
											"value": "B"
										},
										{
											"begin": 2382,
											"end": 2400,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2395,
											"end": 2399,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2382,
											"end": 2400,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2382,
											"end": 2400,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2382,
											"end": 2400,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2382,
											"end": 2400,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2382,
											"end": 2400,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2382,
											"end": 2400,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2382,
											"end": 2400,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2382,
											"end": 2400,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2382,
											"end": 2400,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2382,
											"end": 2400,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2382,
											"end": 2400,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2382,
											"end": 2400,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2382,
											"end": 2400,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2382,
											"end": 2400,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2382,
											"end": 2400,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 2382,
											"end": 2400,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2363,
											"end": 2378,
											"name": "TIMESTAMP",
											"source": 6
										},
										{
											"begin": 2363,
											"end": 2400,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 2363,
											"end": 2400,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2355,
											"end": 2422,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "122"
										},
										{
											"begin": 2355,
											"end": 2422,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2355,
											"end": 2422,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2355,
											"end": 2422,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2355,
											"end": 2422,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2355,
											"end": 2422,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2355,
											"end": 2422,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2355,
											"end": 2422,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2355,
											"end": 2422,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2355,
											"end": 2422,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "123"
										},
										{
											"begin": 2355,
											"end": 2422,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2355,
											"end": 2422,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "124"
										},
										{
											"begin": 2355,
											"end": 2422,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2355,
											"end": 2422,
											"name": "tag",
											"source": 6,
											"value": "123"
										},
										{
											"begin": 2355,
											"end": 2422,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2355,
											"end": 2422,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2355,
											"end": 2422,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2355,
											"end": 2422,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2355,
											"end": 2422,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2355,
											"end": 2422,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2355,
											"end": 2422,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2355,
											"end": 2422,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2355,
											"end": 2422,
											"name": "tag",
											"source": 6,
											"value": "122"
										},
										{
											"begin": 2355,
											"end": 2422,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2439,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "125"
										},
										{
											"begin": 2458,
											"end": 2462,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2464,
											"end": 2466,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2468,
											"end": 2474,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2439,
											"end": 2457,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "126"
										},
										{
											"begin": 2439,
											"end": 2475,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2439,
											"end": 2475,
											"name": "tag",
											"source": 6,
											"value": "125"
										},
										{
											"begin": 2439,
											"end": 2475,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2432,
											"end": 2475,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2432,
											"end": 2475,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2250,
											"end": 2482,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 2250,
											"end": 2482,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2250,
											"end": 2482,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2250,
											"end": 2482,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2250,
											"end": 2482,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2250,
											"end": 2482,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 358,
											"end": 382,
											"name": "tag",
											"source": 6,
											"value": "54"
										},
										{
											"begin": 358,
											"end": 382,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 358,
											"end": 382,
											"name": "PUSH",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 358,
											"end": 382,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 358,
											"end": 382,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 358,
											"end": 382,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 358,
											"end": 382,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 358,
											"end": 382,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 358,
											"end": 382,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 358,
											"end": 382,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 358,
											"end": 382,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 358,
											"end": 382,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 358,
											"end": 382,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 358,
											"end": 382,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 358,
											"end": 382,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "tag",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2756,
											"end": 2761,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2780,
											"end": 2782,
											"name": "PUSH",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 2773,
											"end": 2782,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2773,
											"end": 2782,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 298,
											"end": 324,
											"name": "tag",
											"source": 6,
											"value": "62"
										},
										{
											"begin": 298,
											"end": 324,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 298,
											"end": 324,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 298,
											"end": 324,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 298,
											"end": 324,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 298,
											"end": 324,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 298,
											"end": 324,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 298,
											"end": 324,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 298,
											"end": 324,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 298,
											"end": 324,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 298,
											"end": 324,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 298,
											"end": 324,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 298,
											"end": 324,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 298,
											"end": 324,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 298,
											"end": 324,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2553,
											"end": 2646,
											"name": "tag",
											"source": 6,
											"value": "66"
										},
										{
											"begin": 2553,
											"end": 2646,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2622,
											"end": 2639,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "131"
										},
										{
											"begin": 2628,
											"end": 2630,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2632,
											"end": 2638,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2622,
											"end": 2627,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "132"
										},
										{
											"begin": 2622,
											"end": 2639,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2622,
											"end": 2639,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "131"
										},
										{
											"begin": 2622,
											"end": 2639,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2553,
											"end": 2646,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2553,
											"end": 2646,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2553,
											"end": 2646,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2738,
											"end": 2827,
											"name": "tag",
											"source": 6,
											"value": "70"
										},
										{
											"begin": 2738,
											"end": 2827,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2795,
											"end": 2820,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "136"
										},
										{
											"begin": 2801,
											"end": 2811,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 2813,
											"end": 2819,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2795,
											"end": 2800,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "137"
										},
										{
											"begin": 2795,
											"end": 2820,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2795,
											"end": 2820,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "136"
										},
										{
											"begin": 2795,
											"end": 2820,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2738,
											"end": 2827,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2738,
											"end": 2827,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 388,
											"end": 422,
											"name": "tag",
											"source": 6,
											"value": "72"
										},
										{
											"begin": 388,
											"end": 422,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 388,
											"end": 422,
											"name": "PUSH",
											"source": 6,
											"value": "A"
										},
										{
											"begin": 388,
											"end": 422,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 388,
											"end": 422,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 388,
											"end": 422,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 388,
											"end": 422,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 388,
											"end": 422,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 388,
											"end": 422,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 388,
											"end": 422,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 388,
											"end": 422,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 388,
											"end": 422,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 388,
											"end": 422,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 388,
											"end": 422,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 388,
											"end": 422,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3069,
											"end": 3076,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3095,
											"end": 3104,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3105,
											"end": 3112,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3088,
											"end": 3113,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3088,
											"end": 3113,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 268,
											"end": 292,
											"name": "tag",
											"source": 6,
											"value": "81"
										},
										{
											"begin": 268,
											"end": 292,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 268,
											"end": 292,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 268,
											"end": 292,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 268,
											"end": 292,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 268,
											"end": 292,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 268,
											"end": 292,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 268,
											"end": 292,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 268,
											"end": 292,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 268,
											"end": 292,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 268,
											"end": 292,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 268,
											"end": 292,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 268,
											"end": 292,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 268,
											"end": 292,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 268,
											"end": 292,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "tag",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2028,
											"end": 2041,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2060,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "146"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 2053,
											"end": 2067,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "tag",
											"source": 2,
											"value": "146"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "147"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 2053,
											"end": 2067,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "tag",
											"source": 2,
											"value": "147"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "148"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "149"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "148"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "tag",
											"source": 2,
											"value": "149"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "tag",
											"source": 2,
											"value": "150"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "150"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "tag",
											"source": 2,
											"value": "148"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1966,
											"end": 2176,
											"name": "tag",
											"source": 6,
											"value": "91"
										},
										{
											"begin": 1966,
											"end": 2176,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2037,
											"end": 2041,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2080,
											"end": 2092,
											"name": "PUSH",
											"source": 6,
											"value": "B"
										},
										{
											"begin": 2080,
											"end": 2104,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2093,
											"end": 2103,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 2080,
											"end": 2104,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2080,
											"end": 2104,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2080,
											"end": 2104,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2080,
											"end": 2104,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2080,
											"end": 2104,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2080,
											"end": 2104,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2080,
											"end": 2104,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2080,
											"end": 2104,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2080,
											"end": 2104,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2080,
											"end": 2104,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2080,
											"end": 2104,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2080,
											"end": 2104,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2080,
											"end": 2104,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2080,
											"end": 2104,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2080,
											"end": 2104,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 2080,
											"end": 2104,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2061,
											"end": 2076,
											"name": "TIMESTAMP",
											"source": 6
										},
										{
											"begin": 2061,
											"end": 2104,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 2061,
											"end": 2104,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2053,
											"end": 2126,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "152"
										},
										{
											"begin": 2053,
											"end": 2126,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2053,
											"end": 2126,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2053,
											"end": 2126,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2053,
											"end": 2126,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2053,
											"end": 2126,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2053,
											"end": 2126,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2053,
											"end": 2126,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2053,
											"end": 2126,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2053,
											"end": 2126,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "153"
										},
										{
											"begin": 2053,
											"end": 2126,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2053,
											"end": 2126,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "124"
										},
										{
											"begin": 2053,
											"end": 2126,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2053,
											"end": 2126,
											"name": "tag",
											"source": 6,
											"value": "153"
										},
										{
											"begin": 2053,
											"end": 2126,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2053,
											"end": 2126,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2053,
											"end": 2126,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2053,
											"end": 2126,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2053,
											"end": 2126,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2053,
											"end": 2126,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2053,
											"end": 2126,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2053,
											"end": 2126,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2053,
											"end": 2126,
											"name": "tag",
											"source": 6,
											"value": "152"
										},
										{
											"begin": 2053,
											"end": 2126,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2143,
											"end": 2169,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "154"
										},
										{
											"begin": 2158,
											"end": 2160,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2162,
											"end": 2168,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2143,
											"end": 2157,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "155"
										},
										{
											"begin": 2143,
											"end": 2169,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2143,
											"end": 2169,
											"name": "tag",
											"source": 6,
											"value": "154"
										},
										{
											"begin": 2143,
											"end": 2169,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2136,
											"end": 2169,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2136,
											"end": 2169,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1966,
											"end": 2176,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1966,
											"end": 2176,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1966,
											"end": 2176,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1966,
											"end": 2176,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1966,
											"end": 2176,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 330,
											"end": 352,
											"name": "tag",
											"source": 6,
											"value": "94"
										},
										{
											"begin": 330,
											"end": 352,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 330,
											"end": 352,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 330,
											"end": 352,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 330,
											"end": 352,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 330,
											"end": 352,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 330,
											"end": 352,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 330,
											"end": 352,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 330,
											"end": 352,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 330,
											"end": 352,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 330,
											"end": 352,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 330,
											"end": 352,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 330,
											"end": 352,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 330,
											"end": 352,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 330,
											"end": 352,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3631,
											"end": 3638,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3657,
											"end": 3668,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3669,
											"end": 3674,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3676,
											"end": 3683,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3650,
											"end": 3684,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3650,
											"end": 3684,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2647,
											"end": 2648,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2635,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 2672,
											"end": 2703,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 5,
											"value": "113"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "tag",
											"source": 2,
											"value": "115"
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8810,
											"end": 8847,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "165"
										},
										{
											"begin": 8819,
											"end": 8824,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8826,
											"end": 8833,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8835,
											"end": 8840,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8842,
											"end": 8846,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 8810,
											"end": 8818,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "166"
										},
										{
											"begin": 8810,
											"end": 8847,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8810,
											"end": 8847,
											"name": "tag",
											"source": 2,
											"value": "165"
										},
										{
											"begin": 8810,
											"end": 8847,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8726,
											"end": 8854,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 1866,
											"end": 1876,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 1866,
											"end": 1878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "tag",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 1855,
											"end": 1860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 1855,
											"end": 1862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "tag",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 1928,
											"end": 1938,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 1928,
											"end": 1940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "tag",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 1901,
											"end": 1941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "tag",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "tag",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "tag",
											"source": 2,
											"value": "126"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4863,
											"end": 4867,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4879,
											"end": 4894,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4897,
											"end": 4909,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "174"
										},
										{
											"begin": 4897,
											"end": 4907,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "113"
										},
										{
											"begin": 4897,
											"end": 4909,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4897,
											"end": 4909,
											"name": "tag",
											"source": 2,
											"value": "174"
										},
										{
											"begin": 4897,
											"end": 4909,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4879,
											"end": 4909,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4879,
											"end": 4909,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4919,
											"end": 4956,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "175"
										},
										{
											"begin": 4935,
											"end": 4939,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4941,
											"end": 4948,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4950,
											"end": 4955,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4919,
											"end": 4934,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "176"
										},
										{
											"begin": 4919,
											"end": 4956,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4919,
											"end": 4956,
											"name": "tag",
											"source": 2,
											"value": "175"
										},
										{
											"begin": 4919,
											"end": 4956,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4966,
											"end": 4992,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "177"
										},
										{
											"begin": 4976,
											"end": 4980,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4982,
											"end": 4984,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4986,
											"end": 4991,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4966,
											"end": 4975,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "178"
										},
										{
											"begin": 4966,
											"end": 4992,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4966,
											"end": 4992,
											"name": "tag",
											"source": 2,
											"value": "177"
										},
										{
											"begin": 4966,
											"end": 4992,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5009,
											"end": 5013,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 5002,
											"end": 5013,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5002,
											"end": 5013,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5002,
											"end": 5013,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7458,
											"end": 7666,
											"name": "tag",
											"source": 2,
											"value": "132"
										},
										{
											"begin": 7458,
											"end": 7666,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7547,
											"end": 7548,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7528,
											"end": 7549,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7528,
											"end": 7549,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7528,
											"end": 7535,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7528,
											"end": 7549,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7528,
											"end": 7549,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7528,
											"end": 7549,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7524,
											"end": 7615,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "180"
										},
										{
											"begin": 7524,
											"end": 7615,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7601,
											"end": 7602,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "PUSH",
											"source": 2,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "181"
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 7572,
											"end": 7604,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "tag",
											"source": 2,
											"value": "181"
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 7524,
											"end": 7615,
											"name": "tag",
											"source": 2,
											"value": "180"
										},
										{
											"begin": 7524,
											"end": 7615,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7624,
											"end": 7659,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "182"
										},
										{
											"begin": 7640,
											"end": 7641,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7644,
											"end": 7651,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7653,
											"end": 7658,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7624,
											"end": 7631,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "183"
										},
										{
											"begin": 7624,
											"end": 7659,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7624,
											"end": 7659,
											"name": "tag",
											"source": 2,
											"value": "182"
										},
										{
											"begin": 7624,
											"end": 7659,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7458,
											"end": 7666,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7458,
											"end": 7666,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7458,
											"end": 7666,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7984,
											"end": 8190,
											"name": "tag",
											"source": 2,
											"value": "137"
										},
										{
											"begin": 7984,
											"end": 8190,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8073,
											"end": 8074,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8054,
											"end": 8075,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8054,
											"end": 8075,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8054,
											"end": 8061,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8054,
											"end": 8075,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8054,
											"end": 8075,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8054,
											"end": 8075,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 8050,
											"end": 8139,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "185"
										},
										{
											"begin": 8050,
											"end": 8139,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 8125,
											"end": 8126,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "PUSH",
											"source": 2,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "186"
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 8098,
											"end": 8128,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "tag",
											"source": 2,
											"value": "186"
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 8050,
											"end": 8139,
											"name": "tag",
											"source": 2,
											"value": "185"
										},
										{
											"begin": 8050,
											"end": 8139,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8148,
											"end": 8183,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "187"
										},
										{
											"begin": 8156,
											"end": 8163,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8173,
											"end": 8174,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8177,
											"end": 8182,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8148,
											"end": 8155,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "183"
										},
										{
											"begin": 8148,
											"end": 8183,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8148,
											"end": 8183,
											"name": "tag",
											"source": 2,
											"value": "187"
										},
										{
											"begin": 8148,
											"end": 8183,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7984,
											"end": 8190,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7984,
											"end": 8190,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7984,
											"end": 8190,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3029,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3083,
											"end": 3091,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3073,
											"end": 3081,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "tag",
											"source": 2,
											"value": "155"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3384,
											"end": 3388,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3400,
											"end": 3413,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3416,
											"end": 3428,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "190"
										},
										{
											"begin": 3416,
											"end": 3426,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "113"
										},
										{
											"begin": 3416,
											"end": 3428,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3416,
											"end": 3428,
											"name": "tag",
											"source": 2,
											"value": "190"
										},
										{
											"begin": 3416,
											"end": 3428,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3400,
											"end": 3428,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3400,
											"end": 3428,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3438,
											"end": 3465,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "191"
										},
										{
											"begin": 3448,
											"end": 3453,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3455,
											"end": 3457,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3459,
											"end": 3464,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3438,
											"end": 3447,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "178"
										},
										{
											"begin": 3438,
											"end": 3465,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3438,
											"end": 3465,
											"name": "tag",
											"source": 2,
											"value": "191"
										},
										{
											"begin": 3438,
											"end": 3465,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3482,
											"end": 3486,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3475,
											"end": 3486,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3475,
											"end": 3486,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3475,
											"end": 3486,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "tag",
											"source": 2,
											"value": "166"
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9830,
											"end": 9831,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9813,
											"end": 9818,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9809,
											"end": 9898,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "193"
										},
										{
											"begin": 9809,
											"end": 9898,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 9884,
											"end": 9885,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH",
											"source": 2,
											"value": "E602DF0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "194"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 9855,
											"end": 9887,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "tag",
											"source": 2,
											"value": "194"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 9809,
											"end": 9898,
											"name": "tag",
											"source": 2,
											"value": "193"
										},
										{
											"begin": 9809,
											"end": 9898,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9930,
											"end": 9931,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9911,
											"end": 9918,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9907,
											"end": 9997,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "195"
										},
										{
											"begin": 9907,
											"end": 9997,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 9983,
											"end": 9984,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH",
											"source": 2,
											"value": "94280D6200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "196"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 9955,
											"end": 9986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "tag",
											"source": 2,
											"value": "196"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 9907,
											"end": 9997,
											"name": "tag",
											"source": 2,
											"value": "195"
										},
										{
											"begin": 9907,
											"end": 9997,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10036,
											"end": 10041,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10017,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10018,
											"end": 10023,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10025,
											"end": 10032,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10041,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10041,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10041,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10041,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10055,
											"end": 10064,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "197"
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10101,
											"end": 10108,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10094,
											"end": 10099,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 2,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10110,
											"end": 10115,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "198"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10085,
											"end": 10116,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "tag",
											"source": 2,
											"value": "198"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "tag",
											"source": 2,
											"value": "197"
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9701,
											"end": 10133,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10415,
											"end": 10892,
											"name": "tag",
											"source": 2,
											"value": "176"
										},
										{
											"begin": 10415,
											"end": 10892,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10514,
											"end": 10538,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10541,
											"end": 10566,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "200"
										},
										{
											"begin": 10551,
											"end": 10556,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10558,
											"end": 10565,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10541,
											"end": 10550,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 10541,
											"end": 10566,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10541,
											"end": 10566,
											"name": "tag",
											"source": 2,
											"value": "200"
										},
										{
											"begin": 10541,
											"end": 10566,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10514,
											"end": 10566,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10514,
											"end": 10566,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10600,
											"end": 10617,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10580,
											"end": 10596,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10580,
											"end": 10617,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 10576,
											"end": 10886,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "201"
										},
										{
											"begin": 10576,
											"end": 10886,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10656,
											"end": 10661,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10637,
											"end": 10653,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10637,
											"end": 10661,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 10633,
											"end": 10763,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10633,
											"end": 10763,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "202"
										},
										{
											"begin": 10633,
											"end": 10763,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10715,
											"end": 10722,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10724,
											"end": 10740,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10742,
											"end": 10747,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "PUSH",
											"source": 2,
											"value": "FB8F41B200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "203"
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "204"
										},
										{
											"begin": 10688,
											"end": 10748,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "tag",
											"source": 2,
											"value": "203"
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 10633,
											"end": 10763,
											"name": "tag",
											"source": 2,
											"value": "202"
										},
										{
											"begin": 10633,
											"end": 10763,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10804,
											"end": 10861,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "205"
										},
										{
											"begin": 10813,
											"end": 10818,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10820,
											"end": 10827,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10848,
											"end": 10853,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10829,
											"end": 10845,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10829,
											"end": 10853,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10855,
											"end": 10860,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10804,
											"end": 10812,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "166"
										},
										{
											"begin": 10804,
											"end": 10861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10804,
											"end": 10861,
											"name": "tag",
											"source": 2,
											"value": "205"
										},
										{
											"begin": 10804,
											"end": 10861,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10576,
											"end": 10886,
											"name": "tag",
											"source": 2,
											"value": "201"
										},
										{
											"begin": 10576,
											"end": 10886,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10504,
											"end": 10892,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10415,
											"end": 10892,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10415,
											"end": 10892,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10415,
											"end": 10892,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10415,
											"end": 10892,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "tag",
											"source": 2,
											"value": "178"
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5492,
											"end": 5493,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5476,
											"end": 5480,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5472,
											"end": 5558,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "207"
										},
										{
											"begin": 5472,
											"end": 5558,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5544,
											"end": 5545,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH",
											"source": 2,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "208"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 5517,
											"end": 5547,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "tag",
											"source": 2,
											"value": "208"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 5472,
											"end": 5558,
											"name": "tag",
											"source": 2,
											"value": "207"
										},
										{
											"begin": 5472,
											"end": 5558,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5585,
											"end": 5586,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5571,
											"end": 5573,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5567,
											"end": 5653,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "209"
										},
										{
											"begin": 5567,
											"end": 5653,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5639,
											"end": 5640,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH",
											"source": 2,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "210"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 5610,
											"end": 5642,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "tag",
											"source": 2,
											"value": "210"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 5567,
											"end": 5653,
											"name": "tag",
											"source": 2,
											"value": "209"
										},
										{
											"begin": 5567,
											"end": 5653,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5662,
											"end": 5686,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "211"
										},
										{
											"begin": 5670,
											"end": 5674,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5676,
											"end": 5678,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5680,
											"end": 5685,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5662,
											"end": 5669,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "183"
										},
										{
											"begin": 5662,
											"end": 5686,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5662,
											"end": 5686,
											"name": "tag",
											"source": 2,
											"value": "211"
										},
										{
											"begin": 5662,
											"end": 5686,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5393,
											"end": 5693,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "tag",
											"source": 2,
											"value": "183"
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6113,
											"end": 6114,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6097,
											"end": 6101,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "213"
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6249,
											"end": 6254,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6245,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 6233,
											"end": 6245,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "214"
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "215"
										},
										{
											"begin": 6233,
											"end": 6254,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "tag",
											"source": 2,
											"value": "214"
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "216"
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "tag",
											"source": 2,
											"value": "213"
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6285,
											"end": 6304,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6307,
											"end": 6316,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6317,
											"end": 6321,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6285,
											"end": 6322,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6285,
											"end": 6322,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6354,
											"end": 6359,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6340,
											"end": 6351,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6340,
											"end": 6359,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "217"
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6411,
											"end": 6415,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6417,
											"end": 6428,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6430,
											"end": 6435,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH",
											"source": 2,
											"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "218"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "204"
										},
										{
											"begin": 6386,
											"end": 6436,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "tag",
											"source": 2,
											"value": "218"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "tag",
											"source": 2,
											"value": "217"
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6603,
											"end": 6608,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6589,
											"end": 6600,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6589,
											"end": 6608,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6580,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6581,
											"end": 6585,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6608,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6608,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6608,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6608,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6271,
											"end": 6633,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "tag",
											"source": 2,
											"value": "216"
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6661,
											"end": 6662,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6647,
											"end": 6649,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "219"
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6826,
											"end": 6831,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6810,
											"end": 6822,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 6810,
											"end": 6822,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "220"
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "tag",
											"source": 2,
											"value": "219"
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7038,
											"end": 7043,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7030,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7031,
											"end": 7033,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "tag",
											"source": 2,
											"value": "220"
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7098,
											"end": 7100,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7092,
											"end": 7096,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 2,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 7102,
											"end": 7107,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "221"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7083,
											"end": 7108,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "tag",
											"source": 2,
											"value": "221"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6008,
											"end": 7115,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7,
											"end": 106,
											"name": "tag",
											"source": 7,
											"value": "222"
										},
										{
											"begin": 7,
											"end": 106,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 59,
											"end": 65,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 93,
											"end": 98,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 87,
											"end": 99,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 77,
											"end": 99,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 77,
											"end": 99,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7,
											"end": 106,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7,
											"end": 106,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 112,
											"end": 281,
											"name": "tag",
											"source": 7,
											"value": "223"
										},
										{
											"begin": 112,
											"end": 281,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 196,
											"end": 207,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 230,
											"end": 236,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 225,
											"end": 228,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 218,
											"end": 237,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 270,
											"end": 274,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 265,
											"end": 268,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 261,
											"end": 275,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 246,
											"end": 275,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 246,
											"end": 275,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 112,
											"end": 281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 287,
											"end": 426,
											"name": "tag",
											"source": 7,
											"value": "224"
										},
										{
											"begin": 287,
											"end": 426,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 376,
											"end": 382,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 371,
											"end": 374,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 366,
											"end": 369,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 360,
											"end": 383,
											"name": "MCOPY",
											"source": 7
										},
										{
											"begin": 417,
											"end": 418,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 408,
											"end": 414,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 403,
											"end": 406,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 399,
											"end": 415,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 392,
											"end": 419,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 287,
											"end": 426,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 432,
											"end": 534,
											"name": "tag",
											"source": 7,
											"value": "225"
										},
										{
											"begin": 432,
											"end": 534,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 473,
											"end": 479,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 524,
											"end": 526,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 520,
											"end": 527,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 515,
											"end": 517,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 508,
											"end": 513,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 504,
											"end": 518,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 500,
											"end": 528,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 490,
											"end": 528,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 490,
											"end": 528,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 432,
											"end": 534,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 432,
											"end": 534,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 432,
											"end": 534,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 432,
											"end": 534,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 540,
											"end": 917,
											"name": "tag",
											"source": 7,
											"value": "226"
										},
										{
											"begin": 540,
											"end": 917,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 628,
											"end": 631,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 656,
											"end": 695,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "253"
										},
										{
											"begin": 689,
											"end": 694,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 656,
											"end": 695,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "222"
										},
										{
											"begin": 656,
											"end": 695,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 656,
											"end": 695,
											"name": "tag",
											"source": 7,
											"value": "253"
										},
										{
											"begin": 656,
											"end": 695,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 711,
											"end": 782,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "254"
										},
										{
											"begin": 775,
											"end": 781,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 770,
											"end": 773,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 711,
											"end": 782,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "223"
										},
										{
											"begin": 711,
											"end": 782,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 711,
											"end": 782,
											"name": "tag",
											"source": 7,
											"value": "254"
										},
										{
											"begin": 711,
											"end": 782,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 704,
											"end": 782,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 704,
											"end": 782,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 791,
											"end": 856,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "255"
										},
										{
											"begin": 849,
											"end": 855,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 844,
											"end": 847,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 837,
											"end": 841,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 830,
											"end": 835,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 826,
											"end": 842,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 791,
											"end": 856,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "224"
										},
										{
											"begin": 791,
											"end": 856,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 791,
											"end": 856,
											"name": "tag",
											"source": 7,
											"value": "255"
										},
										{
											"begin": 791,
											"end": 856,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 881,
											"end": 910,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "256"
										},
										{
											"begin": 903,
											"end": 909,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 881,
											"end": 910,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "225"
										},
										{
											"begin": 881,
											"end": 910,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 881,
											"end": 910,
											"name": "tag",
											"source": 7,
											"value": "256"
										},
										{
											"begin": 881,
											"end": 910,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 876,
											"end": 879,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 872,
											"end": 911,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 865,
											"end": 911,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 865,
											"end": 911,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 632,
											"end": 917,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 540,
											"end": 917,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 540,
											"end": 917,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 540,
											"end": 917,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 540,
											"end": 917,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 540,
											"end": 917,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "tag",
											"source": 7,
											"value": "30"
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1036,
											"end": 1040,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1074,
											"end": 1076,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1063,
											"end": 1072,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1059,
											"end": 1077,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1051,
											"end": 1077,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1051,
											"end": 1077,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1123,
											"end": 1132,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1117,
											"end": 1121,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1113,
											"end": 1133,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1109,
											"end": 1110,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1098,
											"end": 1107,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1094,
											"end": 1111,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1087,
											"end": 1134,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "258"
										},
										{
											"begin": 1224,
											"end": 1228,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1215,
											"end": 1221,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "226"
										},
										{
											"begin": 1151,
											"end": 1229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "tag",
											"source": 7,
											"value": "258"
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1143,
											"end": 1229,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1143,
											"end": 1229,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 923,
											"end": 1236,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1323,
											"end": 1440,
											"name": "tag",
											"source": 7,
											"value": "228"
										},
										{
											"begin": 1323,
											"end": 1440,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1432,
											"end": 1433,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1429,
											"end": 1430,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1422,
											"end": 1434,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "tag",
											"source": 7,
											"value": "230"
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1606,
											"end": 1613,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1646,
											"end": 1688,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1639,
											"end": 1644,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1635,
											"end": 1689,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1624,
											"end": 1689,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1624,
											"end": 1689,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1569,
											"end": 1695,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "tag",
											"source": 7,
											"value": "231"
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1738,
											"end": 1745,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "264"
										},
										{
											"begin": 1785,
											"end": 1790,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "230"
										},
										{
											"begin": 1767,
											"end": 1791,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "tag",
											"source": 7,
											"value": "264"
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1756,
											"end": 1791,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1756,
											"end": 1791,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1701,
											"end": 1797,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1803,
											"end": 1925,
											"name": "tag",
											"source": 7,
											"value": "232"
										},
										{
											"begin": 1803,
											"end": 1925,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "266"
										},
										{
											"begin": 1894,
											"end": 1899,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "231"
										},
										{
											"begin": 1876,
											"end": 1900,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "tag",
											"source": 7,
											"value": "266"
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1869,
											"end": 1874,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1866,
											"end": 1901,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "267"
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1915,
											"end": 1916,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1912,
											"end": 1913,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1905,
											"end": 1917,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "tag",
											"source": 7,
											"value": "267"
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1803,
											"end": 1925,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1803,
											"end": 1925,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "tag",
											"source": 7,
											"value": "233"
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1977,
											"end": 1982,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2015,
											"end": 2021,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2002,
											"end": 2022,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 1993,
											"end": 2022,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1993,
											"end": 2022,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "269"
										},
										{
											"begin": 2058,
											"end": 2063,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "232"
										},
										{
											"begin": 2031,
											"end": 2064,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "tag",
											"source": 7,
											"value": "269"
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1931,
											"end": 2070,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "tag",
											"source": 7,
											"value": "234"
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2113,
											"end": 2120,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2142,
											"end": 2147,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2131,
											"end": 2147,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2131,
											"end": 2147,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2076,
											"end": 2153,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2159,
											"end": 2281,
											"name": "tag",
											"source": 7,
											"value": "235"
										},
										{
											"begin": 2159,
											"end": 2281,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "272"
										},
										{
											"begin": 2250,
											"end": 2255,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "234"
										},
										{
											"begin": 2232,
											"end": 2256,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "tag",
											"source": 7,
											"value": "272"
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2225,
											"end": 2230,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2222,
											"end": 2257,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "273"
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2271,
											"end": 2272,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2268,
											"end": 2269,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2261,
											"end": 2273,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "tag",
											"source": 7,
											"value": "273"
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2159,
											"end": 2281,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2159,
											"end": 2281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "tag",
											"source": 7,
											"value": "236"
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2333,
											"end": 2338,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2371,
											"end": 2377,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2358,
											"end": 2378,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 2349,
											"end": 2378,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2349,
											"end": 2378,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "275"
										},
										{
											"begin": 2414,
											"end": 2419,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "235"
										},
										{
											"begin": 2387,
											"end": 2420,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "tag",
											"source": 7,
											"value": "275"
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2287,
											"end": 2426,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "tag",
											"source": 7,
											"value": "33"
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2500,
											"end": 2506,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2508,
											"end": 2514,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2557,
											"end": 2559,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2545,
											"end": 2554,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2536,
											"end": 2543,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2532,
											"end": 2555,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2528,
											"end": 2560,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "277"
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "278"
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "228"
										},
										{
											"begin": 2563,
											"end": 2642,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "tag",
											"source": 7,
											"value": "278"
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "tag",
											"source": 7,
											"value": "277"
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2683,
											"end": 2684,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "279"
										},
										{
											"begin": 2753,
											"end": 2760,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2744,
											"end": 2750,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2733,
											"end": 2742,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 2729,
											"end": 2751,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "233"
										},
										{
											"begin": 2708,
											"end": 2761,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "tag",
											"source": 7,
											"value": "279"
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2698,
											"end": 2761,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2698,
											"end": 2761,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2654,
											"end": 2771,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2810,
											"end": 2812,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "280"
										},
										{
											"begin": 2881,
											"end": 2888,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2872,
											"end": 2878,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2861,
											"end": 2870,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 2857,
											"end": 2879,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "236"
										},
										{
											"begin": 2836,
											"end": 2889,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "tag",
											"source": 7,
											"value": "280"
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2826,
											"end": 2889,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2826,
											"end": 2889,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2781,
											"end": 2899,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2432,
											"end": 2906,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "tag",
											"source": 7,
											"value": "237"
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2946,
											"end": 2953,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2989,
											"end": 2994,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2982,
											"end": 2995,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2975,
											"end": 2996,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2964,
											"end": 2996,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2964,
											"end": 2996,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2912,
											"end": 3002,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "tag",
											"source": 7,
											"value": "238"
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "283"
										},
										{
											"begin": 3104,
											"end": 3109,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "237"
										},
										{
											"begin": 3089,
											"end": 3110,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "tag",
											"source": 7,
											"value": "283"
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3084,
											"end": 3087,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3077,
											"end": 3111,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3008,
											"end": 3117,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "tag",
											"source": 7,
											"value": "36"
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3210,
											"end": 3214,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3248,
											"end": 3250,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3237,
											"end": 3246,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3233,
											"end": 3251,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3225,
											"end": 3251,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3225,
											"end": 3251,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "285"
										},
										{
											"begin": 3323,
											"end": 3324,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3312,
											"end": 3321,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3308,
											"end": 3325,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3299,
											"end": 3305,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "238"
										},
										{
											"begin": 3261,
											"end": 3326,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "tag",
											"source": 7,
											"value": "285"
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3123,
											"end": 3333,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "tag",
											"source": 7,
											"value": "239"
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "287"
										},
										{
											"begin": 3444,
											"end": 3449,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "234"
										},
										{
											"begin": 3426,
											"end": 3450,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "tag",
											"source": 7,
											"value": "287"
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3421,
											"end": 3424,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3414,
											"end": 3451,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3339,
											"end": 3457,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "tag",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3556,
											"end": 3560,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3594,
											"end": 3596,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3583,
											"end": 3592,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3579,
											"end": 3597,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3571,
											"end": 3597,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3571,
											"end": 3597,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "289"
										},
										{
											"begin": 3675,
											"end": 3676,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3664,
											"end": 3673,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3660,
											"end": 3677,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3651,
											"end": 3657,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "239"
										},
										{
											"begin": 3607,
											"end": 3678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "tag",
											"source": 7,
											"value": "289"
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3463,
											"end": 3685,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3691,
											"end": 4020,
											"name": "tag",
											"source": 7,
											"value": "45"
										},
										{
											"begin": 3691,
											"end": 4020,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3750,
											"end": 3756,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3799,
											"end": 3801,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3787,
											"end": 3796,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3778,
											"end": 3785,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3774,
											"end": 3797,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3770,
											"end": 3802,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 3767,
											"end": 3886,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3767,
											"end": 3886,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "291"
										},
										{
											"begin": 3767,
											"end": 3886,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3805,
											"end": 3884,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "292"
										},
										{
											"begin": 3805,
											"end": 3884,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "228"
										},
										{
											"begin": 3805,
											"end": 3884,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3805,
											"end": 3884,
											"name": "tag",
											"source": 7,
											"value": "292"
										},
										{
											"begin": 3805,
											"end": 3884,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3767,
											"end": 3886,
											"name": "tag",
											"source": 7,
											"value": "291"
										},
										{
											"begin": 3767,
											"end": 3886,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3925,
											"end": 3926,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3950,
											"end": 4003,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "293"
										},
										{
											"begin": 3995,
											"end": 4002,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3986,
											"end": 3992,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3975,
											"end": 3984,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 3971,
											"end": 3993,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3950,
											"end": 4003,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "233"
										},
										{
											"begin": 3950,
											"end": 4003,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3950,
											"end": 4003,
											"name": "tag",
											"source": 7,
											"value": "293"
										},
										{
											"begin": 3950,
											"end": 4003,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3940,
											"end": 4003,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3940,
											"end": 4003,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3896,
											"end": 4013,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3691,
											"end": 4020,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3691,
											"end": 4020,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3691,
											"end": 4020,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3691,
											"end": 4020,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3691,
											"end": 4020,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4026,
											"end": 4645,
											"name": "tag",
											"source": 7,
											"value": "50"
										},
										{
											"begin": 4026,
											"end": 4645,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4103,
											"end": 4109,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4111,
											"end": 4117,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4119,
											"end": 4125,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4168,
											"end": 4170,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 4156,
											"end": 4165,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 4147,
											"end": 4154,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 4143,
											"end": 4166,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4139,
											"end": 4171,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 4136,
											"end": 4255,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4136,
											"end": 4255,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "295"
										},
										{
											"begin": 4136,
											"end": 4255,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4174,
											"end": 4253,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "296"
										},
										{
											"begin": 4174,
											"end": 4253,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "228"
										},
										{
											"begin": 4174,
											"end": 4253,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4174,
											"end": 4253,
											"name": "tag",
											"source": 7,
											"value": "296"
										},
										{
											"begin": 4174,
											"end": 4253,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4136,
											"end": 4255,
											"name": "tag",
											"source": 7,
											"value": "295"
										},
										{
											"begin": 4136,
											"end": 4255,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4294,
											"end": 4295,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4319,
											"end": 4372,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "297"
										},
										{
											"begin": 4364,
											"end": 4371,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 4355,
											"end": 4361,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4344,
											"end": 4353,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 4340,
											"end": 4362,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4319,
											"end": 4372,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "233"
										},
										{
											"begin": 4319,
											"end": 4372,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4319,
											"end": 4372,
											"name": "tag",
											"source": 7,
											"value": "297"
										},
										{
											"begin": 4319,
											"end": 4372,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4309,
											"end": 4372,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 4309,
											"end": 4372,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4265,
											"end": 4382,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4421,
											"end": 4423,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4447,
											"end": 4500,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "298"
										},
										{
											"begin": 4492,
											"end": 4499,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 4483,
											"end": 4489,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4472,
											"end": 4481,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 4468,
											"end": 4490,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4447,
											"end": 4500,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "233"
										},
										{
											"begin": 4447,
											"end": 4500,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4447,
											"end": 4500,
											"name": "tag",
											"source": 7,
											"value": "298"
										},
										{
											"begin": 4447,
											"end": 4500,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4437,
											"end": 4500,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4437,
											"end": 4500,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4392,
											"end": 4510,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4549,
											"end": 4551,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4575,
											"end": 4628,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "299"
										},
										{
											"begin": 4620,
											"end": 4627,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 4611,
											"end": 4617,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4600,
											"end": 4609,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 4596,
											"end": 4618,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4575,
											"end": 4628,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "236"
										},
										{
											"begin": 4575,
											"end": 4628,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4575,
											"end": 4628,
											"name": "tag",
											"source": 7,
											"value": "299"
										},
										{
											"begin": 4575,
											"end": 4628,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4565,
											"end": 4628,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4565,
											"end": 4628,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4520,
											"end": 4638,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4026,
											"end": 4645,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4026,
											"end": 4645,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4026,
											"end": 4645,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4026,
											"end": 4645,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4026,
											"end": 4645,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4026,
											"end": 4645,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4651,
											"end": 4769,
											"name": "tag",
											"source": 7,
											"value": "240"
										},
										{
											"begin": 4651,
											"end": 4769,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4738,
											"end": 4762,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "301"
										},
										{
											"begin": 4756,
											"end": 4761,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4738,
											"end": 4762,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "231"
										},
										{
											"begin": 4738,
											"end": 4762,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4738,
											"end": 4762,
											"name": "tag",
											"source": 7,
											"value": "301"
										},
										{
											"begin": 4738,
											"end": 4762,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4733,
											"end": 4736,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4726,
											"end": 4763,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4651,
											"end": 4769,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4651,
											"end": 4769,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4651,
											"end": 4769,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4775,
											"end": 4997,
											"name": "tag",
											"source": 7,
											"value": "56"
										},
										{
											"begin": 4775,
											"end": 4997,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4868,
											"end": 4872,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4906,
											"end": 4908,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4895,
											"end": 4904,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4891,
											"end": 4909,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4883,
											"end": 4909,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4883,
											"end": 4909,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4919,
											"end": 4990,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "303"
										},
										{
											"begin": 4987,
											"end": 4988,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4976,
											"end": 4985,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4972,
											"end": 4989,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4963,
											"end": 4969,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 4919,
											"end": 4990,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "240"
										},
										{
											"begin": 4919,
											"end": 4990,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4919,
											"end": 4990,
											"name": "tag",
											"source": 7,
											"value": "303"
										},
										{
											"begin": 4919,
											"end": 4990,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4775,
											"end": 4997,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4775,
											"end": 4997,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4775,
											"end": 4997,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4775,
											"end": 4997,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4775,
											"end": 4997,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5003,
											"end": 5089,
											"name": "tag",
											"source": 7,
											"value": "241"
										},
										{
											"begin": 5003,
											"end": 5089,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5038,
											"end": 5045,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5078,
											"end": 5082,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 5071,
											"end": 5076,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5067,
											"end": 5083,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5056,
											"end": 5083,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5056,
											"end": 5083,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5003,
											"end": 5089,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5003,
											"end": 5089,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5003,
											"end": 5089,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5003,
											"end": 5089,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5095,
											"end": 5207,
											"name": "tag",
											"source": 7,
											"value": "242"
										},
										{
											"begin": 5095,
											"end": 5207,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5178,
											"end": 5200,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "306"
										},
										{
											"begin": 5194,
											"end": 5199,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5178,
											"end": 5200,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "241"
										},
										{
											"begin": 5178,
											"end": 5200,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5178,
											"end": 5200,
											"name": "tag",
											"source": 7,
											"value": "306"
										},
										{
											"begin": 5178,
											"end": 5200,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5173,
											"end": 5176,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5166,
											"end": 5201,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5095,
											"end": 5207,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5095,
											"end": 5207,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5095,
											"end": 5207,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5213,
											"end": 5427,
											"name": "tag",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 5213,
											"end": 5427,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5302,
											"end": 5306,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5340,
											"end": 5342,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5329,
											"end": 5338,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5325,
											"end": 5343,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5317,
											"end": 5343,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5317,
											"end": 5343,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5353,
											"end": 5420,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "308"
										},
										{
											"begin": 5417,
											"end": 5418,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5406,
											"end": 5415,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5402,
											"end": 5419,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5393,
											"end": 5399,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5353,
											"end": 5420,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "242"
										},
										{
											"begin": 5353,
											"end": 5420,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5353,
											"end": 5420,
											"name": "tag",
											"source": 7,
											"value": "308"
										},
										{
											"begin": 5353,
											"end": 5420,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5213,
											"end": 5427,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5213,
											"end": 5427,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5213,
											"end": 5427,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5213,
											"end": 5427,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5213,
											"end": 5427,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5433,
											"end": 5762,
											"name": "tag",
											"source": 7,
											"value": "69"
										},
										{
											"begin": 5433,
											"end": 5762,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5492,
											"end": 5498,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5541,
											"end": 5543,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5529,
											"end": 5538,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5520,
											"end": 5527,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5516,
											"end": 5539,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 5512,
											"end": 5544,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 5509,
											"end": 5628,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5509,
											"end": 5628,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "310"
										},
										{
											"begin": 5509,
											"end": 5628,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5547,
											"end": 5626,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "311"
										},
										{
											"begin": 5547,
											"end": 5626,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "228"
										},
										{
											"begin": 5547,
											"end": 5626,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5547,
											"end": 5626,
											"name": "tag",
											"source": 7,
											"value": "311"
										},
										{
											"begin": 5547,
											"end": 5626,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5509,
											"end": 5628,
											"name": "tag",
											"source": 7,
											"value": "310"
										},
										{
											"begin": 5509,
											"end": 5628,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5667,
											"end": 5668,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5692,
											"end": 5745,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "312"
										},
										{
											"begin": 5737,
											"end": 5744,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5728,
											"end": 5734,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5717,
											"end": 5726,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 5713,
											"end": 5735,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5692,
											"end": 5745,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "236"
										},
										{
											"begin": 5692,
											"end": 5745,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5692,
											"end": 5745,
											"name": "tag",
											"source": 7,
											"value": "312"
										},
										{
											"begin": 5692,
											"end": 5745,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5682,
											"end": 5745,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5682,
											"end": 5745,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5638,
											"end": 5755,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5433,
											"end": 5762,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5433,
											"end": 5762,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5433,
											"end": 5762,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5433,
											"end": 5762,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5433,
											"end": 5762,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5768,
											"end": 6242,
											"name": "tag",
											"source": 7,
											"value": "98"
										},
										{
											"begin": 5768,
											"end": 6242,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5836,
											"end": 5842,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5844,
											"end": 5850,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5893,
											"end": 5895,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5881,
											"end": 5890,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5872,
											"end": 5879,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 5868,
											"end": 5891,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 5864,
											"end": 5896,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 5861,
											"end": 5980,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5861,
											"end": 5980,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "314"
										},
										{
											"begin": 5861,
											"end": 5980,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5899,
											"end": 5978,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "315"
										},
										{
											"begin": 5899,
											"end": 5978,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "228"
										},
										{
											"begin": 5899,
											"end": 5978,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5899,
											"end": 5978,
											"name": "tag",
											"source": 7,
											"value": "315"
										},
										{
											"begin": 5899,
											"end": 5978,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5861,
											"end": 5980,
											"name": "tag",
											"source": 7,
											"value": "314"
										},
										{
											"begin": 5861,
											"end": 5980,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6019,
											"end": 6020,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6044,
											"end": 6097,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "316"
										},
										{
											"begin": 6089,
											"end": 6096,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 6080,
											"end": 6086,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6069,
											"end": 6078,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 6065,
											"end": 6087,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6044,
											"end": 6097,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "233"
										},
										{
											"begin": 6044,
											"end": 6097,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6044,
											"end": 6097,
											"name": "tag",
											"source": 7,
											"value": "316"
										},
										{
											"begin": 6044,
											"end": 6097,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6034,
											"end": 6097,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6034,
											"end": 6097,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5990,
											"end": 6107,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6146,
											"end": 6148,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6172,
											"end": 6225,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "317"
										},
										{
											"begin": 6217,
											"end": 6224,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 6208,
											"end": 6214,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6197,
											"end": 6206,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 6193,
											"end": 6215,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6172,
											"end": 6225,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "233"
										},
										{
											"begin": 6172,
											"end": 6225,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6172,
											"end": 6225,
											"name": "tag",
											"source": 7,
											"value": "317"
										},
										{
											"begin": 6172,
											"end": 6225,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6162,
											"end": 6225,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6162,
											"end": 6225,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6117,
											"end": 6235,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5768,
											"end": 6242,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5768,
											"end": 6242,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5768,
											"end": 6242,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5768,
											"end": 6242,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5768,
											"end": 6242,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5768,
											"end": 6242,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6248,
											"end": 6428,
											"name": "tag",
											"source": 7,
											"value": "243"
										},
										{
											"begin": 6248,
											"end": 6428,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6296,
											"end": 6373,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6293,
											"end": 6294,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6286,
											"end": 6374,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6393,
											"end": 6397,
											"name": "PUSH",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 6390,
											"end": 6391,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 6383,
											"end": 6398,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6417,
											"end": 6421,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 6414,
											"end": 6415,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6407,
											"end": 6422,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 6434,
											"end": 6754,
											"name": "tag",
											"source": 7,
											"value": "106"
										},
										{
											"begin": 6434,
											"end": 6754,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6478,
											"end": 6484,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6515,
											"end": 6516,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 6509,
											"end": 6513,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6505,
											"end": 6517,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 6495,
											"end": 6517,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6495,
											"end": 6517,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6562,
											"end": 6563,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 6556,
											"end": 6560,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6552,
											"end": 6564,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6583,
											"end": 6601,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6573,
											"end": 6654,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "320"
										},
										{
											"begin": 6573,
											"end": 6654,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6639,
											"end": 6643,
											"name": "PUSH",
											"source": 7,
											"value": "7F"
										},
										{
											"begin": 6631,
											"end": 6637,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6627,
											"end": 6644,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6617,
											"end": 6644,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6617,
											"end": 6644,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6573,
											"end": 6654,
											"name": "tag",
											"source": 7,
											"value": "320"
										},
										{
											"begin": 6573,
											"end": 6654,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6701,
											"end": 6703,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6693,
											"end": 6699,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6690,
											"end": 6704,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 6670,
											"end": 6688,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6667,
											"end": 6705,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 6664,
											"end": 6748,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "321"
										},
										{
											"begin": 6664,
											"end": 6748,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6720,
											"end": 6738,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "322"
										},
										{
											"begin": 6720,
											"end": 6738,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "243"
										},
										{
											"begin": 6720,
											"end": 6738,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6720,
											"end": 6738,
											"name": "tag",
											"source": 7,
											"value": "322"
										},
										{
											"begin": 6720,
											"end": 6738,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6664,
											"end": 6748,
											"name": "tag",
											"source": 7,
											"value": "321"
										},
										{
											"begin": 6664,
											"end": 6748,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6485,
											"end": 6754,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6434,
											"end": 6754,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6434,
											"end": 6754,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6434,
											"end": 6754,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6434,
											"end": 6754,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6760,
											"end": 6927,
											"name": "tag",
											"source": 7,
											"value": "244"
										},
										{
											"begin": 6760,
											"end": 6927,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6900,
											"end": 6919,
											"name": "PUSH",
											"source": 7,
											"value": "546F6B656E7320617265206C6F636B6564000000000000000000000000000000"
										},
										{
											"begin": 6896,
											"end": 6897,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6888,
											"end": 6894,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6884,
											"end": 6898,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6877,
											"end": 6920,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6760,
											"end": 6927,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6760,
											"end": 6927,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6933,
											"end": 7299,
											"name": "tag",
											"source": 7,
											"value": "245"
										},
										{
											"begin": 6933,
											"end": 7299,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7075,
											"end": 7078,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7096,
											"end": 7163,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "325"
										},
										{
											"begin": 7160,
											"end": 7162,
											"name": "PUSH",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 7155,
											"end": 7158,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7096,
											"end": 7163,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "223"
										},
										{
											"begin": 7096,
											"end": 7163,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7096,
											"end": 7163,
											"name": "tag",
											"source": 7,
											"value": "325"
										},
										{
											"begin": 7096,
											"end": 7163,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7089,
											"end": 7163,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7089,
											"end": 7163,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7172,
											"end": 7265,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "326"
										},
										{
											"begin": 7261,
											"end": 7264,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7172,
											"end": 7265,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "244"
										},
										{
											"begin": 7172,
											"end": 7265,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7172,
											"end": 7265,
											"name": "tag",
											"source": 7,
											"value": "326"
										},
										{
											"begin": 7172,
											"end": 7265,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7290,
											"end": 7292,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7285,
											"end": 7288,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7281,
											"end": 7293,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7274,
											"end": 7293,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7274,
											"end": 7293,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6933,
											"end": 7299,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6933,
											"end": 7299,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6933,
											"end": 7299,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6933,
											"end": 7299,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7305,
											"end": 7724,
											"name": "tag",
											"source": 7,
											"value": "124"
										},
										{
											"begin": 7305,
											"end": 7724,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7471,
											"end": 7475,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7509,
											"end": 7511,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7498,
											"end": 7507,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7494,
											"end": 7512,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7486,
											"end": 7512,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7486,
											"end": 7512,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7558,
											"end": 7567,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7552,
											"end": 7556,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7548,
											"end": 7568,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 7544,
											"end": 7545,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7533,
											"end": 7542,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7529,
											"end": 7546,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7522,
											"end": 7569,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7586,
											"end": 7717,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "328"
										},
										{
											"begin": 7712,
											"end": 7716,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7586,
											"end": 7717,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "245"
										},
										{
											"begin": 7586,
											"end": 7717,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7586,
											"end": 7717,
											"name": "tag",
											"source": 7,
											"value": "328"
										},
										{
											"begin": 7586,
											"end": 7717,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7578,
											"end": 7717,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7578,
											"end": 7717,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7305,
											"end": 7724,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7305,
											"end": 7724,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7305,
											"end": 7724,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7305,
											"end": 7724,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7730,
											"end": 8172,
											"name": "tag",
											"source": 7,
											"value": "204"
										},
										{
											"begin": 7730,
											"end": 8172,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7879,
											"end": 7883,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7917,
											"end": 7919,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 7906,
											"end": 7915,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7902,
											"end": 7920,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7894,
											"end": 7920,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7894,
											"end": 7920,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7930,
											"end": 8001,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "330"
										},
										{
											"begin": 7998,
											"end": 7999,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7987,
											"end": 7996,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7983,
											"end": 8000,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7974,
											"end": 7980,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 7930,
											"end": 8001,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "240"
										},
										{
											"begin": 7930,
											"end": 8001,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7930,
											"end": 8001,
											"name": "tag",
											"source": 7,
											"value": "330"
										},
										{
											"begin": 7930,
											"end": 8001,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8011,
											"end": 8083,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "331"
										},
										{
											"begin": 8079,
											"end": 8081,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8068,
											"end": 8077,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8064,
											"end": 8082,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8055,
											"end": 8061,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 8011,
											"end": 8083,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "239"
										},
										{
											"begin": 8011,
											"end": 8083,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8011,
											"end": 8083,
											"name": "tag",
											"source": 7,
											"value": "331"
										},
										{
											"begin": 8011,
											"end": 8083,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8093,
											"end": 8165,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "332"
										},
										{
											"begin": 8161,
											"end": 8163,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 8150,
											"end": 8159,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8146,
											"end": 8164,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8137,
											"end": 8143,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 8093,
											"end": 8165,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "239"
										},
										{
											"begin": 8093,
											"end": 8165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8093,
											"end": 8165,
											"name": "tag",
											"source": 7,
											"value": "332"
										},
										{
											"begin": 8093,
											"end": 8165,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7730,
											"end": 8172,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 7730,
											"end": 8172,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 7730,
											"end": 8172,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7730,
											"end": 8172,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7730,
											"end": 8172,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7730,
											"end": 8172,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7730,
											"end": 8172,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8178,
											"end": 8358,
											"name": "tag",
											"source": 7,
											"value": "246"
										},
										{
											"begin": 8178,
											"end": 8358,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8226,
											"end": 8303,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8223,
											"end": 8224,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8216,
											"end": 8304,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8323,
											"end": 8327,
											"name": "PUSH",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 8320,
											"end": 8321,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 8313,
											"end": 8328,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8347,
											"end": 8351,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 8344,
											"end": 8345,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8337,
											"end": 8352,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 8364,
											"end": 8555,
											"name": "tag",
											"source": 7,
											"value": "215"
										},
										{
											"begin": 8364,
											"end": 8555,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8404,
											"end": 8407,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8423,
											"end": 8443,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "335"
										},
										{
											"begin": 8441,
											"end": 8442,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8423,
											"end": 8443,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "234"
										},
										{
											"begin": 8423,
											"end": 8443,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8423,
											"end": 8443,
											"name": "tag",
											"source": 7,
											"value": "335"
										},
										{
											"begin": 8423,
											"end": 8443,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8418,
											"end": 8443,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8418,
											"end": 8443,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8457,
											"end": 8477,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "336"
										},
										{
											"begin": 8475,
											"end": 8476,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8457,
											"end": 8477,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "234"
										},
										{
											"begin": 8457,
											"end": 8477,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8457,
											"end": 8477,
											"name": "tag",
											"source": 7,
											"value": "336"
										},
										{
											"begin": 8457,
											"end": 8477,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8452,
											"end": 8477,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 8452,
											"end": 8477,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8500,
											"end": 8501,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8497,
											"end": 8498,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8493,
											"end": 8502,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8486,
											"end": 8502,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8486,
											"end": 8502,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8521,
											"end": 8524,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 8518,
											"end": 8519,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8515,
											"end": 8525,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 8512,
											"end": 8548,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 8512,
											"end": 8548,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "337"
										},
										{
											"begin": 8512,
											"end": 8548,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 8528,
											"end": 8546,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "338"
										},
										{
											"begin": 8528,
											"end": 8546,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "246"
										},
										{
											"begin": 8528,
											"end": 8546,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8528,
											"end": 8546,
											"name": "tag",
											"source": 7,
											"value": "338"
										},
										{
											"begin": 8528,
											"end": 8546,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8512,
											"end": 8548,
											"name": "tag",
											"source": 7,
											"value": "337"
										},
										{
											"begin": 8512,
											"end": 8548,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8364,
											"end": 8555,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 8364,
											"end": 8555,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8364,
											"end": 8555,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8364,
											"end": 8555,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8364,
											"end": 8555,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"contracts/ICFT.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burn(uint256)": "42966c68",
							"communityIncentives()": "59d7bd71",
							"decimals()": "313ce567",
							"investors()": "8ac27f5f",
							"lockupExpiry(address)": "221322d5",
							"marketing()": "2d3e474a",
							"mint(address,uint256)": "40c10f19",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"projectTeam()": "3829b0dc",
							"renounceOwnership()": "715018a6",
							"reserve()": "cd3293de",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b",
							"upgradeContract()": "1f4e1504"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"initialOwner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_investors\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_projectTeam\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_reserve\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_marketing\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_communityIncentives\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"initialSupply\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"communityIncentives\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"investors\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"lockupExpiry\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"marketing\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"projectTeam\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"reserve\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"upgradeContract\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ICFT.sol\":\"IndependentCapitalFundToken\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xbf61ab2ae1d575a17ea58fbb99ca232baddcc4e0eeea180e84cbc74b0c348b31\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4e0968705bad99747a8e5288aa008678c2be2f471f919dce3925a3cc4f1dee09\",\"dweb:/ipfs/QmbAFnCQfo4tw6ssfQSjhA5LzwHWNNryXN8bX7ty8jiqqn\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"contracts/ICFT.sol\":{\"keccak256\":\"0x52bedd44a604a09dbb4d34c7654f5f626708d1dc17da595155ecdca56a9663fc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9d7501abc374dc2d87bdeb267d78f3907b73f2a4390a87c6b87936fb5123248c\",\"dweb:/ipfs/QmY5WLioMJKGYBgbhinoB3eGQ4fmspbTqB8ezzT4AKQPg3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 307,
								"contract": "contracts/ICFT.sol:IndependentCapitalFundToken",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 313,
								"contract": "contracts/ICFT.sol:IndependentCapitalFundToken",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 315,
								"contract": "contracts/ICFT.sol:IndependentCapitalFundToken",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 317,
								"contract": "contracts/ICFT.sol:IndependentCapitalFundToken",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 319,
								"contract": "contracts/ICFT.sol:IndependentCapitalFundToken",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 8,
								"contract": "contracts/ICFT.sol:IndependentCapitalFundToken",
								"label": "_owner",
								"offset": 0,
								"slot": "5",
								"type": "t_address"
							},
							{
								"astId": 943,
								"contract": "contracts/ICFT.sol:IndependentCapitalFundToken",
								"label": "investors",
								"offset": 0,
								"slot": "6",
								"type": "t_address"
							},
							{
								"astId": 945,
								"contract": "contracts/ICFT.sol:IndependentCapitalFundToken",
								"label": "projectTeam",
								"offset": 0,
								"slot": "7",
								"type": "t_address"
							},
							{
								"astId": 947,
								"contract": "contracts/ICFT.sol:IndependentCapitalFundToken",
								"label": "reserve",
								"offset": 0,
								"slot": "8",
								"type": "t_address"
							},
							{
								"astId": 949,
								"contract": "contracts/ICFT.sol:IndependentCapitalFundToken",
								"label": "marketing",
								"offset": 0,
								"slot": "9",
								"type": "t_address"
							},
							{
								"astId": 951,
								"contract": "contracts/ICFT.sol:IndependentCapitalFundToken",
								"label": "communityIncentives",
								"offset": 0,
								"slot": "10",
								"type": "t_address"
							},
							{
								"astId": 955,
								"contract": "contracts/ICFT.sol:IndependentCapitalFundToken",
								"label": "lockupExpiry",
								"offset": 0,
								"slot": "11",
								"type": "t_mapping(t_address,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							933
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 934,
							"src": "128:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 933,
										"src": "136:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"692:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 933,
										"src": "692:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								933
							],
							"name": "Ownable",
							"nameLocation": "681:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "706:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:0"
									},
									"src": "825:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:0"
									},
									"src": "968:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1042:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1073:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:0"
									},
									"src": "1015:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1259:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1273:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1269:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1301:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1322:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1315:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1392:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1373:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1237:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:0"
									},
									"scope": 147,
									"src": "1225:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1521:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1509:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"src": "1500:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1693:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1703:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:0"
									},
									"scope": 147,
									"src": "1638:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1841:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 915,
															"src": "1866:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1851:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1880:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 915,
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1901:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1894:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:0"
									},
									"scope": 147,
									"src": "1796:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2347:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:0"
									},
									"scope": 147,
									"src": "2293:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2613:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2623:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2651:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2672:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2665:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2603:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:0"
									},
									"scope": 147,
									"src": "2543:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2975:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2985:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3047:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2940:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:0"
									},
									"scope": 147,
									"src": "2912:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "663:2438:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "102:3000:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							284
						],
						"IERC20Errors": [
							189
						],
						"IERC721Errors": [
							237
						]
					},
					"id": 285,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 150,
								"nodeType": "StructuredDocumentation",
								"src": "138:141:1",
								"text": " @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."
							},
							"fullyImplemented": true,
							"id": 189,
							"linearizedBaseContracts": [
								189
							],
							"name": "IERC20Errors",
							"nameLocation": "290:12:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 151,
										"nodeType": "StructuredDocumentation",
										"src": "309:309:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 159,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "629:24:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "662:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "654:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "654:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 155,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "678:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "670:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 154,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "670:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 157,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "695:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "687:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 156,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "687:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "653:49:1"
									},
									"src": "623:80:1"
								},
								{
									"documentation": {
										"id": 160,
										"nodeType": "StructuredDocumentation",
										"src": "709:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 164,
									"name": "ERC20InvalidSender",
									"nameLocation": "872:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "899:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 164,
												"src": "891:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 161,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "891:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "890:16:1"
									},
									"src": "866:41:1"
								},
								{
									"documentation": {
										"id": 165,
										"nodeType": "StructuredDocumentation",
										"src": "913:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 169,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1083:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 167,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1112:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 169,
												"src": "1104:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 166,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1104:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1103:18:1"
									},
									"src": "1077:45:1"
								},
								{
									"documentation": {
										"id": 170,
										"nodeType": "StructuredDocumentation",
										"src": "1128:345:1",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 178,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1484:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1519:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1511:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 171,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1511:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1536:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1528:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 173,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1528:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 176,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1555:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1547:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 175,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1547:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1510:52:1"
									},
									"src": "1478:85:1"
								},
								{
									"documentation": {
										"id": 179,
										"nodeType": "StructuredDocumentation",
										"src": "1569:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 183,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1754:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 182,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 181,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1783:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 183,
												"src": "1775:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 180,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1775:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1774:18:1"
									},
									"src": "1748:45:1"
								},
								{
									"documentation": {
										"id": 184,
										"nodeType": "StructuredDocumentation",
										"src": "1799:195:1",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 188,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2005:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 187,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 186,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2033:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "2025:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 185,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2025:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2024:17:1"
									},
									"src": "1999:43:1"
								}
							],
							"scope": 285,
							"src": "280:1764:1",
							"usedErrors": [
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 190,
								"nodeType": "StructuredDocumentation",
								"src": "2046:143:1",
								"text": " @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."
							},
							"fullyImplemented": true,
							"id": 237,
							"linearizedBaseContracts": [
								237
							],
							"name": "IERC721Errors",
							"nameLocation": "2200:13:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 191,
										"nodeType": "StructuredDocumentation",
										"src": "2220:219:1",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 195,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2450:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 194,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2477:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 195,
												"src": "2469:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 192,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2469:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2468:15:1"
									},
									"src": "2444:40:1"
								},
								{
									"documentation": {
										"id": 196,
										"nodeType": "StructuredDocumentation",
										"src": "2490:132:1",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 200,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2633:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2664:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 200,
												"src": "2656:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 197,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2656:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2655:17:1"
									},
									"src": "2627:46:1"
								},
								{
									"documentation": {
										"id": 201,
										"nodeType": "StructuredDocumentation",
										"src": "2679:289:1",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 209,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2979:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 203,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3008:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3000:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 202,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3000:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3024:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3016:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 204,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3016:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3041:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3033:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 206,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3033:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2999:48:1"
									},
									"src": "2973:75:1"
								},
								{
									"documentation": {
										"id": 210,
										"nodeType": "StructuredDocumentation",
										"src": "3054:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 214,
									"name": "ERC721InvalidSender",
									"nameLocation": "3217:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 212,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3245:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 214,
												"src": "3237:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 211,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3237:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3236:16:1"
									},
									"src": "3211:42:1"
								},
								{
									"documentation": {
										"id": 215,
										"nodeType": "StructuredDocumentation",
										"src": "3259:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 219,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3429:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3459:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 219,
												"src": "3451:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 216,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3451:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3450:18:1"
									},
									"src": "3423:46:1"
								},
								{
									"documentation": {
										"id": 220,
										"nodeType": "StructuredDocumentation",
										"src": "3475:247:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 226,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3733:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3768:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "3760:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 221,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3760:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 224,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3786:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "3778:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 223,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3778:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3759:35:1"
									},
									"src": "3727:68:1"
								},
								{
									"documentation": {
										"id": 227,
										"nodeType": "StructuredDocumentation",
										"src": "3801:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 231,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3986:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 230,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 229,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4016:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "4008:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 228,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4008:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4007:18:1"
									},
									"src": "3980:46:1"
								},
								{
									"documentation": {
										"id": 232,
										"nodeType": "StructuredDocumentation",
										"src": "4032:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 236,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4240:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 234,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4270:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "4262:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 233,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4262:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4261:18:1"
									},
									"src": "4234:46:1"
								}
							],
							"scope": 285,
							"src": "2190:2092:1",
							"usedErrors": [
								195,
								200,
								209,
								214,
								219,
								226,
								231,
								236
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 238,
								"nodeType": "StructuredDocumentation",
								"src": "4284:145:1",
								"text": " @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."
							},
							"fullyImplemented": true,
							"id": 284,
							"linearizedBaseContracts": [
								284
							],
							"name": "IERC1155Errors",
							"nameLocation": "4440:14:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 239,
										"nodeType": "StructuredDocumentation",
										"src": "4461:361:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 249,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4833:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 241,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4868:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4860:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 240,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4860:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 243,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4884:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4876:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 242,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4876:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4901:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4893:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 244,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4893:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 247,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4917:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4909:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 246,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4909:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4859:66:1"
									},
									"src": "4827:99:1"
								},
								{
									"documentation": {
										"id": 250,
										"nodeType": "StructuredDocumentation",
										"src": "4932:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 254,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5095:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 253,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 252,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5124:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 254,
												"src": "5116:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 251,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5116:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5115:16:1"
									},
									"src": "5089:43:1"
								},
								{
									"documentation": {
										"id": 255,
										"nodeType": "StructuredDocumentation",
										"src": "5138:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 259,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5308:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 258,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 257,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5339:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 259,
												"src": "5331:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 256,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5331:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5330:18:1"
									},
									"src": "5302:47:1"
								},
								{
									"documentation": {
										"id": 260,
										"nodeType": "StructuredDocumentation",
										"src": "5355:256:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 266,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5622:28:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5659:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "5651:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 261,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5651:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5677:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "5669:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 263,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5669:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5650:33:1"
									},
									"src": "5616:68:1"
								},
								{
									"documentation": {
										"id": 267,
										"nodeType": "StructuredDocumentation",
										"src": "5690:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 271,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5875:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5906:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "5898:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 268,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5898:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5897:18:1"
									},
									"src": "5869:47:1"
								},
								{
									"documentation": {
										"id": 272,
										"nodeType": "StructuredDocumentation",
										"src": "5922:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 276,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6130:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 275,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 274,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6161:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 276,
												"src": "6153:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 273,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6153:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6152:18:1"
									},
									"src": "6124:47:1"
								},
								{
									"documentation": {
										"id": 277,
										"nodeType": "StructuredDocumentation",
										"src": "6177:280:1",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 283,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6468:25:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 282,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 279,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6502:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "6494:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 278,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6494:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6521:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "6513:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 280,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6513:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6493:41:1"
									},
									"src": "6462:73:1"
								}
							],
							"scope": 285,
							"src": "4430:2107:1",
							"usedErrors": [
								249,
								254,
								259,
								266,
								271,
								276,
								283
							],
							"usedEvents": []
						}
					],
					"src": "112:6426:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							933
						],
						"ERC20": [
							799
						],
						"IERC20": [
							877
						],
						"IERC20Errors": [
							189
						],
						"IERC20Metadata": [
							903
						]
					},
					"id": 800,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 286,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 288,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 878,
							"src": "131:36:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 287,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 877,
										"src": "139:6:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 290,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 904,
							"src": "168:63:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 289,
										"name": "IERC20Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 903,
										"src": "176:14:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 292,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 934,
							"src": "232:48:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 291,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 933,
										"src": "240:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 294,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 285,
							"src": "281:65:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 293,
										"name": "IERC20Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 189,
										"src": "289:12:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 296,
										"name": "Context",
										"nameLocations": [
											"1133:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 933,
										"src": "1133:7:2"
									},
									"id": 297,
									"nodeType": "InheritanceSpecifier",
									"src": "1133:7:2"
								},
								{
									"baseName": {
										"id": 298,
										"name": "IERC20",
										"nameLocations": [
											"1142:6:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 877,
										"src": "1142:6:2"
									},
									"id": 299,
									"nodeType": "InheritanceSpecifier",
									"src": "1142:6:2"
								},
								{
									"baseName": {
										"id": 300,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1150:14:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 903,
										"src": "1150:14:2"
									},
									"id": 301,
									"nodeType": "InheritanceSpecifier",
									"src": "1150:14:2"
								},
								{
									"baseName": {
										"id": 302,
										"name": "IERC20Errors",
										"nameLocations": [
											"1166:12:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 189,
										"src": "1166:12:2"
									},
									"id": 303,
									"nodeType": "InheritanceSpecifier",
									"src": "1166:12:2"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 295,
								"nodeType": "StructuredDocumentation",
								"src": "348:757:2",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC-20\n applications."
							},
							"fullyImplemented": true,
							"id": 799,
							"linearizedBaseContracts": [
								799,
								189,
								903,
								877,
								933
							],
							"name": "ERC20",
							"nameLocation": "1124:5:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 307,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1229:9:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1185:53:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 306,
										"keyName": "account",
										"keyNameLocation": "1201:7:2",
										"keyType": {
											"id": 304,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1193:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1185:35:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 305,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1212:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 313,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1317:11:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1245:83:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 312,
										"keyName": "account",
										"keyNameLocation": "1261:7:2",
										"keyType": {
											"id": 308,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1253:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1245:63:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 311,
											"keyName": "spender",
											"keyNameLocation": "1288:7:2",
											"keyType": {
												"id": 309,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1280:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1272:35:2",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 310,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1299:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 315,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1351:12:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1335:28:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 314,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1335:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 317,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1385:5:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1370:20:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 316,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1370:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 319,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1411:7:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1396:22:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 318,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1396:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 335,
										"nodeType": "Block",
										"src": "1657:57:2",
										"statements": [
											{
												"expression": {
													"id": 329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 327,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 317,
														"src": "1667:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 328,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 322,
														"src": "1675:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1667:13:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 330,
												"nodeType": "ExpressionStatement",
												"src": "1667:13:2"
											},
											{
												"expression": {
													"id": 333,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 331,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 319,
														"src": "1690:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 332,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 324,
														"src": "1700:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1690:17:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 334,
												"nodeType": "ExpressionStatement",
												"src": "1690:17:2"
											}
										]
									},
									"documentation": {
										"id": 320,
										"nodeType": "StructuredDocumentation",
										"src": "1425:171:2",
										"text": " @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 336,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 325,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 322,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1627:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "1613:19:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 321,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1613:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 324,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1648:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "1634:21:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 323,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1634:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1612:44:2"
									},
									"returnParameters": {
										"id": 326,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1657:0:2"
									},
									"scope": 799,
									"src": "1601:113:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										890
									],
									"body": {
										"id": 344,
										"nodeType": "Block",
										"src": "1839:29:2",
										"statements": [
											{
												"expression": {
													"id": 342,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 317,
													"src": "1856:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 341,
												"id": 343,
												"nodeType": "Return",
												"src": "1849:12:2"
											}
										]
									},
									"documentation": {
										"id": 337,
										"nodeType": "StructuredDocumentation",
										"src": "1720:54:2",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 345,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "1788:4:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 338,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1792:2:2"
									},
									"returnParameters": {
										"id": 341,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 340,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "1824:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 339,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1824:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1823:15:2"
									},
									"scope": 799,
									"src": "1779:89:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										896
									],
									"body": {
										"id": 353,
										"nodeType": "Block",
										"src": "2043:31:2",
										"statements": [
											{
												"expression": {
													"id": 351,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 319,
													"src": "2060:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 350,
												"id": 352,
												"nodeType": "Return",
												"src": "2053:14:2"
											}
										]
									},
									"documentation": {
										"id": 346,
										"nodeType": "StructuredDocumentation",
										"src": "1874:102:2",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 354,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "1990:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 347,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1996:2:2"
									},
									"returnParameters": {
										"id": 350,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 349,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 354,
												"src": "2028:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 348,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2028:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2027:15:2"
									},
									"scope": 799,
									"src": "1981:93:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										902
									],
									"body": {
										"id": 362,
										"nodeType": "Block",
										"src": "2763:26:2",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 360,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2780:2:2",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 359,
												"id": 361,
												"nodeType": "Return",
												"src": "2773:9:2"
											}
										]
									},
									"documentation": {
										"id": 355,
										"nodeType": "StructuredDocumentation",
										"src": "2080:622:2",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 363,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "2716:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 356,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2724:2:2"
									},
									"returnParameters": {
										"id": 359,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 358,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "2756:5:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 357,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2756:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2755:7:2"
									},
									"scope": 799,
									"src": "2707:82:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										826
									],
									"body": {
										"id": 371,
										"nodeType": "Block",
										"src": "2910:36:2",
										"statements": [
											{
												"expression": {
													"id": 369,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 315,
													"src": "2927:12:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 368,
												"id": 370,
												"nodeType": "Return",
												"src": "2920:19:2"
											}
										]
									},
									"documentation": {
										"id": 364,
										"nodeType": "StructuredDocumentation",
										"src": "2795:49:2",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 372,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "2858:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 365,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2869:2:2"
									},
									"returnParameters": {
										"id": 368,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 367,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 372,
												"src": "2901:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 366,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2901:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2900:9:2"
									},
									"scope": 799,
									"src": "2849:97:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										834
									],
									"body": {
										"id": 384,
										"nodeType": "Block",
										"src": "3078:42:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 380,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 307,
														"src": "3095:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 382,
													"indexExpression": {
														"id": 381,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 375,
														"src": "3105:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3095:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 379,
												"id": 383,
												"nodeType": "Return",
												"src": "3088:25:2"
											}
										]
									},
									"documentation": {
										"id": 373,
										"nodeType": "StructuredDocumentation",
										"src": "2952:47:2",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 385,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "3013:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 376,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 375,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3031:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 385,
												"src": "3023:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 374,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3023:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3022:17:2"
									},
									"returnParameters": {
										"id": 379,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 378,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 385,
												"src": "3069:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 377,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3069:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3068:9:2"
									},
									"scope": 799,
									"src": "3004:116:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										844
									],
									"body": {
										"id": 408,
										"nodeType": "Block",
										"src": "3390:103:2",
										"statements": [
											{
												"assignments": [
													396
												],
												"declarations": [
													{
														"constant": false,
														"id": 396,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3408:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 408,
														"src": "3400:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 395,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3400:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 399,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 397,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 915,
														"src": "3416:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 398,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3416:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3400:28:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 401,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 396,
															"src": "3448:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 402,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 388,
															"src": "3455:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 403,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 390,
															"src": "3459:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 400,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 529,
														"src": "3438:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 404,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3438:27:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 405,
												"nodeType": "ExpressionStatement",
												"src": "3438:27:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 406,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3482:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 394,
												"id": 407,
												"nodeType": "Return",
												"src": "3475:11:2"
											}
										]
									},
									"documentation": {
										"id": 386,
										"nodeType": "StructuredDocumentation",
										"src": "3126:184:2",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 409,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3324:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 391,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 388,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3341:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "3333:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 387,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3333:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 390,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3353:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "3345:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 389,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3345:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3332:27:2"
									},
									"returnParameters": {
										"id": 394,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 393,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "3384:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 392,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3384:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3383:6:2"
									},
									"scope": 799,
									"src": "3315:178:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										854
									],
									"body": {
										"id": 425,
										"nodeType": "Block",
										"src": "3640:51:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 419,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 313,
															"src": "3657:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 421,
														"indexExpression": {
															"id": 420,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 412,
															"src": "3669:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3657:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 423,
													"indexExpression": {
														"id": 422,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 414,
														"src": "3676:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3657:27:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 418,
												"id": 424,
												"nodeType": "Return",
												"src": "3650:34:2"
											}
										]
									},
									"documentation": {
										"id": 410,
										"nodeType": "StructuredDocumentation",
										"src": "3499:47:2",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 426,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3560:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 415,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 412,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3578:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "3570:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 411,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3570:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 414,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3593:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "3585:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 413,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3585:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3569:32:2"
									},
									"returnParameters": {
										"id": 418,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 417,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "3631:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 416,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3631:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3630:9:2"
									},
									"scope": 799,
									"src": "3551:140:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										864
									],
									"body": {
										"id": 449,
										"nodeType": "Block",
										"src": "4077:107:2",
										"statements": [
											{
												"assignments": [
													437
												],
												"declarations": [
													{
														"constant": false,
														"id": 437,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4095:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 449,
														"src": "4087:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 436,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4087:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 440,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 438,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 915,
														"src": "4103:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 439,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4103:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4087:28:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 442,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 437,
															"src": "4134:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 443,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 429,
															"src": "4141:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 444,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 431,
															"src": "4150:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 441,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															690,
															750
														],
														"referencedDeclaration": 690,
														"src": "4125:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 445,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4125:31:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 446,
												"nodeType": "ExpressionStatement",
												"src": "4125:31:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 447,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4173:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 435,
												"id": 448,
												"nodeType": "Return",
												"src": "4166:11:2"
											}
										]
									},
									"documentation": {
										"id": 427,
										"nodeType": "StructuredDocumentation",
										"src": "3697:296:2",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 450,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4007:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 432,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 429,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4023:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "4015:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 428,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4015:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 431,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4040:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "4032:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 430,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4032:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4014:32:2"
									},
									"returnParameters": {
										"id": 435,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 434,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "4071:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 433,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4071:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4070:6:2"
									},
									"scope": 799,
									"src": "3998:186:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										876
									],
									"body": {
										"id": 481,
										"nodeType": "Block",
										"src": "4869:151:2",
										"statements": [
											{
												"assignments": [
													463
												],
												"declarations": [
													{
														"constant": false,
														"id": 463,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "4887:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 481,
														"src": "4879:15:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 462,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4879:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 466,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 464,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 915,
														"src": "4897:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 465,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4897:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4879:30:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 468,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 453,
															"src": "4935:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 469,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 463,
															"src": "4941:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 470,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 457,
															"src": "4950:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 467,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 798,
														"src": "4919:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 471,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4919:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 472,
												"nodeType": "ExpressionStatement",
												"src": "4919:37:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 474,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 453,
															"src": "4976:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 475,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 455,
															"src": "4982:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 476,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 457,
															"src": "4986:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 473,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 529,
														"src": "4966:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 477,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4966:26:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 478,
												"nodeType": "ExpressionStatement",
												"src": "4966:26:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 479,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5009:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 461,
												"id": 480,
												"nodeType": "Return",
												"src": "5002:11:2"
											}
										]
									},
									"documentation": {
										"id": 451,
										"nodeType": "StructuredDocumentation",
										"src": "4190:581:2",
										"text": " @dev See {IERC20-transferFrom}.\n Skips emitting an {Approval} event indicating an allowance update. This is not\n required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 482,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "4785:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 458,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 453,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4806:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "4798:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 452,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4798:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 455,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4820:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "4812:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 454,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4812:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 457,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4832:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "4824:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 456,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4824:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4797:41:2"
									},
									"returnParameters": {
										"id": 461,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 460,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "4863:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 459,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4863:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4862:6:2"
									},
									"scope": 799,
									"src": "4776:244:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 528,
										"nodeType": "Block",
										"src": "5462:231:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 497,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 492,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 485,
														"src": "5476:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 495,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5492:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 494,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5484:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 493,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5484:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 496,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5484:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5476:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 506,
												"nodeType": "IfStatement",
												"src": "5472:86:2",
												"trueBody": {
													"id": 505,
													"nodeType": "Block",
													"src": "5496:62:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 501,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5544:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 500,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5536:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 499,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5536:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 502,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5536:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 498,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 164,
																	"src": "5517:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 503,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5517:30:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 504,
															"nodeType": "RevertStatement",
															"src": "5510:37:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 512,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 507,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 487,
														"src": "5571:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 510,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5585:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 509,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5577:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 508,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5577:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 511,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5577:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5571:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 521,
												"nodeType": "IfStatement",
												"src": "5567:86:2",
												"trueBody": {
													"id": 520,
													"nodeType": "Block",
													"src": "5589:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 516,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5639:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 515,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5631:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 514,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5631:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 517,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5631:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 513,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 169,
																	"src": "5610:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 518,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5610:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 519,
															"nodeType": "RevertStatement",
															"src": "5603:39:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 523,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 485,
															"src": "5670:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 524,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 487,
															"src": "5676:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 525,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 489,
															"src": "5680:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 522,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "5662:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 526,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5662:24:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 527,
												"nodeType": "ExpressionStatement",
												"src": "5662:24:2"
											}
										]
									},
									"documentation": {
										"id": 483,
										"nodeType": "StructuredDocumentation",
										"src": "5026:362:2",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 529,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "5402:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 490,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 485,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5420:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "5412:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 484,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5412:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 487,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5434:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "5426:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 486,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5426:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 489,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5446:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "5438:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 488,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5438:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5411:41:2"
									},
									"returnParameters": {
										"id": 491,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5462:0:2"
									},
									"scope": 799,
									"src": "5393:300:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 605,
										"nodeType": "Block",
										"src": "6083:1032:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 544,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 539,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 532,
														"src": "6097:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 542,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6113:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 541,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6105:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 540,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6105:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 543,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6105:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6097:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 576,
													"nodeType": "Block",
													"src": "6271:362:2",
													"statements": [
														{
															"assignments": [
																551
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 551,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "6293:11:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 576,
																	"src": "6285:19:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 550,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6285:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 555,
															"initialValue": {
																"baseExpression": {
																	"id": 552,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 307,
																	"src": "6307:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 554,
																"indexExpression": {
																	"id": 553,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 532,
																	"src": "6317:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6307:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6285:37:2"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 558,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 556,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 551,
																	"src": "6340:11:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 557,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 536,
																	"src": "6354:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6340:19:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 566,
															"nodeType": "IfStatement",
															"src": "6336:115:2",
															"trueBody": {
																"id": 565,
																"nodeType": "Block",
																"src": "6361:90:2",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 560,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 532,
																					"src": "6411:4:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 561,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 551,
																					"src": "6417:11:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 562,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 536,
																					"src": "6430:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 559,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 159,
																				"src": "6386:24:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 563,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6386:50:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 564,
																		"nodeType": "RevertStatement",
																		"src": "6379:57:2"
																	}
																]
															}
														},
														{
															"id": 575,
															"nodeType": "UncheckedBlock",
															"src": "6464:159:2",
															"statements": [
																{
																	"expression": {
																		"id": 573,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 567,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 307,
																				"src": "6571:9:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 569,
																			"indexExpression": {
																				"id": 568,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 532,
																				"src": "6581:4:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "6571:15:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 572,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 570,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 551,
																				"src": "6589:11:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 571,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 536,
																				"src": "6603:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6589:19:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6571:37:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 574,
																	"nodeType": "ExpressionStatement",
																	"src": "6571:37:2"
																}
															]
														}
													]
												},
												"id": 577,
												"nodeType": "IfStatement",
												"src": "6093:540:2",
												"trueBody": {
													"id": 549,
													"nodeType": "Block",
													"src": "6117:148:2",
													"statements": [
														{
															"expression": {
																"id": 547,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 545,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 315,
																	"src": "6233:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 546,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 536,
																	"src": "6249:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6233:21:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 548,
															"nodeType": "ExpressionStatement",
															"src": "6233:21:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 583,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 578,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 534,
														"src": "6647:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 581,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6661:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 580,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6653:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 579,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6653:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 582,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6653:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6647:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 597,
													"nodeType": "Block",
													"src": "6862:206:2",
													"statements": [
														{
															"id": 596,
															"nodeType": "UncheckedBlock",
															"src": "6876:182:2",
															"statements": [
																{
																	"expression": {
																		"id": 594,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 590,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 307,
																				"src": "7021:9:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 592,
																			"indexExpression": {
																				"id": 591,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 534,
																				"src": "7031:2:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "7021:13:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 593,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 536,
																			"src": "7038:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7021:22:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 595,
																	"nodeType": "ExpressionStatement",
																	"src": "7021:22:2"
																}
															]
														}
													]
												},
												"id": 598,
												"nodeType": "IfStatement",
												"src": "6643:425:2",
												"trueBody": {
													"id": 589,
													"nodeType": "Block",
													"src": "6665:191:2",
													"statements": [
														{
															"id": 588,
															"nodeType": "UncheckedBlock",
															"src": "6679:167:2",
															"statements": [
																{
																	"expression": {
																		"id": 586,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 584,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 315,
																			"src": "6810:12:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 585,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 536,
																			"src": "6826:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6810:21:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 587,
																	"nodeType": "ExpressionStatement",
																	"src": "6810:21:2"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 600,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 532,
															"src": "7092:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 601,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 534,
															"src": "7098:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 602,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 536,
															"src": "7102:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 599,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 811,
														"src": "7083:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 603,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7083:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 604,
												"nodeType": "EmitStatement",
												"src": "7078:30:2"
											}
										]
									},
									"documentation": {
										"id": 530,
										"nodeType": "StructuredDocumentation",
										"src": "5699:304:2",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 606,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "6017:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 537,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 532,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6033:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "6025:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 531,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6025:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 534,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6047:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "6039:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 533,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6039:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 536,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6059:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "6051:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 535,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6051:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6024:41:2"
									},
									"returnParameters": {
										"id": 538,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6083:0:2"
									},
									"scope": 799,
									"src": "6008:1107:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 638,
										"nodeType": "Block",
										"src": "7514:152:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 619,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 614,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 609,
														"src": "7528:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 617,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7547:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 616,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7539:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 615,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7539:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 618,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7539:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7528:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 628,
												"nodeType": "IfStatement",
												"src": "7524:91:2",
												"trueBody": {
													"id": 627,
													"nodeType": "Block",
													"src": "7551:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 623,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7601:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 622,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7593:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 621,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7593:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 624,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7593:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 620,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 169,
																	"src": "7572:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 625,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7572:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 626,
															"nodeType": "RevertStatement",
															"src": "7565:39:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 632,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7640:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 631,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7632:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 630,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7632:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 633,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7632:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 634,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 609,
															"src": "7644:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 635,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 611,
															"src": "7653:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 629,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "7624:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 636,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7624:35:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 637,
												"nodeType": "ExpressionStatement",
												"src": "7624:35:2"
											}
										]
									},
									"documentation": {
										"id": 607,
										"nodeType": "StructuredDocumentation",
										"src": "7121:332:2",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 639,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "7467:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 612,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 609,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7481:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 639,
												"src": "7473:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 608,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7473:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 611,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7498:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 639,
												"src": "7490:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 610,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7490:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7472:32:2"
									},
									"returnParameters": {
										"id": 613,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7514:0:2"
									},
									"scope": 799,
									"src": "7458:208:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 671,
										"nodeType": "Block",
										"src": "8040:150:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 652,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 647,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 642,
														"src": "8054:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 650,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8073:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 649,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8065:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 648,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8065:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 651,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8065:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8054:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 661,
												"nodeType": "IfStatement",
												"src": "8050:89:2",
												"trueBody": {
													"id": 660,
													"nodeType": "Block",
													"src": "8077:62:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 656,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8125:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 655,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8117:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 654,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8117:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 657,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8117:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 653,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 164,
																	"src": "8098:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 658,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8098:30:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 659,
															"nodeType": "RevertStatement",
															"src": "8091:37:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 663,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 642,
															"src": "8156:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 666,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8173:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 665,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8165:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 664,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8165:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 667,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8165:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 668,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 644,
															"src": "8177:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 662,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "8148:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 669,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8148:35:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 670,
												"nodeType": "ExpressionStatement",
												"src": "8148:35:2"
											}
										]
									},
									"documentation": {
										"id": 640,
										"nodeType": "StructuredDocumentation",
										"src": "7672:307:2",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 672,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "7993:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 645,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 642,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8007:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "7999:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 641,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7999:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 644,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8024:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "8016:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 643,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8016:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7998:32:2"
									},
									"returnParameters": {
										"id": 646,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8040:0:2"
									},
									"scope": 799,
									"src": "7984:206:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 689,
										"nodeType": "Block",
										"src": "8800:54:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 683,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 675,
															"src": "8819:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 684,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 677,
															"src": "8826:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 685,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 679,
															"src": "8835:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 686,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8842:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 682,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															690,
															750
														],
														"referencedDeclaration": 750,
														"src": "8810:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 687,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8810:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 688,
												"nodeType": "ExpressionStatement",
												"src": "8810:37:2"
											}
										]
									},
									"documentation": {
										"id": 673,
										"nodeType": "StructuredDocumentation",
										"src": "8196:525:2",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 690,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "8735:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 680,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 675,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "8752:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "8744:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 674,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8744:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 677,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "8767:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "8759:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 676,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8759:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 679,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8784:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "8776:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 678,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8776:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8743:47:2"
									},
									"returnParameters": {
										"id": 681,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8800:0:2"
									},
									"scope": 799,
									"src": "8726:128:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 749,
										"nodeType": "Block",
										"src": "9799:334:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 707,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 702,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 693,
														"src": "9813:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 705,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9830:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 704,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9822:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 703,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9822:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 706,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9822:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9813:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 716,
												"nodeType": "IfStatement",
												"src": "9809:89:2",
												"trueBody": {
													"id": 715,
													"nodeType": "Block",
													"src": "9834:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 711,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9884:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 710,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9876:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 709,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9876:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 712,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9876:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 708,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 183,
																	"src": "9855:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 713,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9855:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 714,
															"nodeType": "RevertStatement",
															"src": "9848:39:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 722,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 717,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 695,
														"src": "9911:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 720,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9930:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 719,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9922:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 718,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9922:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 721,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9922:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9911:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 731,
												"nodeType": "IfStatement",
												"src": "9907:90:2",
												"trueBody": {
													"id": 730,
													"nodeType": "Block",
													"src": "9934:63:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 726,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9983:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 725,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9975:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 724,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9975:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 727,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9975:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 723,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 188,
																	"src": "9955:19:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 728,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9955:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 729,
															"nodeType": "RevertStatement",
															"src": "9948:38:2"
														}
													]
												}
											},
											{
												"expression": {
													"id": 738,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 732,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 313,
																"src": "10006:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 735,
															"indexExpression": {
																"id": 733,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 693,
																"src": "10018:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10006:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 736,
														"indexExpression": {
															"id": 734,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 695,
															"src": "10025:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10006:27:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 737,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 697,
														"src": "10036:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10006:35:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 739,
												"nodeType": "ExpressionStatement",
												"src": "10006:35:2"
											},
											{
												"condition": {
													"id": 740,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 699,
													"src": "10055:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 748,
												"nodeType": "IfStatement",
												"src": "10051:76:2",
												"trueBody": {
													"id": 747,
													"nodeType": "Block",
													"src": "10066:61:2",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 742,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 693,
																		"src": "10094:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 743,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 695,
																		"src": "10101:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 744,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 697,
																		"src": "10110:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 741,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 820,
																	"src": "10085:8:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 745,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10085:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 746,
															"nodeType": "EmitStatement",
															"src": "10080:36:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 691,
										"nodeType": "StructuredDocumentation",
										"src": "8860:836:2",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```solidity\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 750,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "9710:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 700,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 693,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9727:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9719:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 692,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9719:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 695,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9742:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9734:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 694,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9734:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 697,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9759:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9751:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 696,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9751:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 699,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "9771:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9766:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 698,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9766:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9718:63:2"
									},
									"returnParameters": {
										"id": 701,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9799:0:2"
									},
									"scope": 799,
									"src": "9701:432:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 797,
										"nodeType": "Block",
										"src": "10504:388:2",
										"statements": [
											{
												"assignments": [
													761
												],
												"declarations": [
													{
														"constant": false,
														"id": 761,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "10522:16:2",
														"nodeType": "VariableDeclaration",
														"scope": 797,
														"src": "10514:24:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 760,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10514:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 766,
												"initialValue": {
													"arguments": [
														{
															"id": 763,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 753,
															"src": "10551:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 764,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 755,
															"src": "10558:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 762,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 426,
														"src": "10541:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 765,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10541:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10514:52:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 773,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 767,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 761,
														"src": "10580:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 770,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10605:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 769,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10605:7:2",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 768,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10600:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 771,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10600:13:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 772,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "10614:3:2",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10600:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10580:37:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 796,
												"nodeType": "IfStatement",
												"src": "10576:310:2",
												"trueBody": {
													"id": 795,
													"nodeType": "Block",
													"src": "10619:267:2",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 776,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 774,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 761,
																	"src": "10637:16:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 775,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 757,
																	"src": "10656:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10637:24:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 784,
															"nodeType": "IfStatement",
															"src": "10633:130:2",
															"trueBody": {
																"id": 783,
																"nodeType": "Block",
																"src": "10663:100:2",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 778,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 755,
																					"src": "10715:7:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 779,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 761,
																					"src": "10724:16:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 780,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 757,
																					"src": "10742:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 777,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 178,
																				"src": "10688:26:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 781,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10688:60:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 782,
																		"nodeType": "RevertStatement",
																		"src": "10681:67:2"
																	}
																]
															}
														},
														{
															"id": 794,
															"nodeType": "UncheckedBlock",
															"src": "10776:100:2",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 786,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 753,
																				"src": "10813:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 787,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 755,
																				"src": "10820:7:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 790,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 788,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 761,
																					"src": "10829:16:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 789,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 757,
																					"src": "10848:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10829:24:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 791,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10855:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 785,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				690,
																				750
																			],
																			"referencedDeclaration": 750,
																			"src": "10804:8:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 792,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10804:57:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 793,
																	"nodeType": "ExpressionStatement",
																	"src": "10804:57:2"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 751,
										"nodeType": "StructuredDocumentation",
										"src": "10139:271:2",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 798,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "10424:15:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 758,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 753,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10448:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "10440:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 752,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10440:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 755,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10463:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "10455:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 754,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10455:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 757,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10480:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "10472:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 756,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10472:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10439:47:2"
									},
									"returnParameters": {
										"id": 759,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10504:0:2"
									},
									"scope": 799,
									"src": "10415:477:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 800,
							"src": "1106:9788:2",
							"usedErrors": [
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": [
								811,
								820
							]
						}
					],
					"src": "105:10790:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							877
						]
					},
					"id": 878,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 801,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 802,
								"nodeType": "StructuredDocumentation",
								"src": "132:71:3",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 877,
							"linearizedBaseContracts": [
								877
							],
							"name": "IERC20",
							"nameLocation": "214:6:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 803,
										"nodeType": "StructuredDocumentation",
										"src": "227:158:3",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 811,
									"name": "Transfer",
									"nameLocation": "396:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 810,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 805,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "421:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "405:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 804,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "405:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 807,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "443:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "427:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 806,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "427:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 809,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "455:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "447:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 808,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "447:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "404:57:3"
									},
									"src": "390:72:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 812,
										"nodeType": "StructuredDocumentation",
										"src": "468:148:3",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 820,
									"name": "Approval",
									"nameLocation": "627:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 819,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 814,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "652:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "636:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 813,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "636:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 816,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "675:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "659:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 815,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "659:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 818,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "692:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "684:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 817,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "684:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "635:63:3"
									},
									"src": "621:78:3"
								},
								{
									"documentation": {
										"id": 821,
										"nodeType": "StructuredDocumentation",
										"src": "705:65:3",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 826,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "784:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 822,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "795:2:3"
									},
									"returnParameters": {
										"id": 825,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 824,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 826,
												"src": "821:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 823,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "821:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "820:9:3"
									},
									"scope": 877,
									"src": "775:55:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 827,
										"nodeType": "StructuredDocumentation",
										"src": "836:71:3",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 834,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 830,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 829,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 834,
												"src": "931:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 828,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:3"
									},
									"returnParameters": {
										"id": 833,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 832,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 834,
												"src": "971:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 831,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:3"
									},
									"scope": 877,
									"src": "912:68:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 835,
										"nodeType": "StructuredDocumentation",
										"src": "986:213:3",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 844,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1213:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 840,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 837,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1230:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "1222:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 836,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 839,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1242:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "1234:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 838,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1221:27:3"
									},
									"returnParameters": {
										"id": 843,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 842,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "1267:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 841,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1267:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1266:6:3"
									},
									"scope": 877,
									"src": "1204:69:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 845,
										"nodeType": "StructuredDocumentation",
										"src": "1279:264:3",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 854,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1557:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 850,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 847,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1575:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1567:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 846,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1567:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 849,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1590:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1582:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 848,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1582:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1566:32:3"
									},
									"returnParameters": {
										"id": 853,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 852,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1622:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 851,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1622:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1621:9:3"
									},
									"scope": 877,
									"src": "1548:83:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 855,
										"nodeType": "StructuredDocumentation",
										"src": "1637:667:3",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 864,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2318:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 860,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 857,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2334:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "2326:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 856,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2326:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 859,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2351:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "2343:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 858,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2325:32:3"
									},
									"returnParameters": {
										"id": 863,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 862,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "2376:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 861,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2376:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2375:6:3"
									},
									"scope": 877,
									"src": "2309:73:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 865,
										"nodeType": "StructuredDocumentation",
										"src": "2388:297:3",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 876,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2699:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 872,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 867,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2720:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2712:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 866,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2712:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 869,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2734:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2726:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 868,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2726:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 871,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2746:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2738:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 870,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2738:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:41:3"
									},
									"returnParameters": {
										"id": 875,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 874,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2771:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 873,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2771:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2770:6:3"
									},
									"scope": 877,
									"src": "2690:87:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 878,
							"src": "204:2575:3",
							"usedErrors": [],
							"usedEvents": [
								811,
								820
							]
						}
					],
					"src": "106:2674:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							877
						],
						"IERC20Metadata": [
							903
						]
					},
					"id": 904,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 879,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "125:24:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 881,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 904,
							"sourceUnit": 878,
							"src": "151:37:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 880,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 877,
										"src": "159:6:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 883,
										"name": "IERC20",
										"nameLocations": [
											"306:6:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 877,
										"src": "306:6:4"
									},
									"id": 884,
									"nodeType": "InheritanceSpecifier",
									"src": "306:6:4"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 882,
								"nodeType": "StructuredDocumentation",
								"src": "190:87:4",
								"text": " @dev Interface for the optional metadata functions from the ERC-20 standard."
							},
							"fullyImplemented": false,
							"id": 903,
							"linearizedBaseContracts": [
								903,
								877
							],
							"name": "IERC20Metadata",
							"nameLocation": "288:14:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 885,
										"nodeType": "StructuredDocumentation",
										"src": "319:54:4",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 890,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "387:4:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 886,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "391:2:4"
									},
									"returnParameters": {
										"id": 889,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 888,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 890,
												"src": "417:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 887,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "417:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "416:15:4"
									},
									"scope": 903,
									"src": "378:54:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 891,
										"nodeType": "StructuredDocumentation",
										"src": "438:56:4",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 896,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "508:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 892,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "514:2:4"
									},
									"returnParameters": {
										"id": 895,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 894,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 896,
												"src": "540:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 893,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "540:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "539:15:4"
									},
									"scope": 903,
									"src": "499:56:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 897,
										"nodeType": "StructuredDocumentation",
										"src": "561:65:4",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 902,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "640:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 898,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "648:2:4"
									},
									"returnParameters": {
										"id": 901,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 900,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 902,
												"src": "674:5:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 899,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "674:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "673:7:4"
									},
									"scope": 903,
									"src": "631:50:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 904,
							"src": "278:405:4",
							"usedErrors": [],
							"usedEvents": [
								811,
								820
							]
						}
					],
					"src": "125:559:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							933
						]
					},
					"id": 934,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 905,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:5"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 906,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:5",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 933,
							"linearizedBaseContracts": [
								933
							],
							"name": "Context",
							"nameLocation": "642:7:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 914,
										"nodeType": "Block",
										"src": "718:34:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 911,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 912,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:5",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 910,
												"id": 913,
												"nodeType": "Return",
												"src": "728:17:5"
											}
										]
									},
									"id": 915,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 907,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:5"
									},
									"returnParameters": {
										"id": 910,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 909,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 915,
												"src": "709:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 908,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:5"
									},
									"scope": 933,
									"src": "656:96:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 923,
										"nodeType": "Block",
										"src": "825:32:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 920,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 921,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:5",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 919,
												"id": 922,
												"nodeType": "Return",
												"src": "835:15:5"
											}
										]
									},
									"id": 924,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 916,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:5"
									},
									"returnParameters": {
										"id": 919,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 918,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 924,
												"src": "809:14:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 917,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:5"
									},
									"scope": 933,
									"src": "758:99:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 931,
										"nodeType": "Block",
										"src": "935:25:5",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 929,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:5",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 928,
												"id": 930,
												"nodeType": "Return",
												"src": "945:8:5"
											}
										]
									},
									"id": 932,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 925,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:5"
									},
									"returnParameters": {
										"id": 928,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 927,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 932,
												"src": "926:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 926,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:5"
									},
									"scope": 933,
									"src": "863:97:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 934,
							"src": "624:338:5",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:5"
				},
				"id": 5
			},
			"contracts/ICFT.sol": {
				"ast": {
					"absolutePath": "contracts/ICFT.sol",
					"exportedSymbols": {
						"Context": [
							933
						],
						"ERC20": [
							799
						],
						"IERC20": [
							877
						],
						"IERC20Errors": [
							189
						],
						"IERC20Metadata": [
							903
						],
						"IndependentCapitalFundToken": [
							1183
						],
						"Ownable": [
							147
						]
					},
					"id": 1184,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 935,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"id": 936,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1184,
							"sourceUnit": 800,
							"src": "57:55:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 937,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1184,
							"sourceUnit": 148,
							"src": "113:52:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 938,
										"name": "ERC20",
										"nameLocations": [
											"207:5:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 799,
										"src": "207:5:6"
									},
									"id": 939,
									"nodeType": "InheritanceSpecifier",
									"src": "207:5:6"
								},
								{
									"baseName": {
										"id": 940,
										"name": "Ownable",
										"nameLocations": [
											"214:7:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 147,
										"src": "214:7:6"
									},
									"id": 941,
									"nodeType": "InheritanceSpecifier",
									"src": "214:7:6"
								}
							],
							"canonicalName": "IndependentCapitalFundToken",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1183,
							"linearizedBaseContracts": [
								1183,
								147,
								799,
								189,
								903,
								877,
								933
							],
							"name": "IndependentCapitalFundToken",
							"nameLocation": "176:27:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "8ac27f5f",
									"id": 943,
									"mutability": "mutable",
									"name": "investors",
									"nameLocation": "283:9:6",
									"nodeType": "VariableDeclaration",
									"scope": 1183,
									"src": "268:24:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 942,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "268:7:6",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "3829b0dc",
									"id": 945,
									"mutability": "mutable",
									"name": "projectTeam",
									"nameLocation": "313:11:6",
									"nodeType": "VariableDeclaration",
									"scope": 1183,
									"src": "298:26:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 944,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "298:7:6",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "cd3293de",
									"id": 947,
									"mutability": "mutable",
									"name": "reserve",
									"nameLocation": "345:7:6",
									"nodeType": "VariableDeclaration",
									"scope": 1183,
									"src": "330:22:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 946,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "330:7:6",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "2d3e474a",
									"id": 949,
									"mutability": "mutable",
									"name": "marketing",
									"nameLocation": "373:9:6",
									"nodeType": "VariableDeclaration",
									"scope": 1183,
									"src": "358:24:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 948,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "358:7:6",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "59d7bd71",
									"id": 951,
									"mutability": "mutable",
									"name": "communityIncentives",
									"nameLocation": "403:19:6",
									"nodeType": "VariableDeclaration",
									"scope": 1183,
									"src": "388:34:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 950,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "388:7:6",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "221322d5",
									"id": 955,
									"mutability": "mutable",
									"name": "lockupExpiry",
									"nameLocation": "504:12:6",
									"nodeType": "VariableDeclaration",
									"scope": 1183,
									"src": "469:47:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 954,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 952,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "477:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "469:27:6",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 953,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "488:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 1088,
										"nodeType": "Block",
										"src": "822:1074:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 985,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 980,
																"name": "initialOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 957,
																"src": "840:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 983,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "864:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 982,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "856:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 981,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "856:7:6",
																		"typeDescriptions": {}
																	}
																},
																"id": 984,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "856:10:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "840:26:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c6964206f776e65722061646472657373",
															"id": 986,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "868:23:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_854cf043fa623ebed8453fda259d33de3f6e7493e6b8ff90fcfdd906ab498ce3",
																"typeString": "literal_string \"Invalid owner address\""
															},
															"value": "Invalid owner address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_854cf043fa623ebed8453fda259d33de3f6e7493e6b8ff90fcfdd906ab498ce3",
																"typeString": "literal_string \"Invalid owner address\""
															}
														],
														"id": 979,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "832:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 987,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "832:60:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 988,
												"nodeType": "ExpressionStatement",
												"src": "832:60:6"
											},
											{
												"expression": {
													"id": 991,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 989,
														"name": "investors",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 943,
														"src": "948:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 990,
														"name": "_investors",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 959,
														"src": "960:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "948:22:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 992,
												"nodeType": "ExpressionStatement",
												"src": "948:22:6"
											},
											{
												"expression": {
													"id": 995,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 993,
														"name": "projectTeam",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 945,
														"src": "980:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 994,
														"name": "_projectTeam",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 961,
														"src": "994:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "980:26:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 996,
												"nodeType": "ExpressionStatement",
												"src": "980:26:6"
											},
											{
												"expression": {
													"id": 999,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 997,
														"name": "reserve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 947,
														"src": "1016:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 998,
														"name": "_reserve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 963,
														"src": "1026:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1016:18:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1000,
												"nodeType": "ExpressionStatement",
												"src": "1016:18:6"
											},
											{
												"expression": {
													"id": 1003,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1001,
														"name": "marketing",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 949,
														"src": "1044:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1002,
														"name": "_marketing",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 965,
														"src": "1056:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1044:22:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1004,
												"nodeType": "ExpressionStatement",
												"src": "1044:22:6"
											},
											{
												"expression": {
													"id": 1007,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1005,
														"name": "communityIncentives",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 951,
														"src": "1076:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1006,
														"name": "_communityIncentives",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 967,
														"src": "1098:20:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1076:42:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1008,
												"nodeType": "ExpressionStatement",
												"src": "1076:42:6"
											},
											{
												"assignments": [
													1010
												],
												"declarations": [
													{
														"constant": false,
														"id": 1010,
														"mutability": "mutable",
														"name": "investorsAmount",
														"nameLocation": "1192:15:6",
														"nodeType": "VariableDeclaration",
														"scope": 1088,
														"src": "1184:23:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1009,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1184:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1017,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1016,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1013,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1011,
																	"name": "initialSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 969,
																	"src": "1211:13:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"hexValue": "3630",
																	"id": 1012,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1227:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_60_by_1",
																		"typeString": "int_const 60"
																	},
																	"value": "60"
																},
																"src": "1211:18:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1014,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1210:20:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "313030",
														"id": 1015,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1233:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_100_by_1",
															"typeString": "int_const 100"
														},
														"value": "100"
													},
													"src": "1210:26:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1184:52:6"
											},
											{
												"assignments": [
													1019
												],
												"declarations": [
													{
														"constant": false,
														"id": 1019,
														"mutability": "mutable",
														"name": "projectTeamAmount",
														"nameLocation": "1254:17:6",
														"nodeType": "VariableDeclaration",
														"scope": 1088,
														"src": "1246:25:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1018,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1246:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1026,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1025,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1022,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1020,
																	"name": "initialSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 969,
																	"src": "1275:13:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"hexValue": "3230",
																	"id": 1021,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1291:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_20_by_1",
																		"typeString": "int_const 20"
																	},
																	"value": "20"
																},
																"src": "1275:18:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1023,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1274:20:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "313030",
														"id": 1024,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1297:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_100_by_1",
															"typeString": "int_const 100"
														},
														"value": "100"
													},
													"src": "1274:26:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1246:54:6"
											},
											{
												"assignments": [
													1028
												],
												"declarations": [
													{
														"constant": false,
														"id": 1028,
														"mutability": "mutable",
														"name": "reserveAmount",
														"nameLocation": "1318:13:6",
														"nodeType": "VariableDeclaration",
														"scope": 1088,
														"src": "1310:21:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1027,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1310:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1035,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1034,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1031,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1029,
																	"name": "initialSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 969,
																	"src": "1335:13:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"hexValue": "3130",
																	"id": 1030,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1351:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"src": "1335:18:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1032,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1334:20:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "313030",
														"id": 1033,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1357:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_100_by_1",
															"typeString": "int_const 100"
														},
														"value": "100"
													},
													"src": "1334:26:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1310:50:6"
											},
											{
												"assignments": [
													1037
												],
												"declarations": [
													{
														"constant": false,
														"id": 1037,
														"mutability": "mutable",
														"name": "marketingAmount",
														"nameLocation": "1378:15:6",
														"nodeType": "VariableDeclaration",
														"scope": 1088,
														"src": "1370:23:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1036,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1370:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1044,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1043,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1040,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1038,
																	"name": "initialSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 969,
																	"src": "1397:13:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"hexValue": "35",
																	"id": 1039,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1413:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_5_by_1",
																		"typeString": "int_const 5"
																	},
																	"value": "5"
																},
																"src": "1397:17:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1041,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1396:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "313030",
														"id": 1042,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1418:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_100_by_1",
															"typeString": "int_const 100"
														},
														"value": "100"
													},
													"src": "1396:25:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1370:51:6"
											},
											{
												"assignments": [
													1046
												],
												"declarations": [
													{
														"constant": false,
														"id": 1046,
														"mutability": "mutable",
														"name": "communityIncentivesAmount",
														"nameLocation": "1439:25:6",
														"nodeType": "VariableDeclaration",
														"scope": 1088,
														"src": "1431:33:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1045,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1431:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1053,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1052,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1049,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1047,
																	"name": "initialSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 969,
																	"src": "1468:13:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"hexValue": "35",
																	"id": 1048,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1484:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_5_by_1",
																		"typeString": "int_const 5"
																	},
																	"value": "5"
																},
																"src": "1468:17:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1050,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1467:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "313030",
														"id": 1051,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1489:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_100_by_1",
															"typeString": "int_const 100"
														},
														"value": "100"
													},
													"src": "1467:25:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1431:61:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1055,
															"name": "_investors",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 959,
															"src": "1548:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1056,
															"name": "investorsAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1010,
															"src": "1560:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1054,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 639,
														"src": "1542:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1057,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1542:34:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1058,
												"nodeType": "ExpressionStatement",
												"src": "1542:34:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1060,
															"name": "_projectTeam",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 961,
															"src": "1592:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1061,
															"name": "projectTeamAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1019,
															"src": "1606:17:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1059,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 639,
														"src": "1586:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1062,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1586:38:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1063,
												"nodeType": "ExpressionStatement",
												"src": "1586:38:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1065,
															"name": "_reserve",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 963,
															"src": "1640:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1066,
															"name": "reserveAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1028,
															"src": "1650:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1064,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 639,
														"src": "1634:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1067,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1634:30:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1068,
												"nodeType": "ExpressionStatement",
												"src": "1634:30:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1070,
															"name": "_marketing",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 965,
															"src": "1680:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1071,
															"name": "marketingAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1037,
															"src": "1692:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1069,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 639,
														"src": "1674:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1072,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1674:34:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1073,
												"nodeType": "ExpressionStatement",
												"src": "1674:34:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1075,
															"name": "_communityIncentives",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 967,
															"src": "1724:20:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1076,
															"name": "communityIncentivesAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1046,
															"src": "1746:25:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1074,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 639,
														"src": "1718:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1077,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1718:54:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1078,
												"nodeType": "ExpressionStatement",
												"src": "1718:54:6"
											},
											{
												"expression": {
													"id": 1086,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1079,
															"name": "lockupExpiry",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 955,
															"src": "1834:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1081,
														"indexExpression": {
															"id": 1080,
															"name": "_projectTeam",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 961,
															"src": "1847:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1834:26:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1085,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 1082,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "1863:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 1083,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1869:9:6",
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "1863:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "333635",
															"id": 1084,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1881:8:6",
															"subdenomination": "days",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_31536000_by_1",
																"typeString": "int_const 31536000"
															},
															"value": "365"
														},
														"src": "1863:26:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1834:55:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1087,
												"nodeType": "ExpressionStatement",
												"src": "1834:55:6"
											}
										]
									},
									"id": 1089,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "496e646570656e64656e74204361706974616c2046756e6420546f6b656e",
													"id": 972,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "758:32:6",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_8e1783ed528476d91a6e80aa649c5d5386ae135cf53a52fe01a1445f92774167",
														"typeString": "literal_string \"Independent Capital Fund Token\""
													},
													"value": "Independent Capital Fund Token"
												},
												{
													"hexValue": "49434654",
													"id": 973,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "792:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_d3677a73e726e829c35ec5c437e1a857e2cb260b28d79354e9fc5cf817a10814",
														"typeString": "literal_string \"ICFT\""
													},
													"value": "ICFT"
												}
											],
											"id": 974,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 971,
												"name": "ERC20",
												"nameLocations": [
													"752:5:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 799,
												"src": "752:5:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "752:47:6"
										},
										{
											"arguments": [
												{
													"id": 976,
													"name": "initialOwner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 957,
													"src": "808:12:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 977,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 975,
												"name": "Ownable",
												"nameLocations": [
													"800:7:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "800:7:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "800:21:6"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 970,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 957,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "552:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 1089,
												"src": "544:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 956,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "544:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 959,
												"mutability": "mutable",
												"name": "_investors",
												"nameLocation": "582:10:6",
												"nodeType": "VariableDeclaration",
												"scope": 1089,
												"src": "574:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 958,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "574:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 961,
												"mutability": "mutable",
												"name": "_projectTeam",
												"nameLocation": "610:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 1089,
												"src": "602:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 960,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "602:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 963,
												"mutability": "mutable",
												"name": "_reserve",
												"nameLocation": "640:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1089,
												"src": "632:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 962,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "632:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 965,
												"mutability": "mutable",
												"name": "_marketing",
												"nameLocation": "666:10:6",
												"nodeType": "VariableDeclaration",
												"scope": 1089,
												"src": "658:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 964,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "658:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 967,
												"mutability": "mutable",
												"name": "_communityIncentives",
												"nameLocation": "694:20:6",
												"nodeType": "VariableDeclaration",
												"scope": 1089,
												"src": "686:28:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 966,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "686:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 969,
												"mutability": "mutable",
												"name": "initialSupply",
												"nameLocation": "732:13:6",
												"nodeType": "VariableDeclaration",
												"scope": 1089,
												"src": "724:21:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 968,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "724:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "534:217:6"
									},
									"returnParameters": {
										"id": 978,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "822:0:6"
									},
									"scope": 1183,
									"src": "523:1373:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										409
									],
									"body": {
										"id": 1116,
										"nodeType": "Block",
										"src": "2043:133:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1106,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1100,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "2061:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 1101,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2067:9:6",
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "2061:15:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"baseExpression": {
																	"id": 1102,
																	"name": "lockupExpiry",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 955,
																	"src": "2080:12:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1105,
																"indexExpression": {
																	"expression": {
																		"id": 1103,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "2093:3:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1104,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2097:6:6",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "2093:10:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2080:24:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2061:43:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "546f6b656e7320617265206c6f636b6564",
															"id": 1107,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2106:19:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ef6b37cd0f982d2bb7242be4a25d6ba1cc9450d578c0a8ad1cd18136757f29cc",
																"typeString": "literal_string \"Tokens are locked\""
															},
															"value": "Tokens are locked"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ef6b37cd0f982d2bb7242be4a25d6ba1cc9450d578c0a8ad1cd18136757f29cc",
																"typeString": "literal_string \"Tokens are locked\""
															}
														],
														"id": 1099,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2053:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1108,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2053:73:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1109,
												"nodeType": "ExpressionStatement",
												"src": "2053:73:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1112,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1091,
															"src": "2158:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1113,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1093,
															"src": "2162:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1110,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "2143:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_IndependentCapitalFundToken_$1183_$",
																"typeString": "type(contract super IndependentCapitalFundToken)"
															}
														},
														"id": 1111,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2149:8:6",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 409,
														"src": "2143:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) returns (bool)"
														}
													},
													"id": 1114,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2143:26:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1098,
												"id": 1115,
												"nodeType": "Return",
												"src": "2136:33:6"
											}
										]
									},
									"functionSelector": "a9059cbb",
									"id": 1117,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1975:8:6",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1095,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2019:8:6"
									},
									"parameters": {
										"id": 1094,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1091,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1992:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1117,
												"src": "1984:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1090,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1984:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1093,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2004:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1117,
												"src": "1996:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1092,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1996:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1983:28:6"
									},
									"returnParameters": {
										"id": 1098,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1097,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1117,
												"src": "2037:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1096,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2037:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2036:6:6"
									},
									"scope": 1183,
									"src": "1966:210:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										482
									],
									"body": {
										"id": 1146,
										"nodeType": "Block",
										"src": "2345:137:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1135,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1130,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "2363:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 1131,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2369:9:6",
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "2363:15:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"baseExpression": {
																	"id": 1132,
																	"name": "lockupExpiry",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 955,
																	"src": "2382:12:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1134,
																"indexExpression": {
																	"id": 1133,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1119,
																	"src": "2395:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2382:18:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2363:37:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "546f6b656e7320617265206c6f636b6564",
															"id": 1136,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2402:19:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ef6b37cd0f982d2bb7242be4a25d6ba1cc9450d578c0a8ad1cd18136757f29cc",
																"typeString": "literal_string \"Tokens are locked\""
															},
															"value": "Tokens are locked"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ef6b37cd0f982d2bb7242be4a25d6ba1cc9450d578c0a8ad1cd18136757f29cc",
																"typeString": "literal_string \"Tokens are locked\""
															}
														],
														"id": 1129,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2355:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1137,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2355:67:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1138,
												"nodeType": "ExpressionStatement",
												"src": "2355:67:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1141,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1119,
															"src": "2458:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1142,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1121,
															"src": "2464:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1143,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1123,
															"src": "2468:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1139,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "2439:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_IndependentCapitalFundToken_$1183_$",
																"typeString": "type(contract super IndependentCapitalFundToken)"
															}
														},
														"id": 1140,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2445:12:6",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 482,
														"src": "2439:18:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) returns (bool)"
														}
													},
													"id": 1144,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2439:36:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1128,
												"id": 1145,
												"nodeType": "Return",
												"src": "2432:43:6"
											}
										]
									},
									"functionSelector": "23b872dd",
									"id": 1147,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2259:12:6",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1125,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2321:8:6"
									},
									"parameters": {
										"id": 1124,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1119,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2280:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1147,
												"src": "2272:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1118,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2272:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1121,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2294:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1147,
												"src": "2286:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1120,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2286:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1123,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2306:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1147,
												"src": "2298:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1122,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2298:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2271:42:6"
									},
									"returnParameters": {
										"id": 1128,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1127,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1147,
												"src": "2339:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1126,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2339:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2338:6:6"
									},
									"scope": 1183,
									"src": "2250:232:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1161,
										"nodeType": "Block",
										"src": "2612:34:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1157,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1149,
															"src": "2628:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1158,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1151,
															"src": "2632:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1156,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 639,
														"src": "2622:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1159,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2622:17:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1160,
												"nodeType": "ExpressionStatement",
												"src": "2622:17:6"
											}
										]
									},
									"functionSelector": "40c10f19",
									"id": 1162,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1154,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1153,
												"name": "onlyOwner",
												"nameLocations": [
													"2602:9:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2602:9:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "2602:9:6"
										}
									],
									"name": "mint",
									"nameLocation": "2562:4:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1152,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1149,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2575:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1162,
												"src": "2567:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1148,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2567:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1151,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2587:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1162,
												"src": "2579:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1150,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2579:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2566:28:6"
									},
									"returnParameters": {
										"id": 1155,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2612:0:6"
									},
									"scope": 1183,
									"src": "2553:93:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1175,
										"nodeType": "Block",
										"src": "2785:42:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1170,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2801:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1171,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2805:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2801:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1172,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1164,
															"src": "2813:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1169,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 672,
														"src": "2795:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1173,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2795:25:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1174,
												"nodeType": "ExpressionStatement",
												"src": "2795:25:6"
											}
										]
									},
									"functionSelector": "42966c68",
									"id": 1176,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1167,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1166,
												"name": "onlyOwner",
												"nameLocations": [
													"2775:9:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2775:9:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "2775:9:6"
										}
									],
									"name": "burn",
									"nameLocation": "2747:4:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1165,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1164,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2760:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1176,
												"src": "2752:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1163,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2752:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2751:16:6"
									},
									"returnParameters": {
										"id": 1168,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2785:0:6"
									},
									"scope": 1183,
									"src": "2738:89:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1181,
										"nodeType": "Block",
										"src": "2962:61:6",
										"statements": []
									},
									"functionSelector": "1f4e1504",
									"id": 1182,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1179,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1178,
												"name": "onlyOwner",
												"nameLocations": [
													"2952:9:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2952:9:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "2952:9:6"
										}
									],
									"name": "upgradeContract",
									"nameLocation": "2927:15:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1177,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2942:2:6"
									},
									"returnParameters": {
										"id": 1180,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2962:0:6"
									},
									"scope": 1183,
									"src": "2918:105:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 1184,
							"src": "167:2858:6",
							"usedErrors": [
								13,
								18,
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": [
								24,
								811,
								820
							]
						}
					],
					"src": "32:2994:6"
				},
				"id": 6
			}
		}
	}
}